import { OnInit, EventEmitter } from '@angular/core';
import { TranslateService } from '@ngx-translate/core';
import { FileUploader } from 'ng2-file-upload';
import { FormGroup } from '@angular/forms';
import { FileService, LAYOUT_TYPE, CustomizationService } from '@pepperi-addons/ngx-lib';
import { DialogService } from '@pepperi-addons/ngx-lib/dialog';
import * as i0 from "@angular/core";
export declare class FilesUploaderComponent implements OnInit {
    private translate;
    private dialogService;
    private customizationService;
    private fileService;
    key: string;
    src: string;
    label: string;
    required: boolean;
    disabled: boolean;
    xAlignment: string;
    rowSpan: number;
    controlType: string;
    sizeLimitMB: number;
    form: FormGroup;
    standAlone: boolean;
    acceptedExtensions: string;
    layoutType: LAYOUT_TYPE;
    fileChanged: EventEmitter<any>;
    elementClicked: EventEmitter<any>;
    fileInput: any;
    imagePreview: any;
    LAYOUT_TYPE: typeof LAYOUT_TYPE;
    fieldHeight: string;
    uploader: FileUploader;
    progress: number;
    intervalID: any;
    constructor(translate: TranslateService, dialogService: DialogService, customizationService: CustomizationService, fileService: FileService);
    ngOnInit(): void;
    isValidFile(fileStr: any, fileExtension: any, acceptedExtensions: any, sizeLimitMB?: number): string;
    getBase64FileSize(base64String: string): number;
    setIntervalX(delay: any, repetitions: any): void;
    errorHandler(event: any): void;
    private setProgress;
    deleteFile(): void;
    onElementClicked(event: any): void;
    onClick_ChooseFile(event: any): void;
    onKeyPress_ChooseFile(event: any): void;
    static ɵfac: i0.ɵɵFactoryDef<FilesUploaderComponent, never>;
    static ɵcmp: i0.ɵɵComponentDefWithMeta<FilesUploaderComponent, "files-uploader", never, { "key": "key"; "src": "src"; "label": "label"; "required": "required"; "disabled": "disabled"; "xAlignment": "xAlignment"; "rowSpan": "rowSpan"; "controlType": "controlType"; "sizeLimitMB": "sizeLimitMB"; "form": "form"; "standAlone": "standAlone"; "acceptedExtensions": "acceptedExtensions"; "layoutType": "layoutType"; }, { "fileChanged": "fileChanged"; "elementClicked": "elementClicked"; }, never, never>;
    static ɵprov: i0.ɵɵInjectableDef<FilesUploaderComponent>;
}
