export var FIELD_TYPE;
(function (FIELD_TYPE) {
    // specify text field
    FIELD_TYPE[FIELD_TYPE["Default"] = 0] = "Default";
    FIELD_TYPE[FIELD_TYPE["TextBox"] = 1] = "TextBox";
    FIELD_TYPE[FIELD_TYPE["LimitedLengthTextBox"] = 2] = "LimitedLengthTextBox";
    // specify text area field
    FIELD_TYPE[FIELD_TYPE["TextArea"] = 3] = "TextArea";
    FIELD_TYPE[FIELD_TYPE["TextHeader"] = 4] = "TextHeader";
    // specify date field
    FIELD_TYPE[FIELD_TYPE["Date"] = 5] = "Date";
    // specify date & time field
    FIELD_TYPE[FIELD_TYPE["DateAndTime"] = 6] = "DateAndTime";
    // specify integer field
    FIELD_TYPE[FIELD_TYPE["NumberInteger"] = 7] = "NumberInteger";
    // specify decimal field
    FIELD_TYPE[FIELD_TYPE["NumberReal"] = 8] = "NumberReal";
    // specify currency field
    FIELD_TYPE[FIELD_TYPE["Currency"] = 9] = "Currency";
    // specify boolean field
    FIELD_TYPE[FIELD_TYPE["Boolean"] = 10] = "Boolean";
    // specify multiple options field
    FIELD_TYPE[FIELD_TYPE["ComboBox"] = 11] = "ComboBox";
    // specify multiple options field
    FIELD_TYPE[FIELD_TYPE["MultiTickBox"] = 12] = "MultiTickBox";
    // specify separator (view only) field
    FIELD_TYPE[FIELD_TYPE["Separator"] = 13] = "Separator";
    // specify address field
    FIELD_TYPE[FIELD_TYPE["Address"] = 14] = "Address";
    // specify percentage field
    FIELD_TYPE[FIELD_TYPE["Percentage"] = 15] = "Percentage";
    FIELD_TYPE[FIELD_TYPE["EmptyComboBox"] = 16] = "EmptyComboBox";
    FIELD_TYPE[FIELD_TYPE["InternalLink"] = 17] = "InternalLink";
    // specify email field
    FIELD_TYPE[FIELD_TYPE["Email"] = 18] = "Email";
    FIELD_TYPE[FIELD_TYPE["LimitedDate"] = 19] = "LimitedDate";
    // specify image field
    FIELD_TYPE[FIELD_TYPE["Image"] = 20] = "Image";
    FIELD_TYPE[FIELD_TYPE["MultiTickBoxToComboBox"] = 21] = "MultiTickBoxToComboBox";
    FIELD_TYPE[FIELD_TYPE["EmptyMultiTickBox"] = 22] = "EmptyMultiTickBox";
    FIELD_TYPE[FIELD_TYPE["Totals"] = 23] = "Totals";
    // specify attachment field
    FIELD_TYPE[FIELD_TYPE["Attachment"] = 24] = "Attachment";
    FIELD_TYPE[FIELD_TYPE["Signature"] = 25] = "Signature";
    // specify link field
    FIELD_TYPE[FIELD_TYPE["Link"] = 26] = "Link";
    // specify image url field
    FIELD_TYPE[FIELD_TYPE["ImageURL"] = 27] = "ImageURL";
    FIELD_TYPE[FIELD_TYPE["NumberIntegerQuantitySelector"] = 28] = "NumberIntegerQuantitySelector";
    FIELD_TYPE[FIELD_TYPE["NumberRealQuantitySelector"] = 29] = "NumberRealQuantitySelector";
    FIELD_TYPE[FIELD_TYPE["NumberIntegerForMatrix"] = 30] = "NumberIntegerForMatrix";
    FIELD_TYPE[FIELD_TYPE["NumberRealForMatrix"] = 31] = "NumberRealForMatrix";
    FIELD_TYPE[FIELD_TYPE["Images"] = 32] = "Images";
    FIELD_TYPE[FIELD_TYPE["Indicators"] = 33] = "Indicators";
    FIELD_TYPE[FIELD_TYPE["CalculatedReal"] = 34] = "CalculatedReal";
    FIELD_TYPE[FIELD_TYPE["CalculatedInt"] = 35] = "CalculatedInt";
    FIELD_TYPE[FIELD_TYPE["CalculatedString"] = 36] = "CalculatedString";
    FIELD_TYPE[FIELD_TYPE["CalculatedDate"] = 37] = "CalculatedDate";
    FIELD_TYPE[FIELD_TYPE["CalculatedBool"] = 38] = "CalculatedBool";
    FIELD_TYPE[FIELD_TYPE["MapDataDropDown"] = 39] = "MapDataDropDown";
    FIELD_TYPE[FIELD_TYPE["MapDataReal"] = 40] = "MapDataReal";
    FIELD_TYPE[FIELD_TYPE["MapDataString"] = 41] = "MapDataString";
    FIELD_TYPE[FIELD_TYPE["MapDataInt"] = 42] = "MapDataInt";
    FIELD_TYPE[FIELD_TYPE["Sum"] = 43] = "Sum";
    FIELD_TYPE[FIELD_TYPE["Phone"] = 44] = "Phone";
    FIELD_TYPE[FIELD_TYPE["UrlForApi"] = 45] = "UrlForApi";
    FIELD_TYPE[FIELD_TYPE["ManyToManyUrlForApi"] = 46] = "ManyToManyUrlForApi";
    FIELD_TYPE[FIELD_TYPE["ReferenceType"] = 47] = "ReferenceType";
    FIELD_TYPE[FIELD_TYPE["GuidReferenceType"] = 48] = "GuidReferenceType";
    FIELD_TYPE[FIELD_TYPE["Button"] = 49] = "Button";
    FIELD_TYPE[FIELD_TYPE["InternalPage"] = 50] = "InternalPage";
    FIELD_TYPE[FIELD_TYPE["Duration"] = 51] = "Duration";
    FIELD_TYPE[FIELD_TYPE["ListOfObjects"] = 52] = "ListOfObjects";
    FIELD_TYPE[FIELD_TYPE["Package"] = 53] = "Package";
    FIELD_TYPE[FIELD_TYPE["BooleanText"] = 55] = "BooleanText";
    FIELD_TYPE[FIELD_TYPE["RichTextHTML"] = 56] = "RichTextHTML"; // Html Text
})(FIELD_TYPE || (FIELD_TYPE = {}));
export class FieldLayout {
    constructor(x = 0, width = 1, xAlignment = 1, y = 0, height = 1, yAlignment = 1, lineNumber = 1) {
        this.X = x;
        this.Width = width;
        this.XAlignment = xAlignment;
        this.Y = y;
        this.Height = height;
        this.YAlignment = yAlignment;
        this.LineNumber = lineNumber;
    }
}
export class UIControlField {
    constructor() {
        this.MandatoryField = false;
        this.Mandatory = false;
        this.minFieldWidth = 45;
        this.calcColumnWidth = 10;
        this.calcTitleColumnWidthString = '100%';
        this.calcColumnWidthString = '100%';
    }
}
export class UIControl {
}
export class ObjectsDataRowCell {
}
export class ObjectsDataRow {
    constructor() {
        this.IsSelectableForActions = true;
        this.IsEditable = true;
    }
}
export class ObjectSingleData {
    constructor(uiControl = null, data = null) {
        this.Success = true;
        this.ErrorMessage = '';
        this.Type = '';
        this.UIControl = uiControl;
        this.Data = data;
    }
}
export class ObjectsData {
    constructor() {
        this.ErrorMessage = '';
        this.Success = true;
        this.TotalAmount = '0';
        this.CurrencySymbol = '$';
    }
}
export class SmartSearchValues {
}
export class SmartSearchResponse {
}
export class PepperiFieldData {
    constructor(options = {}) {
        this.ApiName = options.ApiName;
        this.Value = options.Value;
        this.FormattedValue = options.FormattedValue || '';
        this.FieldType = options.FieldType;
        this.ColumnWidth = options.ColumnWidth;
        this.ColumnWidthType = options.ColumnWidthType;
        this.XAlignment = options.XAlignment;
        this.Title = options.Title || '';
    }
}
export class PepperiRowData {
}
//# sourceMappingURL=data:application/json;base64,