{"version":3,"file":"pepperi-addons-ngx-lib-checkbox.js","sources":["../../../projects/ngx-lib/checkbox/checkbox.component.html","../../../projects/ngx-lib/checkbox/checkbox.component.ts","../../../projects/ngx-lib/checkbox/checkbox.module.ts","../../../projects/ngx-lib/checkbox/public-api.ts","../../../projects/ngx-lib/checkbox/pepperi-addons-ngx-lib-checkbox.ts"],"sourcesContent":["<ng-container [formGroup]=\"form\">\r\n    <!-- New code -->\r\n    <ng-template #pepperiTemplate>\r\n        <div class=\"pepperi-checkbox-container pepperi-input\" [ngClass]=\"{\r\n                'disable': disabled,\r\n                'pepperi-report-checkbox': layoutType === LAYOUT_TYPE.PepperiTable && !isActive,\r\n                'pepperi-card-checkbox': layoutType === LAYOUT_TYPE.PepperiCard,\r\n                'one-row': rowSpan === 1,\r\n                'no-title': label.length == 0,\r\n                'right-alignment pull-right flip': xAlignment == '2',\r\n                'center-alignment': xAlignment == '3'\r\n            }\" dir=\"{{ xAlignment == '2' ? 'rtl' : 'ltr' }}\">\r\n            <!-- (click)=\"toggleChecked($event)\" -->\r\n            <ng-container *ngIf=\"type == 'booleanText'; then booleanTextTemplate; else regularTemplate\"></ng-container>\r\n            <ng-template #booleanTextTemplate>\r\n                <div (click)=\"toggleChecked($event)\" class=\"mat-checkbox-layout body-sm\"\r\n                    [title]=\"(label.length > 0 ? label + ': ' : '') + (value.toLowerCase() == 'true' || value == '1' ? ('CHECKBOX.TRUE' | translate) : ('CHECKBOX.FALSE' | translate))\">\r\n                    <button [id]=\"key\" class=\"mat-icon-button emoji-icon pull-left flip\">\r\n                        {{ value.toLowerCase() == 'true' || value == '1' ? additionalValueObject.CheckedText : additionalValueObject.UncheckedText }}\r\n                    </button>\r\n                    <span *ngIf=\"label.length > 0 && layoutType !== LAYOUT_TYPE.PepperiTable\"\r\n                        class=\"mat-checkbox-label emoji-title\">{{ label }}</span>\r\n                </div>\r\n            </ng-template>\r\n            <ng-template #regularTemplate>\r\n                <mat-checkbox [name]=\"key\" class=\"body-sm ellipsis\" type=\"checkbox\" (change)=\"onMaterialChange($event)\"\r\n                    [title]=\"(label.length > 0 ? label + ': ' : '') + (value.toLowerCase() == 'true' || value == '1' ? ('CHECKBOX.TRUE' | translate) : ('CHECKBOX.FALSE' | translate))\"\r\n                    [checked]=\"value.toLowerCase() == 'true' || value == '1' ? true : false\" [disabled]=\"disabled\">\r\n                    <span *ngIf=\"label.length > 0 && layoutType !== LAYOUT_TYPE.PepperiTable\">{{ label }}</span>\r\n                </mat-checkbox>\r\n            </ng-template>\r\n        </div>\r\n    </ng-template>\r\n\r\n    <ng-container *ngIf=\"layoutType === LAYOUT_TYPE.PepperiForm\">\r\n        <pep-field-title [label]=\"label\" [required]=\"required\" [disabled]=\"disabled\" [xAlignment]=\"xAlignment\"\r\n            [showTitle]=\"false\">\r\n        </pep-field-title>\r\n        <ng-container *ngTemplateOutlet=\"pepperiTemplate\"></ng-container>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"layoutType === LAYOUT_TYPE.PepperiCard\">\r\n        <ng-container *ngTemplateOutlet=\"pepperiTemplate\"></ng-container>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"layoutType === LAYOUT_TYPE.PepperiTable\">\r\n        <ng-container *ngIf=\"key === 'ItemHasActiveCampaign'; then itemCampaignBlock; else checkboxBlock\">\r\n        </ng-container>\r\n        <ng-template #itemCampaignBlock>\r\n            <ng-container *ngIf=\"value.toLowerCase() == 'true' || value == '1'; then trueTemplate; else falseTemplate\">\r\n            </ng-container>\r\n            <ng-template #trueTemplate>\r\n                <mat-icon class=\"has-active-campaign\" title=\"{{ 'CHECKBOX.TRUE' | translate }}\">\r\n                    <pep-icon name=\"system_bolt\">\r\n                    </pep-icon>\r\n                </mat-icon>\r\n            </ng-template>\r\n            <ng-template #falseTemplate>\r\n                <span>&nbsp;</span>\r\n            </ng-template>\r\n        </ng-template>\r\n        <ng-template #checkboxBlock>\r\n            <ng-container *ngTemplateOutlet=\"pepperiTemplate\"></ng-container>\r\n        </ng-template>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"layoutType === LAYOUT_TYPE.Editmodal\">\r\n        <pep-field-title [label]=\"label\" [required]=\"required\" [disabled]=\"disabled\" [xAlignment]=\"xAlignment\"\r\n            [showTitle]=\"false\">\r\n        </pep-field-title>\r\n        <ng-container *ngTemplateOutlet=\"pepperiTemplate\"></ng-container>\r\n    </ng-container>\r\n</ng-container>","import { Component, OnInit, Input, Output, EventEmitter, ChangeDetectionStrategy, OnDestroy, Renderer2, ElementRef } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { CustomizationService, LAYOUT_TYPE } from '@pepperi-addons/ngx-lib';\r\n\r\n@Component({\r\n    selector: 'pep-checkbox',\r\n    templateUrl: './checkbox.component.html',\r\n    styleUrls: ['./checkbox.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class PepperiCheckboxComponent implements OnInit, OnDestroy {\r\n    @Input() key = '';\r\n    @Input() value = '';\r\n    @Input() label = '';\r\n    @Input() type = 'checkbox'; // || 'booleanText'\r\n    @Input() required = false;\r\n    @Input() disabled = false;\r\n    @Input() readonly = false;\r\n    @Input() xAlignment = '0';\r\n    @Input() rowSpan = 1;\r\n    @Input() additionalValue: any;\r\n\r\n    controlType = 'checkbox';\r\n\r\n    @Input() form: FormGroup = null;\r\n    @Input() isActive = false;\r\n    @Input() showTitle = true;\r\n    @Input() layoutType: LAYOUT_TYPE = LAYOUT_TYPE.PepperiForm;\r\n\r\n    @Output() valueChanged: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    LAYOUT_TYPE = LAYOUT_TYPE;\r\n    standAlone = false;\r\n\r\n    additionalValueObject: any;\r\n    public jsonLib = JSON;\r\n\r\n    constructor(\r\n        private renderer: Renderer2,\r\n        private customizationService: CustomizationService,\r\n        public translate: TranslateService,\r\n        private element: ElementRef\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        if (this.form === null) {\r\n            this.standAlone = true;\r\n            this.form = this.customizationService.getDefaultFromGroup(this.key, this.value, this.required, this.readonly, this.disabled, 0, '', true);\r\n\r\n            this.renderer.addClass(this.element.nativeElement, CustomizationService.STAND_ALONE_FIELD_CLASS_NAME);\r\n        }\r\n\r\n        if (this.type === 'booleanText') {\r\n            try {\r\n                if (typeof this.additionalValue === 'string') {\r\n                    this.additionalValueObject = JSON.parse(this.additionalValue);\r\n                } else {\r\n                    this.additionalValueObject = this.additionalValue;\r\n                }\r\n            } catch {\r\n                this.additionalValueObject = {\r\n                    CheckedText: this.translate.instant('CHECKBOX.TRUE'),\r\n                    UncheckedText: this.translate.instant('CHECKBOX.FALSE')\r\n                };\r\n            }\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        if (this.valueChanged) {\r\n            this.valueChanged.unsubscribe();\r\n        }\r\n    }\r\n\r\n    onMaterialChange(e: any): void {\r\n        this.changeValue(e.checked);\r\n    }\r\n\r\n    toggleChecked(event: any): void {\r\n        if (!this.disabled) {\r\n            const isChecked: boolean = this.value === 'true' || this.value === '1' ? true : false;\r\n            this.value = (!isChecked).toString();\r\n            this.changeValue(this.value);\r\n        }\r\n    }\r\n\r\n    changeValue(value: any): void {\r\n        this.customizationService.updateFormFieldValue(this.form, this.key, value);\r\n        this.valueChanged.emit({ apiName: this.key, value });\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\n\r\nimport { MatCommonModule } from '@angular/material/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\nimport { PepperiModule } from '@pepperi-addons/ngx-lib';\r\nimport { PepperiIconModule, PepperiIconRegistry, pepperiIconSystemBolt } from '@pepperi-addons/ngx-lib/icon';\r\nimport { PepperiFieldTitleModule } from '@pepperi-addons/ngx-lib/field-title';\r\n\r\nimport { PepperiCheckboxComponent } from './checkbox.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        ReactiveFormsModule,\r\n        FormsModule,\r\n        // Material modules\r\n        MatCommonModule,\r\n        MatFormFieldModule,\r\n        MatCheckboxModule,\r\n        MatIconModule,\r\n        // Pepperi modules\r\n        PepperiModule,\r\n        PepperiIconModule,\r\n        PepperiFieldTitleModule\r\n    ],\r\n    exports: [ PepperiCheckboxComponent ],\r\n    declarations: [ PepperiCheckboxComponent ],\r\n})\r\nexport class PepperiCheckboxModule {\r\n    constructor(private pepperiIconRegistry: PepperiIconRegistry) {\r\n        this.pepperiIconRegistry.registerIcons([\r\n            pepperiIconSystemBolt\r\n        ]);\r\n    }\r\n}\r\n","/*\r\n * Public API Surface of ngx-lib/checkbox\r\n */\r\nexport * from './checkbox.module';\r\nexport * from './checkbox.component';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i0.ɵɵelementContainer","i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵadvance","i0.ɵɵtextInterpolate","i0.ɵɵlistener","i0.ɵɵtemplate","i0.ɵɵproperty","i0.ɵɵtextInterpolate1","i0.ɵɵpropertyInterpolate","i0.ɵɵelementContainerStart","i0.ɵɵelement","i0.ɵɵelementContainerEnd"],"mappings":"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"}