{"version":3,"file":"pepperi-addons-ngx-lib-color.js","sources":["../../../projects/ngx-lib/color/color-utils.ts","../../../projects/ngx-lib/color/color.model.ts","../../../projects/ngx-lib/color/color-picker.component.html","../../../projects/ngx-lib/color/color-picker.component.ts","../../../projects/ngx-lib/color/color.component.html","../../../projects/ngx-lib/color/color.component.ts","../../../projects/ngx-lib/color/color.module.ts","../../../projects/ngx-lib/color/public-api.ts","../../../projects/ngx-lib/color/pepperi-addons-ngx-lib-color.ts"],"sourcesContent":["const FLOAT_REGEX = /^\\d+(\\.\\d+)?$/;\r\nconst THREE_DIGIT_HEX_COLOR_REGEX = /^[0-9a-fA-F]{3}$/;\r\nconst THREE_DIGIT_HEX_COLOR_WITH_HASH_REGEX = /^#[0-9a-fA-F]{3}$/;\r\nconst SIX_DIGIT_HEX_COLOR_REGEX = /^[0-9a-fA-F]{6}$/;\r\nconst SIX_DIGIT_HEX_COLOR_WITH_HASH_REGEX = /^#[0-9a-fA-F]{6}$/;\r\n\r\nexport interface RgbColor {\r\n    r?: any;\r\n    g?: any;\r\n    b?: any;\r\n}\r\n\r\nexport interface HslColor {\r\n    h?: any;\r\n    s?: any;\r\n    l?: any;\r\n}\r\n\r\nexport interface ClosestColor {\r\n    color: string;\r\n    lightness: number;\r\n}\r\n\r\n/**\r\n * Convert hex string to 6 digits hex string.\r\n * @param str The string to convert.\r\n */\r\nexport function hex2sixDigitHex(str: string): string {\r\n    if (!str) {\r\n        return null;\r\n    }\r\n\r\n    str = str.trim();\r\n\r\n    if (SIX_DIGIT_HEX_COLOR_WITH_HASH_REGEX.test(str)) {\r\n        return str;\r\n    }\r\n\r\n    if (SIX_DIGIT_HEX_COLOR_REGEX.test(str)) {\r\n        return '#' + str;\r\n    }\r\n\r\n    if (THREE_DIGIT_HEX_COLOR_WITH_HASH_REGEX.test(str)) {\r\n        return '#' + str[1] + str[1] + str[2] + str[2] + str[3] + str[3];\r\n    }\r\n\r\n    if (THREE_DIGIT_HEX_COLOR_REGEX.test(str)) {\r\n        return '#' + str[0] + str[0] + str[1] + str[1] + str[2] + str[2];\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\n/**\r\n * Convert rgb color to 6 digits hex string.\r\n * @param color The rgb color to convert.\r\n */\r\nexport function rgb2sixDigitHex(color: RgbColor): string {\r\n    color.r = color.r.toString(16);\r\n    color.g = color.g.toString(16);\r\n    color.b = color.b.toString(16);\r\n\r\n    if (color.r.length === 1) {\r\n        color.r = '0' + color.r;\r\n    }\r\n\r\n    if (color.g.length === 1) {\r\n        color.g = '0' + color.g;\r\n    }\r\n\r\n    if (color.b.length === 1) {\r\n        color.b = '0' + color.b;\r\n    }\r\n\r\n    return '#' + color.r + color.g + color.b;\r\n}\r\n\r\n/**\r\n * Convert hex string to rgb color.\r\n * @param str The hex string to convert.\r\n */\r\nexport function hex2rgb(str: string): RgbColor {\r\n    const sixDigitHex = hex2sixDigitHex(str);\r\n\r\n    if (sixDigitHex === null) {\r\n        return null;\r\n    }\r\n\r\n    return {\r\n        r: parseInt(sixDigitHex.slice(1, 3), 16),\r\n        g: parseInt(sixDigitHex.slice(3, 5), 16),\r\n        b: parseInt(sixDigitHex.slice(5, 7), 16)\r\n    };\r\n}\r\n\r\nexport function rgbString2hsl(str: string): HslColor {\r\n    const sep = str.indexOf(',') > -1 ? ',' : ' ';\r\n    const rgbArr = str.substr(4).split(')')[0].split(sep);\r\n\r\n    const r = rgbArr[0];\r\n    const g = rgbArr[1].substr(0, rgbArr[1].length).trim();\r\n    const b = rgbArr[2].substr(0, rgbArr[2].length).trim();\r\n\r\n    return rgb2hsl({ r, g, b });\r\n}\r\n\r\nexport function rgb2hsl({ r, g, b }: RgbColor): HslColor {\r\n    r /= 255;\r\n    g /= 255;\r\n    b /= 255;\r\n\r\n    // Find greatest and smallest channel values\r\n    const cmin = Math.min(r, g, b);\r\n    const cmax = Math.max(r, g, b);\r\n    const delta = cmax - cmin;\r\n\r\n    let h = 0;\r\n    let s = 0;\r\n    let l = 0;\r\n\r\n    if (delta === 0) {\r\n        h = 0;\r\n    } else if (cmax === r) {\r\n        h = ((g - b) / delta) % 6;\r\n    } else if (cmax === g) {\r\n        h = (b - r) / delta + 2;\r\n    } else {\r\n        h = (r - g) / delta + 4;\r\n    }\r\n\r\n    h = Math.round(h * 60);\r\n\r\n    if (h < 0) {\r\n        h += 360;\r\n    }\r\n\r\n    l = (cmax + cmin) / 2;\r\n    s = delta === 0 ? 0 : delta / (1 - Math.abs(2 * l - 1));\r\n    s = +(s * 100).toFixed(1);\r\n    l = +(l * 100).toFixed(1);\r\n\r\n    return { h, s, l };\r\n}\r\n\r\nexport function hslString2hsl(str: string): HslColor {\r\n    const sep = str.indexOf(',') > -1 ? ',' : ' ';\r\n    const hslArr = str.substr(4).split(')')[0].split(sep);\r\n\r\n    let h: any = hslArr[0];\r\n    let s = hslArr[1].substr(0, hslArr[1].length).trim();\r\n    let l = hslArr[2].substr(0, hslArr[2].length).trim();\r\n\r\n    // Strip label and convert to degrees (if necessary)\r\n    if (h.indexOf('deg') > -1) {\r\n        h = h.substr(0, h.length - 3);\r\n    } else if (h.indexOf('rad') > -1) {\r\n        h = Math.round(h.substr(0, h.length - 3) * (180 / Math.PI));\r\n    } else if (h.indexOf('turn') > -1) {\r\n        h = Math.round(h.substr(0, h.length - 4) * 360);\r\n    }\r\n\r\n    // Keep hue fraction of 360 if ending up over\r\n    if (h >= 360) {\r\n        h %= 360;\r\n    }\r\n\r\n    // Remove the %\r\n    if (s.indexOf('%') > -1) {\r\n        s = s.replace(/%/g, '');\r\n    }\r\n\r\n    // Remove the %\r\n    if (l.indexOf('%') > -1) {\r\n        l = l.replace(/%/g, '');\r\n    }\r\n\r\n    return { h, s, l };\r\n}\r\n\r\nexport function hsl2rgb({ h, s, l }: HslColor): RgbColor {\r\n    let r;\r\n    let g;\r\n    let b;\r\n\r\n    if (!isFinite(h)) {\r\n        h = 0;\r\n    }\r\n\r\n    if (!isFinite(s)) {\r\n        s = 0;\r\n    }\r\n\r\n    if (!isFinite(l)) {\r\n        l = 0;\r\n    }\r\n\r\n    h /= 60;\r\n\r\n    if (h < 0) {\r\n        h = 6 - (-h % 6);\r\n    }\r\n\r\n    h %= 6;\r\n\r\n    s = Math.max(0, Math.min(1, s / 100));\r\n    l = Math.max(0, Math.min(1, l / 100));\r\n\r\n    const c = (1 - Math.abs((2 * l) - 1)) * s;\r\n    const x = c * (1 - Math.abs((h % 2) - 1));\r\n\r\n    if (h < 1) {\r\n        r = c;\r\n        g = x;\r\n        b = 0;\r\n    } else if (h < 2) {\r\n        r = x;\r\n        g = c;\r\n        b = 0;\r\n    } else if (h < 3) {\r\n        r = 0;\r\n        g = c;\r\n        b = x;\r\n    } else if (h < 4) {\r\n        r = 0;\r\n        g = x;\r\n        b = c;\r\n    } else if (h < 5) {\r\n        r = x;\r\n        g = 0;\r\n        b = c;\r\n    } else {\r\n        r = c;\r\n        g = 0;\r\n        b = x;\r\n    }\r\n\r\n    const m = l - c / 2;\r\n    r = Math.round((r + m) * 255);\r\n    g = Math.round((g + m) * 255);\r\n    b = Math.round((b + m) * 255);\r\n\r\n    return { r, g, b };\r\n}\r\n\r\nexport function hex2hsl(str: string): HslColor {\r\n    const sixDigitHex = hex2sixDigitHex(str);\r\n\r\n    if (sixDigitHex === null) {\r\n        return null;\r\n    }\r\n\r\n    const rgb = hex2rgb(sixDigitHex);\r\n\r\n    if (rgb === null) {\r\n        return null;\r\n    }\r\n\r\n    return rgb2hsl(rgb);\r\n}\r\n\r\nexport function hsl2hex(hsl: HslColor): string {\r\n    const rgb = hsl2rgb(hsl);\r\n\r\n    return rgb2sixDigitHex(rgb);\r\n}\r\n\r\nexport function relativeLuminance({ r, g, b }: RgbColor): number {\r\n    [r, g, b] = [r, g, b].map(c => {\r\n        c = c / 255;\r\n\r\n        if (c <= 0.03928) {\r\n            return c / 12.92;\r\n        }\r\n\r\n        return Math.pow((c + 0.055) / 1.055, 2.4);\r\n    });\r\n\r\n    return 0.2126 * r + 0.7152 * g + 0.0722 * b;\r\n}\r\n\r\nexport function contrast(str1: string, str2: string): number {\r\n    const L1 = relativeLuminance(hex2rgb(str1));\r\n    const L2 = relativeLuminance(hex2rgb(str2));\r\n\r\n    if (L1 < L2) {\r\n        return (L2 + 0.05) / (L1 + 0.05);\r\n    }\r\n\r\n    return (L1 + 0.05) / (L2 + 0.05);\r\n}\r\n\r\nexport function findClosestAccessibleDarkerColor(\r\n    adjustableColor: string, otherColor: string, contrastRatio: number): ClosestColor {\r\n    let { h, s, l } = hex2hsl(adjustableColor);\r\n\r\n    if (contrast(adjustableColor, otherColor) >= contrastRatio) {\r\n        return {\r\n            color: adjustableColor,\r\n            lightness: l\r\n        };\r\n    }\r\n\r\n    let minColor = hsl2hex({ h, s, l: 0 });\r\n\r\n    if (contrast(minColor, otherColor) < contrastRatio) {\r\n        return null;\r\n    }\r\n\r\n    let min = 0;\r\n    let max = l;\r\n    let maxColor = hsl2hex({ h, s, l });\r\n    let lastMinColor;\r\n    let lastMaxColor;\r\n\r\n    while (minColor !== lastMinColor || maxColor !== lastMaxColor) {\r\n        lastMinColor = minColor;\r\n        lastMaxColor = maxColor;\r\n\r\n        l = (min + max) / 2;\r\n        adjustableColor = hsl2hex({ h, s, l });\r\n\r\n        if (contrast(adjustableColor, otherColor) < contrastRatio) {\r\n            max = l;\r\n            maxColor = hsl2hex({ h, s, l });\r\n        } else {\r\n            min = l;\r\n            minColor = hsl2hex({ h, s, l });\r\n        }\r\n    }\r\n\r\n    return {\r\n        color: minColor,\r\n        lightness: min\r\n    };\r\n}\r\n\r\nexport function findClosestAccessibleLighterColor(\r\n    adjustableColor: string, otherColor: string, contrastRatio: number): ClosestColor {\r\n    let { h, s, l } = hex2hsl(adjustableColor);\r\n\r\n    if (contrast(adjustableColor, otherColor) >= contrastRatio) {\r\n        return {\r\n            color: adjustableColor,\r\n            lightness: l\r\n        };\r\n    }\r\n\r\n    let maxColor = hsl2hex({ h, s, l: 100 });\r\n\r\n    if (contrast(maxColor, otherColor) < contrastRatio) {\r\n        return null;\r\n    }\r\n\r\n    let min = l;\r\n    let max = 100;\r\n    let minColor = hsl2hex({ h, s, l });\r\n    let lastMinColor;\r\n    let lastMaxColor;\r\n\r\n    while (minColor !== lastMinColor || maxColor !== lastMaxColor) {\r\n        lastMinColor = minColor;\r\n        lastMaxColor = maxColor;\r\n\r\n        l = (min + max) / 2;\r\n        adjustableColor = hsl2hex({ h, s, l });\r\n\r\n        if (contrast(adjustableColor, otherColor) < contrastRatio) {\r\n            min = l;\r\n            minColor = hsl2hex({ h, s, l });\r\n        } else {\r\n            max = l;\r\n            maxColor = hsl2hex({ h, s, l });\r\n        }\r\n    }\r\n\r\n    return {\r\n        color: maxColor,\r\n        lightness: max\r\n    };\r\n}\r\n\r\nexport function findClosestAccessibleColor(\r\n    adjustableColor: string, otherColor: string, contrastRatio: number): string {\r\n    const closestDarkerColor: ClosestColor =\r\n        findClosestAccessibleDarkerColor(adjustableColor, otherColor, contrastRatio);\r\n    const closestLighterColor: ClosestColor =\r\n        findClosestAccessibleLighterColor(adjustableColor, otherColor, contrastRatio);\r\n\r\n    if (closestDarkerColor === null) {\r\n        if (closestLighterColor === null) {\r\n            return null;\r\n        }\r\n\r\n        return closestLighterColor.color;\r\n    }\r\n\r\n    if (closestLighterColor === null) {\r\n        return closestDarkerColor.color;\r\n    }\r\n\r\n    const { l } = hex2hsl(adjustableColor);\r\n\r\n    if (closestLighterColor.lightness - l < l - closestDarkerColor.lightness) {\r\n        return closestLighterColor.color;\r\n    }\r\n\r\n    return closestDarkerColor.color;\r\n}\r\n\r\nexport function convertHslToStringHsl(hsl: HslColor): string {\r\n    return 'hsl(' + (hsl.h < 0 ? hsl.h + 360 : hsl.h) + ', ' + hsl.s + '%, ' + hsl.l + '%)';\r\n}\r\n","\r\nexport enum PepColorType {\r\n    AnyColor,\r\n    MainColor,\r\n    SuccessColor,\r\n    CautionColor\r\n}","<div class=\"pepperi-color-picker-container\">\r\n\r\n    <h2 mat-dialog-title class=\"pepperi-border-bottom\">\r\n        <span class=\"pull-left flip\">{{ 'COLOR.DIALOG_TITLE' | translate }}</span>\r\n        <button mat-button [mat-dialog-close]=\"null\" class=\"pepperi-button icon-button md weak pull-right flip\">\r\n            <mat-icon>\r\n                <pep-icon name=\"system_close\">\r\n                </pep-icon>\r\n            </mat-icon>\r\n        </button>\r\n    </h2>\r\n\r\n    <div mat-dialog-content>\r\n        <div class=\"color-chooser-content\">\r\n            <div class=\"current-color\" [ngStyle]=\"{ 'background': data?.value ? data.value : 'transparent' }\"></div>\r\n\r\n            <div class=\"slider-box\">\r\n                <mat-label class=\"body-xs \">{{ 'COLOR.CHANGE_HUE' | translate}}</mat-label>\r\n                <div class=\"current-hue\" [ngClass]=\"{\r\n                    'main': data?.type === PepColorType.MainColor,\r\n                    'success': data?.type === PepColorType.SuccessColor,\r\n                    'caution': data?.type === PepColorType.CautionColor }\">\r\n                    <mat-slider [min]=\"currentHueMin\" [max]=\"currentHueMax\" step=\"1\" [value]=\"currentHue\"\r\n                        (change)=\"onHueChange($event)\"></mat-slider>\r\n                </div>\r\n            </div>\r\n            <div class=\"slider-box\">\r\n                <mat-label class=\"body-xs \">{{ 'COLOR.CHANGE_SATURATION' | translate}}</mat-label>\r\n                <div class=\"current-saturation\" [ngClass]=\"{\r\n                    'main': data?.type === PepColorType.MainColor,\r\n                    'success': data?.type === PepColorType.SuccessColor,\r\n                    'caution': data?.type === PepColorType.CautionColor }\">\r\n                    <mat-slider [min]=\"currentSaturationMin\" [max]=\"currentSaturationMax\" step=\"1\"\r\n                        [value]=\"currentSaturation\" (change)=\"onSaturationChange($event)\"></mat-slider>\r\n                </div>\r\n            </div>\r\n            <div class=\"slider-box\">\r\n                <mat-label class=\"body-xs \">{{ 'COLOR.CHANGE_LIGHTNESS' | translate}}</mat-label>\r\n                <div class=\"current-lightness\" [ngClass]=\"{\r\n                    'main': data?.type === PepColorType.MainColor,\r\n                    'success': data?.type === PepColorType.SuccessColor,\r\n                    'caution': data?.type === PepColorType.CautionColor }\">\r\n                    <mat-slider [min]=\"currentLightnessMin\" [max]=\"currentLightnessMax\" step=\"1\"\r\n                        [value]=\"currentLightnessMax - currentLightness + currentLightnessMin\"\r\n                        (change)=\"onLightnessChange($event)\"></mat-slider>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"color-value-content\">\r\n            <div class=\"color-value\" [ngClass]=\"{ 'with-complient': checkAAComplient }\">\r\n                <pep-textbox [key]=\"'colorValue'\" [label]=\"'COLOR.ADD_VALUE_HERE' | translate \"\r\n                    [formattedValue]=\"data?.value\" [value]=\"data?.value\" (valueChanged)=\"onColorValueChange($event)\">\r\n                </pep-textbox>\r\n            </div>\r\n            <div *ngIf=\"checkAAComplient\" class=\"color-complient-container\">\r\n                <pep-field-title [label]=\"'COLOR.AA_COMPLIENT' | translate \">\r\n                </pep-field-title>\r\n                <div class=\"color-complient\" [ngStyle]=\"{ 'background': complientColor }\">\r\n                    <mat-icon *ngIf=\"isUserChooseAAComplientColor\">\r\n                        <pep-icon name=\"system_ok\">\r\n                        </pep-icon>\r\n                    </mat-icon>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div mat-dialog-actions class=\"pepperi-border-top split-actions \">\r\n        <div>\r\n            <mat-checkbox *ngIf=\"data.showAAComplient\" type=\"checkbox\" id=\"checkAAComplient\"\r\n                (change)=\"checkAAComplient = !checkAAComplient\" [checked]=\"checkAAComplient\">\r\n                <span class=\"body-xs ellipsis\">{{ 'COLOR.AA_COMPLIENT' | translate }}</span>\r\n            </mat-checkbox>\r\n        </div>\r\n        <div class=\"spacing-element-negative\">\r\n            <button mat-button [mat-dialog-close]=\"null\" class=\"spacing-element pepperi-button cancel-btn md weak\">\r\n                {{'ACTIONS.CANCEL' | translate}}\r\n            </button>\r\n            <button mat-button class=\"spacing-element pepperi-button save-btn md strong\" (click)=\"onSave($event)\">\r\n                {{'ACTIONS.OK' | translate}}\r\n            </button>\r\n        </div>\r\n    </div>\r\n\r\n</div>","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { hex2hsl, hslString2hsl, rgbString2hsl, HslColor, findClosestAccessibleColor, hsl2hex, convertHslToStringHsl } from './color-utils';\r\nimport { PepColorType } from './color.model';\r\n\r\nexport enum ContrastRatioType {\r\n    AA = 4.5,\r\n    AAA = 7\r\n}\r\n\r\nexport interface ColorPickerDialogData {\r\n    value: string;\r\n    type: PepColorType;\r\n    showAAComplient: boolean;\r\n    textColor: string;\r\n    contrastRatio: ContrastRatioType;\r\n}\r\n\r\n@Component({\r\n    templateUrl: './color-picker.component.html',\r\n    styleUrls: ['./color-picker.component.scss']\r\n})\r\nexport class PepperiColorPickerComponent implements OnInit {\r\n\r\n    static CURRENT_HUE = '--pep-color-picker-current-hue';\r\n\r\n    PepColorType = PepColorType;\r\n    checkAAComplient = true;\r\n\r\n    constructor(\r\n        private dialogRef: MatDialogRef<PepperiColorPickerComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: ColorPickerDialogData\r\n    ) {\r\n        this.data.type = data ? data.type : PepColorType.AnyColor;\r\n        this.data.showAAComplient = data && data.showAAComplient === undefined ? true : (data ? data.showAAComplient : false);\r\n        this.data.textColor = data && data.textColor ? data.textColor : '#fff';\r\n        this.data.contrastRatio = data && data.contrastRatio ? data.contrastRatio : ContrastRatioType.AA;\r\n    }\r\n\r\n    currentHue = 100;\r\n    currentHueMin = 0;\r\n    currentHueMax = 360;\r\n\r\n    currentSaturation = 50;\r\n    currentSaturationMin = 0;\r\n    currentSaturationMax = 100;\r\n\r\n    currentLightness = 50;\r\n    currentLightnessMin = 0;\r\n    currentLightnessMax = 100;\r\n\r\n    complientColor: string;\r\n    isUserChooseAAComplientColor: boolean;\r\n\r\n    ngOnInit(): void {\r\n        this.initVars();\r\n        this.checkAAComplient = this.data.showAAComplient;\r\n        this.convertValueStringToColor(this.data.value);\r\n    }\r\n\r\n    initVars(): void {\r\n        if (this.data.type === PepColorType.MainColor) {\r\n            this.currentLightnessMax = 10;\r\n            this.currentLightness = 5;\r\n        } else if (this.data.type === PepColorType.SuccessColor) {\r\n            this.currentHueMin = 70;\r\n            this.currentHueMax = 150;\r\n            this.currentHue = 100;\r\n\r\n            this.currentSaturationMin = 50;\r\n            this.currentSaturationMax = 100;\r\n            this.currentSaturation = 50;\r\n\r\n            this.currentLightnessMin = 10;\r\n            this.currentLightnessMax = 65;\r\n            this.currentLightness = 50;\r\n        } else if (this.data.type === PepColorType.CautionColor) {\r\n            this.currentHueMin = -20;\r\n            this.currentHueMax = 20;\r\n            this.currentHue = 10;\r\n\r\n            this.currentSaturationMin = 75;\r\n            this.currentSaturationMax = 100;\r\n            this.currentSaturation = 75;\r\n\r\n            this.currentLightnessMin = 25;\r\n            this.currentLightnessMax = 75;\r\n            this.currentLightness = 50;\r\n        }\r\n    }\r\n\r\n    setCurrentHueInCss(): void {\r\n        document.documentElement.style.setProperty(PepperiColorPickerComponent.CURRENT_HUE, this.currentHue.toString());\r\n    }\r\n\r\n    convertValueStringToColor(color): void {\r\n        if (color.indexOf('hsl') === 0) {\r\n            const hsl = hslString2hsl(color);\r\n            this.convertColorToValueString(hsl);\r\n        } else if (color.indexOf('rgb') === 0) {\r\n            const hsl = rgbString2hsl(color);\r\n            this.convertColorToValueString(hsl);\r\n        } else if (color.indexOf('#') === 0) {\r\n            const hsl = hex2hsl(color);\r\n            this.convertColorToValueString(hsl);\r\n        } else {\r\n            // Handle other colors.\r\n        }\r\n\r\n        this.setCurrentHueInCss();\r\n    }\r\n\r\n    convertColorToValueString(hslColor: HslColor): void {\r\n        // Regular hue\r\n        if (hslColor.h >= this.currentHueMin && hslColor.h <= this.currentHueMax) {\r\n            this.currentHue = hslColor.h;\r\n        } else if (this.currentHueMin < 0 && hslColor.h >= 0 && hslColor.h <= 360) {\r\n            // For min with - (change to the other side of the circle)\r\n            hslColor.h = hslColor.h - 360;\r\n\r\n            if (hslColor.h >= this.currentHueMin && hslColor.h <= this.currentHueMax) {\r\n                this.currentHue = hslColor.h;\r\n            }\r\n        }\r\n\r\n        this.currentSaturation =\r\n            (hslColor.s >= this.currentSaturationMin &&\r\n             hslColor.s <= this.currentSaturationMax) ?\r\n                hslColor.s : this.currentSaturation;\r\n\r\n        this.currentLightness =\r\n            (hslColor.l >= this.currentLightnessMin &&\r\n             hslColor.l <= this.currentLightnessMax) ?\r\n                hslColor.l : this.currentLightness;\r\n\r\n        // Write the value (if hue is changed to the other side of the circle return it back).\r\n        const hsl = { h: this.currentHue, s: this.currentSaturation, l: this.currentLightness };\r\n        this.data.value = convertHslToStringHsl(hsl);\r\n\r\n        // Check the contrast ratio - set the closest accessible color to complientColor\r\n        // and update isUserChooseAAComplientColor.\r\n        const adjustableColor = hsl2hex(hsl);\r\n        const closestHex = findClosestAccessibleColor(adjustableColor, this.data.textColor, this.data.contrastRatio);\r\n\r\n        this.isUserChooseAAComplientColor = adjustableColor === closestHex;\r\n        this.complientColor = convertHslToStringHsl(hex2hsl(closestHex));\r\n    }\r\n\r\n    onHueChange(event): void {\r\n        this.convertColorToValueString({ h: event.value });\r\n        this.setCurrentHueInCss();\r\n    }\r\n\r\n    onSaturationChange(event): void {\r\n        // this.currentSaturation = event.value;\r\n        this.convertColorToValueString({ s: event.value });\r\n    }\r\n\r\n    onLightnessChange(event): void {\r\n        // this.currentLightness = event.value;\r\n        this.convertColorToValueString({ l: this.currentLightnessMax - event.value + this.currentLightnessMin });\r\n    }\r\n\r\n    onColorValueChange(event): void {\r\n        this.convertValueStringToColor(event.value);\r\n    }\r\n\r\n    onSave(event): void {\r\n        const color = this.checkAAComplient ? this.complientColor : this.data.value;\r\n\r\n        // this.notify.emit({ key: this.key, value: color });\r\n        this.dialogRef.close(color);\r\n    }\r\n\r\n}\r\n","<pep-field-title [label]=\"label\" [disabled]=\"disabled\" [xAlignment]=\"xAlignment\" [showTitle]=\"showTitle\">\r\n</pep-field-title>\r\n<div [id]=\"key\" class=\"pepperi-color-container\" [ngClass]=\"{ 'right-alignment': xAlignment == '2' }\">\r\n    <div pepRtlDirection (click)=\"chooseColor()\" class=\"pepperi-color pepperi-input\"\r\n        [ngClass]=\"{disable: disabled, 'one-row': rowSpan === 1}\"\r\n        [ngStyle]=\"{ 'background':  value ? value : 'transparent' }\">\r\n        <button *ngIf=\"!disabled\" class=\"pepperi-button icon-button xs weak invert mat-button btn-edit\" tabindex=\"-1\"\r\n            pepButtonBlur mat-button>\r\n            <mat-icon>\r\n                <pep-icon name=\"system_edit\"></pep-icon>\r\n            </mat-icon>\r\n        </button>\r\n    </div>\r\n</div>","import { Component, OnInit, Input, Output, Renderer2, ElementRef, EventEmitter, OnChanges, OnDestroy } from '@angular/core';\r\nimport { CustomizationService, LAYOUT_TYPE } from '@pepperi-addons/ngx-lib';\r\nimport { DialogService } from '@pepperi-addons/ngx-lib/dialog';\r\n\r\nimport { PepperiColorPickerComponent } from './color-picker.component';\r\nimport { PepColorType } from './color.model';\r\n\r\n@Component({\r\n    selector: 'pep-color',\r\n    templateUrl: './color.component.html',\r\n    styleUrls: ['./color.component.scss']\r\n})\r\nexport class PepperiColorComponent implements OnInit, OnDestroy {\r\n    @Input() key = '';\r\n    @Input() value = '';\r\n    @Input() label = '';\r\n    @Input() disabled = false;\r\n    @Input() readonly = false;\r\n    @Input() xAlignment = '0';\r\n    @Input() rowSpan = 1;\r\n    @Input() type: PepColorType = PepColorType.AnyColor;\r\n\r\n    @Input() showTitle = true;\r\n    @Input() showAAComplient = true;\r\n    @Input() layoutType: LAYOUT_TYPE = LAYOUT_TYPE.PepperiForm;\r\n\r\n    @Output() valueChanged: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    LAYOUT_TYPE = LAYOUT_TYPE;\r\n\r\n    constructor(\r\n        private dialogService: DialogService,\r\n        private renderer: Renderer2,\r\n        private element: ElementRef\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.renderer.addClass(this.element.nativeElement, CustomizationService.STAND_ALONE_FIELD_CLASS_NAME);\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        if (this.valueChanged) {\r\n            this.valueChanged.unsubscribe();\r\n        }\r\n    }\r\n\r\n    changeColor(value: any): void {\r\n        this.value = value;\r\n        this.valueChanged.emit({ apiName: this.key, value });\r\n    }\r\n\r\n    chooseColor(): void {\r\n        const dialogRef = this.dialogService.openDialog(\r\n            PepperiColorPickerComponent,\r\n            { value: this.value, type: this.type, showAAComplient: this.showAAComplient });\r\n\r\n        dialogRef.afterClosed().subscribe(value => {\r\n            if (value !== undefined && value !== null) {\r\n                this.changeColor(value);\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\n\r\nimport { MatCommonModule } from '@angular/material/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\n\r\nimport { PepperiModule } from '@pepperi-addons/ngx-lib';\r\nimport {\r\n    PepperiIconModule,\r\n    PepperiIconRegistry,\r\n    pepperiIconSystemEdit,\r\n    pepperiIconSystemOk,\r\n    pepperiIconSystemClose } from '@pepperi-addons/ngx-lib/icon';\r\nimport { PepperiFieldTitleModule } from '@pepperi-addons/ngx-lib/field-title';\r\nimport { PepperiTextboxModule } from '@pepperi-addons/ngx-lib/textbox';\r\n\r\nimport { PepperiColorComponent } from './color.component';\r\nimport { PepperiColorPickerComponent } from './color-picker.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        ReactiveFormsModule,\r\n        FormsModule,\r\n        // Material modules\r\n        MatCommonModule,\r\n        MatButtonModule,\r\n        MatFormFieldModule,\r\n        MatCheckboxModule,\r\n        MatDialogModule,\r\n        MatIconModule,\r\n        MatSliderModule,\r\n        // Pepperi modules\r\n        PepperiModule,\r\n        PepperiIconModule,\r\n        PepperiFieldTitleModule,\r\n        PepperiTextboxModule\r\n    ],\r\n    exports: [ PepperiColorComponent ],\r\n    declarations: [ PepperiColorComponent, PepperiColorPickerComponent ],\r\n})\r\nexport class PepperiColorModule {\r\n    constructor(private pepperiIconRegistry: PepperiIconRegistry) {\r\n        this.pepperiIconRegistry.registerIcons([\r\n            pepperiIconSystemEdit,\r\n            pepperiIconSystemOk,\r\n            pepperiIconSystemClose\r\n        ]);\r\n    }\r\n}\r\n","/*\r\n * Public API Surface of ngx-lib/color\r\n */\r\nexport * from './color.module';\r\nexport * from './color.model';\r\nexport * from './color-utils';\r\nexport * from './color.component';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i0.ɵɵelementStart","i0.ɵɵelement","i0.ɵɵelementEnd","i0.ɵɵtemplate","i0.ɵɵadvance","i0.ɵɵproperty","i0.ɵɵlistener","i0.ɵɵtext","i0.ɵɵtextInterpolate","i0.ɵɵtextInterpolate1"],"mappings":";;;;;;;;;;;;;;;;;AAAA,MAAM,WAAW,GAAG,eAAe,CAAC;AACpC,MAAM,2BAA2B,GAAG,kBAAkB,CAAC;AACvD,MAAM,qCAAqC,GAAG,mBAAmB,CAAC;AAClE,MAAM,yBAAyB,GAAG,kBAAkB,CAAC;AACrD,MAAM,mCAAmC,GAAG,mBAAmB,CAAC;AAmBhE;;;;SAIgB,eAAe,CAAC,GAAW;IACvC,IAAI,CAAC,GAAG,EAAE;QACN,OAAO,IAAI,CAAC;KACf;IAED,GAAG,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;IAEjB,IAAI,mCAAmC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;QAC/C,OAAO,GAAG,CAAC;KACd;IAED,IAAI,yBAAyB,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;QACrC,OAAO,GAAG,GAAG,GAAG,CAAC;KACpB;IAED,IAAI,qCAAqC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;QACjD,OAAO,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;KACpE;IAED,IAAI,2BAA2B,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;QACvC,OAAO,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;KACpE;IAED,OAAO,IAAI,CAAC;AAChB,CAAC;AAED;;;;SAIgB,eAAe,CAAC,KAAe;IAC3C,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;IAC/B,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;IAC/B,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;IAE/B,IAAI,KAAK,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;QACtB,KAAK,CAAC,CAAC,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC;KAC3B;IAED,IAAI,KAAK,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;QACtB,KAAK,CAAC,CAAC,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC;KAC3B;IAED,IAAI,KAAK,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;QACtB,KAAK,CAAC,CAAC,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC;KAC3B;IAED,OAAO,GAAG,GAAG,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;AAC7C,CAAC;AAED;;;;SAIgB,OAAO,CAAC,GAAW;IAC/B,MAAM,WAAW,GAAG,eAAe,CAAC,GAAG,CAAC,CAAC;IAEzC,IAAI,WAAW,KAAK,IAAI,EAAE;QACtB,OAAO,IAAI,CAAC;KACf;IAED,OAAO;QACH,CAAC,EAAE,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;QACxC,CAAC,EAAE,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;QACxC,CAAC,EAAE,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;KAC3C,CAAC;AACN,CAAC;SAEe,aAAa,CAAC,GAAW;IACrC,MAAM,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC;IAC9C,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAEtD,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;IACpB,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,CAAC;IACvD,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,CAAC;IAEvD,OAAO,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AAChC,CAAC;SAEe,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAY;IACzC,CAAC,IAAI,GAAG,CAAC;IACT,CAAC,IAAI,GAAG,CAAC;IACT,CAAC,IAAI,GAAG,CAAC;;IAGT,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC/B,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC/B,MAAM,KAAK,GAAG,IAAI,GAAG,IAAI,CAAC;IAE1B,IAAI,CAAC,GAAG,CAAC,CAAC;IACV,IAAI,CAAC,GAAG,CAAC,CAAC;IACV,IAAI,CAAC,GAAG,CAAC,CAAC;IAEV,IAAI,KAAK,KAAK,CAAC,EAAE;QACb,CAAC,GAAG,CAAC,CAAC;KACT;SAAM,IAAI,IAAI,KAAK,CAAC,EAAE;QACnB,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC;KAC7B;SAAM,IAAI,IAAI,KAAK,CAAC,EAAE;QACnB,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,KAAK,GAAG,CAAC,CAAC;KAC3B;SAAM;QACH,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,KAAK,GAAG,CAAC,CAAC;KAC3B;IAED,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;IAEvB,IAAI,CAAC,GAAG,CAAC,EAAE;QACP,CAAC,IAAI,GAAG,CAAC;KACZ;IAED,CAAC,GAAG,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC;IACtB,CAAC,GAAG,KAAK,KAAK,CAAC,GAAG,CAAC,GAAG,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACxD,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;IAC1B,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;IAE1B,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;AACvB,CAAC;SAEe,aAAa,CAAC,GAAW;IACrC,MAAM,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC;IAC9C,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAEtD,IAAI,CAAC,GAAQ,MAAM,CAAC,CAAC,CAAC,CAAC;IACvB,IAAI,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,CAAC;IACrD,IAAI,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,CAAC;;IAGrD,IAAI,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE;QACvB,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;KACjC;SAAM,IAAI,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE;QAC9B,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;KAC/D;SAAM,IAAI,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE;QAC/B,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;KACnD;;IAGD,IAAI,CAAC,IAAI,GAAG,EAAE;QACV,CAAC,IAAI,GAAG,CAAC;KACZ;;IAGD,IAAI,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE;QACrB,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;KAC3B;;IAGD,IAAI,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE;QACrB,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;KAC3B;IAED,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;AACvB,CAAC;SAEe,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAY;IACzC,IAAI,CAAC,CAAC;IACN,IAAI,CAAC,CAAC;IACN,IAAI,CAAC,CAAC;IAEN,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;QACd,CAAC,GAAG,CAAC,CAAC;KACT;IAED,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;QACd,CAAC,GAAG,CAAC,CAAC;KACT;IAED,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;QACd,CAAC,GAAG,CAAC,CAAC;KACT;IAED,CAAC,IAAI,EAAE,CAAC;IAER,IAAI,CAAC,GAAG,CAAC,EAAE;QACP,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;KACpB;IAED,CAAC,IAAI,CAAC,CAAC;IAEP,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IACtC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IAEtC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;IAC1C,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAE1C,IAAI,CAAC,GAAG,CAAC,EAAE;QACP,CAAC,GAAG,CAAC,CAAC;QACN,CAAC,GAAG,CAAC,CAAC;QACN,CAAC,GAAG,CAAC,CAAC;KACT;SAAM,IAAI,CAAC,GAAG,CAAC,EAAE;QACd,CAAC,GAAG,CAAC,CAAC;QACN,CAAC,GAAG,CAAC,CAAC;QACN,CAAC,GAAG,CAAC,CAAC;KACT;SAAM,IAAI,CAAC,GAAG,CAAC,EAAE;QACd,CAAC,GAAG,CAAC,CAAC;QACN,CAAC,GAAG,CAAC,CAAC;QACN,CAAC,GAAG,CAAC,CAAC;KACT;SAAM,IAAI,CAAC,GAAG,CAAC,EAAE;QACd,CAAC,GAAG,CAAC,CAAC;QACN,CAAC,GAAG,CAAC,CAAC;QACN,CAAC,GAAG,CAAC,CAAC;KACT;SAAM,IAAI,CAAC,GAAG,CAAC,EAAE;QACd,CAAC,GAAG,CAAC,CAAC;QACN,CAAC,GAAG,CAAC,CAAC;QACN,CAAC,GAAG,CAAC,CAAC;KACT;SAAM;QACH,CAAC,GAAG,CAAC,CAAC;QACN,CAAC,GAAG,CAAC,CAAC;QACN,CAAC,GAAG,CAAC,CAAC;KACT;IAED,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACpB,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,CAAC;IAC9B,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,CAAC;IAC9B,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,CAAC;IAE9B,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;AACvB,CAAC;SAEe,OAAO,CAAC,GAAW;IAC/B,MAAM,WAAW,GAAG,eAAe,CAAC,GAAG,CAAC,CAAC;IAEzC,IAAI,WAAW,KAAK,IAAI,EAAE;QACtB,OAAO,IAAI,CAAC;KACf;IAED,MAAM,GAAG,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;IAEjC,IAAI,GAAG,KAAK,IAAI,EAAE;QACd,OAAO,IAAI,CAAC;KACf;IAED,OAAO,OAAO,CAAC,GAAG,CAAC,CAAC;AACxB,CAAC;SAEe,OAAO,CAAC,GAAa;IACjC,MAAM,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC;IAEzB,OAAO,eAAe,CAAC,GAAG,CAAC,CAAC;AAChC,CAAC;SAEe,iBAAiB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAY;IACnD,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QACvB,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;QAEZ,IAAI,CAAC,IAAI,OAAO,EAAE;YACd,OAAO,CAAC,GAAG,KAAK,CAAC;SACpB;QAED,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,KAAK,IAAI,KAAK,EAAE,GAAG,CAAC,CAAC;KAC7C,CAAC,CAAC;IAEH,OAAO,MAAM,GAAG,CAAC,GAAG,MAAM,GAAG,CAAC,GAAG,MAAM,GAAG,CAAC,CAAC;AAChD,CAAC;SAEe,QAAQ,CAAC,IAAY,EAAE,IAAY;IAC/C,MAAM,EAAE,GAAG,iBAAiB,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;IAC5C,MAAM,EAAE,GAAG,iBAAiB,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;IAE5C,IAAI,EAAE,GAAG,EAAE,EAAE;QACT,OAAO,CAAC,EAAE,GAAG,IAAI,KAAK,EAAE,GAAG,IAAI,CAAC,CAAC;KACpC;IAED,OAAO,CAAC,EAAE,GAAG,IAAI,KAAK,EAAE,GAAG,IAAI,CAAC,CAAC;AACrC,CAAC;SAEe,gCAAgC,CAC5C,eAAuB,EAAE,UAAkB,EAAE,aAAqB;IAClE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC;IAE3C,IAAI,QAAQ,CAAC,eAAe,EAAE,UAAU,CAAC,IAAI,aAAa,EAAE;QACxD,OAAO;YACH,KAAK,EAAE,eAAe;YACtB,SAAS,EAAE,CAAC;SACf,CAAC;KACL;IAED,IAAI,QAAQ,GAAG,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAEvC,IAAI,QAAQ,CAAC,QAAQ,EAAE,UAAU,CAAC,GAAG,aAAa,EAAE;QAChD,OAAO,IAAI,CAAC;KACf;IAED,IAAI,GAAG,GAAG,CAAC,CAAC;IACZ,IAAI,GAAG,GAAG,CAAC,CAAC;IACZ,IAAI,QAAQ,GAAG,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACpC,IAAI,YAAY,CAAC;IACjB,IAAI,YAAY,CAAC;IAEjB,OAAO,QAAQ,KAAK,YAAY,IAAI,QAAQ,KAAK,YAAY,EAAE;QAC3D,YAAY,GAAG,QAAQ,CAAC;QACxB,YAAY,GAAG,QAAQ,CAAC;QAExB,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC;QACpB,eAAe,GAAG,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QAEvC,IAAI,QAAQ,CAAC,eAAe,EAAE,UAAU,CAAC,GAAG,aAAa,EAAE;YACvD,GAAG,GAAG,CAAC,CAAC;YACR,QAAQ,GAAG,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;SACnC;aAAM;YACH,GAAG,GAAG,CAAC,CAAC;YACR,QAAQ,GAAG,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;SACnC;KACJ;IAED,OAAO;QACH,KAAK,EAAE,QAAQ;QACf,SAAS,EAAE,GAAG;KACjB,CAAC;AACN,CAAC;SAEe,iCAAiC,CAC7C,eAAuB,EAAE,UAAkB,EAAE,aAAqB;IAClE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC;IAE3C,IAAI,QAAQ,CAAC,eAAe,EAAE,UAAU,CAAC,IAAI,aAAa,EAAE;QACxD,OAAO;YACH,KAAK,EAAE,eAAe;YACtB,SAAS,EAAE,CAAC;SACf,CAAC;KACL;IAED,IAAI,QAAQ,GAAG,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;IAEzC,IAAI,QAAQ,CAAC,QAAQ,EAAE,UAAU,CAAC,GAAG,aAAa,EAAE;QAChD,OAAO,IAAI,CAAC;KACf;IAED,IAAI,GAAG,GAAG,CAAC,CAAC;IACZ,IAAI,GAAG,GAAG,GAAG,CAAC;IACd,IAAI,QAAQ,GAAG,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACpC,IAAI,YAAY,CAAC;IACjB,IAAI,YAAY,CAAC;IAEjB,OAAO,QAAQ,KAAK,YAAY,IAAI,QAAQ,KAAK,YAAY,EAAE;QAC3D,YAAY,GAAG,QAAQ,CAAC;QACxB,YAAY,GAAG,QAAQ,CAAC;QAExB,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC;QACpB,eAAe,GAAG,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QAEvC,IAAI,QAAQ,CAAC,eAAe,EAAE,UAAU,CAAC,GAAG,aAAa,EAAE;YACvD,GAAG,GAAG,CAAC,CAAC;YACR,QAAQ,GAAG,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;SACnC;aAAM;YACH,GAAG,GAAG,CAAC,CAAC;YACR,QAAQ,GAAG,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;SACnC;KACJ;IAED,OAAO;QACH,KAAK,EAAE,QAAQ;QACf,SAAS,EAAE,GAAG;KACjB,CAAC;AACN,CAAC;SAEe,0BAA0B,CACtC,eAAuB,EAAE,UAAkB,EAAE,aAAqB;IAClE,MAAM,kBAAkB,GACpB,gCAAgC,CAAC,eAAe,EAAE,UAAU,EAAE,aAAa,CAAC,CAAC;IACjF,MAAM,mBAAmB,GACrB,iCAAiC,CAAC,eAAe,EAAE,UAAU,EAAE,aAAa,CAAC,CAAC;IAElF,IAAI,kBAAkB,KAAK,IAAI,EAAE;QAC7B,IAAI,mBAAmB,KAAK,IAAI,EAAE;YAC9B,OAAO,IAAI,CAAC;SACf;QAED,OAAO,mBAAmB,CAAC,KAAK,CAAC;KACpC;IAED,IAAI,mBAAmB,KAAK,IAAI,EAAE;QAC9B,OAAO,kBAAkB,CAAC,KAAK,CAAC;KACnC;IAED,MAAM,EAAE,CAAC,EAAE,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC;IAEvC,IAAI,mBAAmB,CAAC,SAAS,GAAG,CAAC,GAAG,CAAC,GAAG,kBAAkB,CAAC,SAAS,EAAE;QACtE,OAAO,mBAAmB,CAAC,KAAK,CAAC;KACpC;IAED,OAAO,kBAAkB,CAAC,KAAK,CAAC;AACpC,CAAC;SAEe,qBAAqB,CAAC,GAAa;IAC/C,OAAO,MAAM,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;AAC5F;;IC1ZY;AAAZ,WAAY,YAAY;IACpB,uDAAQ,CAAA;IACR,yDAAS,CAAA;IACT,+DAAY,CAAA;IACZ,+DAAY,CAAA;AAChB,CAAC,EALW,YAAY,KAAZ,YAAY;;;ICyDJA,6BACI;IAAAC,4BACW;IACfC,cAAW;;;;IAPnBF,4BACI;IAAAC,mCACkB;;IAClBD,4BACI;IAAAG,2FACI;IAGRD,cAAM;IACVA,cAAM;;;IAReE,YAA2C;IAA3CC,4DAA2C;IAE/BD,YAA4C;IAA5CC,qEAA4C;IAC3DD,YAAoC;IAApCC,uDAAoC;;;;IAUtDL,qCAEI;IADAM,uOAA+C;IAC/CN,6BAA+B;IAAAO,SAAsC;;IAAAL,cAAO;IAChFA,cAAe;;;IAFqCG,8CAA4B;IAC7CD,YAAsC;IAAtCI,0DAAsC;;;;ACjErF,IAAY,iBAGX;AAHD,WAAY,iBAAiB;IACzB,uDAAQ,CAAA;IACR,uDAAO,CAAA;AACX,CAAC,EAHW,iBAAiB,KAAjB,iBAAiB,QAG5B;MAcY,2BAA2B;IAOpC,YACY,SAAoD,EAC5B,IAA2B;QADnD,cAAS,GAAT,SAAS,CAA2C;QAC5B,SAAI,GAAJ,IAAI,CAAuB;QAL/D,iBAAY,GAAG,YAAY,CAAC;QAC5B,qBAAgB,GAAG,IAAI,CAAC;QAYxB,eAAU,GAAG,GAAG,CAAC;QACjB,kBAAa,GAAG,CAAC,CAAC;QAClB,kBAAa,GAAG,GAAG,CAAC;QAEpB,sBAAiB,GAAG,EAAE,CAAC;QACvB,yBAAoB,GAAG,CAAC,CAAC;QACzB,yBAAoB,GAAG,GAAG,CAAC;QAE3B,qBAAgB,GAAG,EAAE,CAAC;QACtB,wBAAmB,GAAG,CAAC,CAAC;QACxB,wBAAmB,GAAG,GAAG,CAAC;QAhBtB,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,YAAY,CAAC,QAAQ,CAAC;QAC1D,IAAI,CAAC,IAAI,CAAC,eAAe,GAAG,IAAI,IAAI,IAAI,CAAC,eAAe,KAAK,SAAS,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC,CAAC;QACtH,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,IAAI,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC;QACvE,IAAI,CAAC,IAAI,CAAC,aAAa,GAAG,IAAI,IAAI,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,GAAG,iBAAiB,CAAC,EAAE,CAAC;KACpG;IAiBD,QAAQ;QACJ,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC;QAClD,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACnD;IAED,QAAQ;QACJ,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,KAAK,YAAY,CAAC,SAAS,EAAE;YAC3C,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;YAC9B,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;SAC7B;aAAM,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,KAAK,YAAY,CAAC,YAAY,EAAE;YACrD,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;YACxB,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC;YACzB,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;YAEtB,IAAI,CAAC,oBAAoB,GAAG,EAAE,CAAC;YAC/B,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC;YAChC,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;YAE5B,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;YAC9B,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;YAC9B,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;SAC9B;aAAM,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,KAAK,YAAY,CAAC,YAAY,EAAE;YACrD,IAAI,CAAC,aAAa,GAAG,CAAC,EAAE,CAAC;YACzB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;YACxB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;YAErB,IAAI,CAAC,oBAAoB,GAAG,EAAE,CAAC;YAC/B,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC;YAChC,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;YAE5B,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;YAC9B,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;YAC9B,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;SAC9B;KACJ;IAED,kBAAkB;QACd,QAAQ,CAAC,eAAe,CAAC,KAAK,CAAC,WAAW,CAAC,2BAA2B,CAAC,WAAW,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC,CAAC;KACnH;IAED,yBAAyB,CAAC,KAAK;QAC3B,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;YAC5B,MAAM,GAAG,GAAG,aAAa,CAAC,KAAK,CAAC,CAAC;YACjC,IAAI,CAAC,yBAAyB,CAAC,GAAG,CAAC,CAAC;SACvC;aAAM,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;YACnC,MAAM,GAAG,GAAG,aAAa,CAAC,KAAK,CAAC,CAAC;YACjC,IAAI,CAAC,yBAAyB,CAAC,GAAG,CAAC,CAAC;SACvC;aAAM,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;YACjC,MAAM,GAAG,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;YAC3B,IAAI,CAAC,yBAAyB,CAAC,GAAG,CAAC,CAAC;SACvC;aAAM;;SAEN;QAED,IAAI,CAAC,kBAAkB,EAAE,CAAC;KAC7B;IAED,yBAAyB,CAAC,QAAkB;;QAExC,IAAI,QAAQ,CAAC,CAAC,IAAI,IAAI,CAAC,aAAa,IAAI,QAAQ,CAAC,CAAC,IAAI,IAAI,CAAC,aAAa,EAAE;YACtE,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC;SAChC;aAAM,IAAI,IAAI,CAAC,aAAa,GAAG,CAAC,IAAI,QAAQ,CAAC,CAAC,IAAI,CAAC,IAAI,QAAQ,CAAC,CAAC,IAAI,GAAG,EAAE;;YAEvE,QAAQ,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,GAAG,GAAG,CAAC;YAE9B,IAAI,QAAQ,CAAC,CAAC,IAAI,IAAI,CAAC,aAAa,IAAI,QAAQ,CAAC,CAAC,IAAI,IAAI,CAAC,aAAa,EAAE;gBACtE,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC;aAChC;SACJ;QAED,IAAI,CAAC,iBAAiB;YAClB,CAAC,QAAQ,CAAC,CAAC,IAAI,IAAI,CAAC,oBAAoB;gBACvC,QAAQ,CAAC,CAAC,IAAI,IAAI,CAAC,oBAAoB;gBACpC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,iBAAiB,CAAC;QAE5C,IAAI,CAAC,gBAAgB;YACjB,CAAC,QAAQ,CAAC,CAAC,IAAI,IAAI,CAAC,mBAAmB;gBACtC,QAAQ,CAAC,CAAC,IAAI,IAAI,CAAC,mBAAmB;gBACnC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC;;QAG3C,MAAM,GAAG,GAAG,EAAE,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC,EAAE,IAAI,CAAC,iBAAiB,EAAE,CAAC,EAAE,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxF,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,qBAAqB,CAAC,GAAG,CAAC,CAAC;;;QAI7C,MAAM,eAAe,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC;QACrC,MAAM,UAAU,GAAG,0BAA0B,CAAC,eAAe,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAE7G,IAAI,CAAC,4BAA4B,GAAG,eAAe,KAAK,UAAU,CAAC;QACnE,IAAI,CAAC,cAAc,GAAG,qBAAqB,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;KACpE;IAED,WAAW,CAAC,KAAK;QACb,IAAI,CAAC,yBAAyB,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC;QACnD,IAAI,CAAC,kBAAkB,EAAE,CAAC;KAC7B;IAED,kBAAkB,CAAC,KAAK;;QAEpB,IAAI,CAAC,yBAAyB,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC;KACtD;IAED,iBAAiB,CAAC,KAAK;;QAEnB,IAAI,CAAC,yBAAyB,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC,CAAC;KAC5G;IAED,kBAAkB,CAAC,KAAK;QACpB,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;KAC/C;IAED,MAAM,CAAC,KAAK;QACR,MAAM,KAAK,GAAG,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;;QAG5E,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;KAC/B;;AApJM,uCAAW,GAAG,gCAAgC,CAAC;sGAF7C,2BAA2B,qDASxB,eAAe;6DATlB,2BAA2B;QDtBxCR,2BAEI;QAAAA,0BACI;QAAAA,4BAA6B;QAAAO,SAAsC;;QAAAL,cAAO;QAC1EF,8BACI;QAAAA,6BACI;QAAAC,2BACW;QACfC,cAAW;QACfA,cAAS;QACbA,cAAK;QAELF,2BACI;QAAAA,2BACI;QAAAC,uBAAwG;QAExGD,4BACI;QAAAA,kCAA4B;QAAAO,UAAmC;;QAAAL,cAAY;QAC3EF,6BAII;QAAAA,oCACgD;QAA5CM,kHAAU,uBAAmB,IAAC;QAACJ,cAAa;QACpDA,cAAM;QACVA,cAAM;QACNF,4BACI;QAAAA,kCAA4B;QAAAO,UAA0C;;QAAAL,cAAY;QAClFF,6BAII;QAAAA,oCACmF;QAAnDM,kHAAU,8BAA0B,IAAC;QAACJ,cAAa;QACvFA,cAAM;QACVA,cAAM;QACNF,4BACI;QAAAA,kCAA4B;QAAAO,UAAyC;;QAAAL,cAAY;QACjFF,6BAII;QAAAA,oCAEsD;QAAlDM,kHAAU,6BAAyB,IAAC;QAACJ,cAAa;QAC1DA,cAAM;QACVA,cAAM;QACVA,cAAM;QACNF,6BACI;QAAAA,6BACI;QAAAA,qCAEc;QAD2CM,+HAAgB,8BAA0B,IAAC;;QACpGJ,cAAc;QAClBA,cAAM;QACNC,4EACI;QASRD,cAAM;QACVA,cAAM;QACNF,6BACI;QAAAA,yBACI;QAAAG,8FAEI;QAERD,cAAM;QACNF,6BACI;QAAAA,gCACI;QAAAO,UACJ;;QAAAL,cAAS;QACTF,gCACI;QADyEM,4GAAS,kBAAc,IAAC;QACjGC,UACJ;;QAAAL,cAAS;QACbA,cAAM;QACVA,cAAM;QAEVA,cAAM;;QAhF+BE,YAAsC;QAAtCI,2DAAsC;QAChDJ,YAAyB;QAAzBC,oCAAyB;QAUbD,YAAsE;QAAtEC,4HAAsE;QAGjED,YAAmC;QAAnCI,0DAAmC;QACtCJ,YAGiC;QAHjCC,mRAGiC;QAC1CD,YAAqB;QAArBC,oCAAqB,0BAAA,yBAAA;QAKTD,YAA0C;QAA1CI,iEAA0C;QACtCJ,YAG0B;QAH1BC,mRAG0B;QAC1CD,YAA4B;QAA5BC,2CAA4B,iCAAA,gCAAA;QAKhBD,YAAyC;QAAzCI,gEAAyC;QACtCJ,YAG2B;QAH3BC,mRAG2B;QAC1CD,YAA2B;QAA3BC,0CAA2B,gCAAA,mFAAA;QAOtBD,YAAkD;QAAlDC,qEAAkD;QAC1DD,YAAoB;QAApBC,+BAAoB,sDAAA,4DAAA,mDAAA;QAIhCD,YAAwB;QAAxBC,wCAAwB;QAcfD,YAA4B;QAA5BC,4CAA4B;QAMvBD,YAAyB;QAAzBC,oCAAyB;QACxCD,YACJ;QADIK,mEACJ;QAEIL,YACJ;QADIK,+DACJ;;+CCzDC,2BAA2B;cAJvC,SAAS;eAAC;gBACP,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC/C;;sBAUQ,MAAM;uBAAC,eAAe;;;;ICzBvBT,8BAEI;IAAAA,6BACI;IAAAC,2BAAwC;IAC5CC,cAAW;IACfA,cAAS;;;;;MCCJ,qBAAqB;IAkB9B,YACY,aAA4B,EAC5B,QAAmB,EACnB,OAAmB;QAFnB,kBAAa,GAAb,aAAa,CAAe;QAC5B,aAAQ,GAAR,QAAQ,CAAW;QACnB,YAAO,GAAP,OAAO,CAAY;QApBtB,QAAG,GAAG,EAAE,CAAC;QACT,UAAK,GAAG,EAAE,CAAC;QACX,UAAK,GAAG,EAAE,CAAC;QACX,aAAQ,GAAG,KAAK,CAAC;QACjB,aAAQ,GAAG,KAAK,CAAC;QACjB,eAAU,GAAG,GAAG,CAAC;QACjB,YAAO,GAAG,CAAC,CAAC;QACZ,SAAI,GAAiB,YAAY,CAAC,QAAQ,CAAC;QAE3C,cAAS,GAAG,IAAI,CAAC;QACjB,oBAAe,GAAG,IAAI,CAAC;QACvB,eAAU,GAAgB,WAAW,CAAC,WAAW,CAAC;QAEjD,iBAAY,GAAsB,IAAI,YAAY,EAAO,CAAC;QAEpE,gBAAW,GAAG,WAAW,CAAC;KAOzB;IAED,QAAQ;QACJ,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,oBAAoB,CAAC,4BAA4B,CAAC,CAAC;KACzG;IAED,WAAW;QACP,IAAI,IAAI,CAAC,YAAY,EAAE;YACnB,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;SACnC;KACJ;IAED,WAAW,CAAC,KAAU;QAClB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC;KACxD;IAED,WAAW;QACP,MAAM,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,UAAU,CAC3C,2BAA2B,EAC3B,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,eAAe,EAAE,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC;QAEnF,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,KAAK;YACnC,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,EAAE;gBACvC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;aAC3B;SACJ,CAAC,CAAC;KACN;;0FAlDQ,qBAAqB;uDAArB,qBAAqB;QDZlCD,kCACkB;QAClBD,2BACI;QAAAA,2BAGI;QAHiBM,4FAAS,iBAAa,IAAC;QAGxCH,yEAEI;QAIRD,cAAM;QACVA,cAAM;;QAbWG,8BAAe,0BAAA,8BAAA,4BAAA;QAE3BD,YAAU;QAAVC,yBAAU,6DAAA;QAEPD,YAAyD;QAAzDC,kFAAyD,8EAAA;QAEjDD,YAAiB;QAAjBC,iCAAiB;;+CCMpB,qBAAqB;cALjC,SAAS;eAAC;gBACP,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACxC;wGAEY,GAAG;kBAAX,KAAK;YACG,KAAK;kBAAb,KAAK;YACG,KAAK;kBAAb,KAAK;YACG,QAAQ;kBAAhB,KAAK;YACG,QAAQ;kBAAhB,KAAK;YACG,UAAU;kBAAlB,KAAK;YACG,OAAO;kBAAf,KAAK;YACG,IAAI;kBAAZ,KAAK;YAEG,SAAS;kBAAjB,KAAK;YACG,eAAe;kBAAvB,KAAK;YACG,UAAU;kBAAlB,KAAK;YAEI,YAAY;kBAArB,MAAM;;;MCqBE,kBAAkB;IAC3B,YAAoB,mBAAwC;QAAxC,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxD,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC;YACnC,qBAAqB;YACrB,mBAAmB;YACnB,sBAAsB;SACzB,CAAC,CAAC;KACN;;mDAPQ,kBAAkB;gHAAlB,kBAAkB,+CArBlB;YACL,YAAY;YACZ,mBAAmB;YACnB,WAAW;;YAEX,eAAe;YACf,eAAe;YACf,kBAAkB;YAClB,iBAAiB;YACjB,eAAe;YACf,aAAa;YACb,eAAe;;YAEf,aAAa;YACb,iBAAiB;YACjB,uBAAuB;YACvB,oBAAoB;SACvB;qFAIQ,kBAAkB,mBAFX,qBAAqB,EAAE,2BAA2B,aAlB9D,YAAY;QACZ,mBAAmB;QACnB,WAAW;;QAEX,eAAe;QACf,eAAe;QACf,kBAAkB;QAClB,iBAAiB;QACjB,eAAe;QACf,aAAa;QACb,eAAe;;QAEf,aAAa;QACb,iBAAiB;QACjB,uBAAuB;QACvB,oBAAoB,aAEb,qBAAqB;+CAGvB,kBAAkB;cAtB9B,QAAQ;eAAC;gBACN,OAAO,EAAE;oBACL,YAAY;oBACZ,mBAAmB;oBACnB,WAAW;;oBAEX,eAAe;oBACf,eAAe;oBACf,kBAAkB;oBAClB,iBAAiB;oBACjB,eAAe;oBACf,aAAa;oBACb,eAAe;;oBAEf,aAAa;oBACb,iBAAiB;oBACjB,uBAAuB;oBACvB,oBAAoB;iBACvB;gBACD,OAAO,EAAE,CAAE,qBAAqB,CAAE;gBAClC,YAAY,EAAE,CAAE,qBAAqB,EAAE,2BAA2B,CAAE;aACvE;;;AC9CD;;;;ACAA;;;;;;"}