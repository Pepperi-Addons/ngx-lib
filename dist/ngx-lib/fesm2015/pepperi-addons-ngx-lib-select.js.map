{"version":3,"file":"pepperi-addons-ngx-lib-select.js","sources":["../../../projects/ngx-lib/select/select.component.html","../../../projects/ngx-lib/select/select.component.ts","../../../projects/ngx-lib/select/select.module.ts","../../../projects/ngx-lib/select/public-api.ts","../../../projects/ngx-lib/select/pepperi-addons-ngx-lib-select.ts"],"sourcesContent":["<ng-container [formGroup]=\"form\">\r\n    <!-- New code -->\r\n    <ng-template #pepperiTemplate>\r\n        <ng-container *ngIf=\"type == 'multi'; then multiSelectBlock; else regularSelectBlock\"></ng-container>\r\n        <ng-template #regularSelectBlock>\r\n            <mat-form-field appearance=\"outline\" dir=\"{{ xAlignment === '2' ? 'rtl' : 'ltr' }}\">\r\n                <mat-select #select [required]=\"required ? required : undefined\" matInput disableOptionCentering\r\n                    class=\"body-sm text-align-{{ xAlignment }}\" [id]=\"key\"\r\n                    [ngClass]=\"{'right-alignment': xAlignment == '2'}\"\r\n                    [placeholder]=\"disabled || readonly ? '' : ('SELECT.HINT' | translate)\"\r\n                    [(ngModel)]=\"selectedValueModel\" [ngModelOptions]=\"{standalone: true}\" [disabled]=\"disabled\"\r\n                    (selectionChange)=\"selectionChange($event)\" (openedChange)=\"openedChange($event)\"\r\n                    title=\"{{ formattedValue }}\">\r\n                    <mat-option *ngIf=\"emptyOption\" value=\"\">{{ 'LIST.NONE' | translate }}</mat-option>\r\n                    <mat-option *ngFor=\"let option of options\" [value]=\"option.Key\">{{ option.Value }}</mat-option>\r\n                </mat-select>\r\n                <mat-error>\r\n                    <span class=\"body-xs\" [title]=\"'MESSAGES.ERROR_IS_REQUIRED' | translate: {field: label}\"\r\n                        [innerText]=\"'MESSAGES.ERROR_IS_REQUIRED' | translate: {field: label}\"></span>\r\n                </mat-error>\r\n            </mat-form-field>\r\n        </ng-template>\r\n        <ng-template #multiSelectBlock>\r\n            <mat-form-field appearance=\"outline\" dir=\"{{ xAlignment === '2' ? 'rtl' : 'ltr' }}\">\r\n                <mat-select #select [required]=\"required ? required : undefined\" matInput disableOptionCentering\r\n                    class=\"body-sm text-align-{{ xAlignment }}\" [id]=\"key\"\r\n                    [ngClass]=\"{'right-alignment': xAlignment == '2'}\"\r\n                    [placeholder]=\"disabled || readonly ? '' : ('SELECT.HINT' | translate)\"\r\n                    [(ngModel)]=\"selectedValuesModel\" [ngModelOptions]=\"{standalone: true}\" [disabled]=\"disabled\"\r\n                    (openedChange)=\"openedChange($event)\" multiple title=\"{{ formattedValue }}\">\r\n                    <mat-option *ngFor=\"let option of options\" [value]=\"option.Key\">{{ option.Value }}</mat-option>\r\n                </mat-select>\r\n                <mat-error><span class=\"body-xs\" [title]=\"'MESSAGES.ERROR_IS_REQUIRED' | translate: {field: label}\"\r\n                        [innerText]=\"'MESSAGES.ERROR_IS_REQUIRED' | translate: {field: label}\"> </span>\r\n                </mat-error>\r\n            </mat-form-field>\r\n        </ng-template>\r\n    </ng-template>\r\n\r\n    <ng-container *ngIf=\"layoutType === LAYOUT_TYPE.PepperiForm\">\r\n        <pep-field-title *ngIf=\"!parentFieldKey\" [label]=\"label\" [required]=\"required\" [disabled]=\"disabled\"\r\n            [xAlignment]=\"xAlignment\" [showTitle]=\"showTitle\">\r\n        </pep-field-title>\r\n        <ng-container *ngTemplateOutlet=\"pepperiTemplate\"></ng-container>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"layoutType === LAYOUT_TYPE.PepperiCard\">\r\n        <ng-container *ngIf=\"isInEditMode; then editBlock; else readOnlyBlock\"></ng-container>\r\n        <ng-template #editBlock>\r\n            <div [ngClass]=\"{'one-row': rowSpan === 1}\">\r\n                <ng-container *ngTemplateOutlet=\"pepperiTemplate\"></ng-container>\r\n            </div>\r\n        </ng-template>\r\n        <ng-template #readOnlyBlock>\r\n            <div class=\"pepperi-card-input card-flex-container\"\r\n                [ngClass]=\"{'one-row': rowSpan === 1, 'pepperi-button weak': isActive && !disabled}\"\r\n                [class]=\"'text-align-' + xAlignment\" (click)=\"!disabled ? cardTemplateClicked($event) : ''\">\r\n                <span *ngIf=\"showTitle && label != ''\" class=\"body-xs title\"\r\n                    title=\"{{ label }}\">{{ label }}&nbsp;</span>\r\n                <span [id]=\"key\" title=\"{{ formattedValue }}\" class=\"body-sm value\">{{ formattedValue }}</span>\r\n                <button *ngIf=\"isActive && !disabled\" class=\"pepperi-button weak card-edit-button\" mat-button>\r\n                    <mat-icon>\r\n                        <pep-icon name=\"system_edit\">\r\n                        </pep-icon>\r\n                    </mat-icon>\r\n                </button>\r\n            </div>\r\n        </ng-template>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"layoutType === LAYOUT_TYPE.PepperiTable\">\r\n        <ng-container *ngIf=\"isActive && !disabled; then selectedBlock; else notSelectedBlock\"></ng-container>\r\n        <ng-template #selectedBlock>\r\n            <ng-container *ngTemplateOutlet=\"pepperiTemplate\"></ng-container>\r\n        </ng-template>\r\n        <ng-template #notSelectedBlock>\r\n            <span [id]=\"key\" class=\"body-sm pepperi-report-input\" [ngClass]=\"{readonly: disabled}\"\r\n                title=\"{{ fieldFormattedValue }}\">{{ fieldFormattedValue }}</span>\r\n        </ng-template>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"layoutType === LAYOUT_TYPE.Editmodal\">\r\n        <pep-field-title [label]=\"label\" [required]=\"required\" [disabled]=\"disabled\" [xAlignment]=\"xAlignment\"\r\n            [showTitle]=\"showTitle\">\r\n        </pep-field-title>\r\n        <ng-container *ngTemplateOutlet=\"pepperiTemplate\"></ng-container>\r\n    </ng-container>\r\n</ng-container>","import {\r\n    Component, OnInit, OnChanges, Input, Output, EventEmitter, ViewChild, ElementRef,\r\n    ChangeDetectionStrategy, OnDestroy, Renderer2\r\n} from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { MatSelect } from '@angular/material/select';\r\nimport { LAYOUT_TYPE, CustomizationService } from '@pepperi-addons/ngx-lib';\r\n\r\n@Component({\r\n    selector: 'pep-select',\r\n    templateUrl: './select.component.html',\r\n    styleUrls: ['./select.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class PepperiSelectComponent implements OnChanges, OnInit, OnDestroy {\r\n    @Input() key = '';\r\n    @Input() value = '';\r\n    @Input() formattedValue = '';\r\n    @Input() label = '';\r\n    @Input() type = 'select';\r\n    @Input() required = false;\r\n    @Input() disabled = false;\r\n    @Input() readonly = false;\r\n    @Input() xAlignment = '0';\r\n    @Input() rowSpan = 1;\r\n    @Input() options: any = [];\r\n\r\n    controlType = 'select';\r\n\r\n    // @Input() field: PepperiFieldBase;\r\n    @Input() form: FormGroup = null;\r\n    @Input() layoutType: LAYOUT_TYPE = LAYOUT_TYPE.PepperiForm;\r\n    @Input() parentFieldKey: string = null;\r\n    @Input() isActive = false;\r\n    @Input() showTitle = true;\r\n    @Input() emptyOption = true;\r\n\r\n    @Output() valueChanged: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() formValidationChanged: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n    @ViewChild('select') select: MatSelect;\r\n\r\n    LAYOUT_TYPE = LAYOUT_TYPE;\r\n    standAlone = false;\r\n    isInEditMode = false;\r\n    // isFocus: boolean = false;\r\n    isMulti = false;\r\n    selectedValuesModel: string[];\r\n    selectedValueModel: string;\r\n    fieldFormattedValue = '';\r\n\r\n    constructor(\r\n        private customizationService: CustomizationService,\r\n        private renderer: Renderer2,\r\n        private element: ElementRef) { }\r\n\r\n    private addOptionsIfNeeded(): void {\r\n        if (this.isMulti) {\r\n            // Go gor all selected and add to options if not exist\r\n            // for (let i = 0; i < this.selectedValuesModel.length; i++) {\r\n            for (const selectedValue of this.selectedValuesModel) {\r\n                let valueNotExist = false;\r\n\r\n                if (this.options && !this.options.find((opt) => opt.Key === selectedValue)) {\r\n                    valueNotExist = true;\r\n                }\r\n\r\n                // Add it to options.\r\n                if (valueNotExist) {\r\n                    this.options.push({ Key: selectedValue, Value: selectedValue });\r\n                }\r\n            }\r\n        } else {\r\n            if (this.value && this.value !== '' && this.options && !this.options.find((opt) => opt.Key === this.value)) {\r\n                this.options.push({ Key: this.value, Value: this.formattedValue });\r\n            }\r\n        }\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        if (this.form === null) {\r\n            this.standAlone = true;\r\n            this.form = this.customizationService.getDefaultFromGroup(this.key, this.value, this.required, this.readonly, this.disabled);\r\n\r\n            this.renderer.addClass(this.element.nativeElement, CustomizationService.STAND_ALONE_FIELD_CLASS_NAME);\r\n        }\r\n    }\r\n\r\n    ngOnChanges(changes: any): void {\r\n        this.isMulti = this.type === 'multi';\r\n        if (this.isMulti) {\r\n            this.selectedValuesModel = this.value.length > 0 ? this.value.split(';') : [];\r\n        } else {\r\n            this.selectedValueModel = this.value;\r\n        }\r\n        this.fieldFormattedValue = typeof this.value === 'string' ? this.value.replace(new RegExp(';', 'g'), ', ') : '';\r\n\r\n        this.addOptionsIfNeeded();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        if (this.valueChanged) {\r\n            this.valueChanged.unsubscribe();\r\n        }\r\n\r\n        if (this.formValidationChanged) {\r\n            this.formValidationChanged.unsubscribe();\r\n        }\r\n    }\r\n\r\n    selectionChange(event: any): void {\r\n        // this.isFocus = false;\r\n        if (!this.isMulti) {\r\n            this.changeValue(this.selectedValueModel);\r\n        }\r\n    }\r\n\r\n    openedChange(event: any): void {\r\n        // Only on close.\r\n        if (!event) {\r\n            if (this.isMulti) {\r\n                // this.isFocus = false;\r\n                this.changeValue(this.selectedValuesModel.join(';'));\r\n            }\r\n\r\n            if (this.isInEditMode) {\r\n                this.isInEditMode = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    changeValue(value: any): void {\r\n        this.formattedValue = value;\r\n        this.customizationService.updateFormFieldValue(this.form, this.key, value, this.parentFieldKey);\r\n\r\n        if (this.required) {\r\n            const fieldControl = this.form.controls[this.key];\r\n            if (value) {\r\n                fieldControl.setErrors(null);\r\n            } else {\r\n                fieldControl.setErrors({\r\n                    serverError: 'Required',\r\n                });\r\n            }\r\n            this.formValidationChanged.emit(this.form.valid);\r\n        }\r\n\r\n        this.valueChanged.emit({ apiName: this.key, value });\r\n    }\r\n\r\n    cardTemplateClicked(event: any): void {\r\n        const self = this;\r\n        this.isInEditMode = true;\r\n\r\n        setTimeout(() => {\r\n            self.select.open();\r\n        }, 0);\r\n    }\r\n}\r\n","\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\n\r\nimport { MatCommonModule } from '@angular/material/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\nimport { PepperiModule } from '@pepperi-addons/ngx-lib';\r\nimport { PepperiIconModule, PepperiIconRegistry, pepperiIconSystemEdit } from '@pepperi-addons/ngx-lib/icon';\r\nimport { PepperiFieldTitleModule } from '@pepperi-addons/ngx-lib/field-title';\r\n\r\nimport { PepperiSelectComponent} from './select.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        ReactiveFormsModule,\r\n        FormsModule,\r\n        // Material modules\r\n        MatCommonModule,\r\n        MatButtonModule,\r\n        MatFormFieldModule,\r\n        MatSelectModule,\r\n        MatIconModule,\r\n        // Pepperi modules\r\n        PepperiModule,\r\n        PepperiIconModule,\r\n        PepperiFieldTitleModule\r\n    ],\r\n    exports: [PepperiSelectComponent, ],\r\n    declarations: [PepperiSelectComponent],\r\n})\r\nexport class PepperiSelectModule {\r\n    constructor(private pepperiIconRegistry: PepperiIconRegistry) {\r\n        this.pepperiIconRegistry.registerIcons([\r\n            pepperiIconSystemEdit\r\n        ]);\r\n    }\r\n}\r\n","/*\r\n * Public API Surface of ngx-lib/select\r\n */\r\nexport * from './select.module';\r\nexport * from './select.component';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i0.ɵɵelementContainer","i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵadvance","i0.ɵɵtextInterpolate","i0.ɵɵproperty","i0.ɵɵlistener","i0.ɵɵtemplate","i0.ɵɵelement","i0.ɵɵpropertyInterpolate","i0.ɵɵclassMapInterpolate1","i0.ɵɵelementContainerStart","i0.ɵɵelementContainerEnd","i0.ɵɵtextInterpolate1","i0.ɵɵclassMap"],"mappings":"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"}