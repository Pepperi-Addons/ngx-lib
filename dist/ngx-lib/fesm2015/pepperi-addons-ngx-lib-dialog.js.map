{"version":3,"file":"pepperi-addons-ngx-lib-dialog.js","sources":["../../../projects/ngx-lib/dialog/dialog.component.html","../../../projects/ngx-lib/dialog/dialog.component.ts","../../../projects/ngx-lib/dialog/dialog.module.ts","../../../projects/ngx-lib/dialog/public-api.ts","../../../projects/ngx-lib/dialog/pepperi-addons-ngx-lib-dialog.ts"],"sourcesContent":["<h2 mat-dialog-title *ngIf=\"data?.showHeader\" class=\"pepperi-border-bottom\">\r\n    <span class=\"pull-left flip\" *ngIf=\"data?.title?.length\">{{ data?.title }}</span>\r\n    <button mat-button [mat-dialog-close]=\"null\" class=\"pepperi-button icon-button md weak pull-right flip\">\r\n        <mat-icon>\r\n            <pep-icon name=\"system_close\">\r\n            </pep-icon>\r\n        </mat-icon>\r\n    </button>\r\n</h2>\r\n<div mat-dialog-content>\r\n    <span *ngIf=\"data?.contentType === DialogDataType.Text || data?.contentType === DialogDataType.Html\"\r\n        [innerHtml]=\"data?.content | safeHtml\"></span>\r\n    <textarea *ngIf=\"data?.contentType === DialogDataType.TextArea\" [readonly]=\"data?.contentData?.disabled\"\r\n        [name]=\"data?.contentData?.key\" (blur)=\"updateContent($event);\">{{ data?.content }}</textarea>\r\n</div>\r\n<div mat-dialog-actions *ngIf=\"data?.showFooter\" class=\"pepperi-border-top\">\r\n    <div class=\"spacing-element-negative\">\r\n        <button mat-button class=\"spacing-element pepperi-button md strong pull-right flip\" (click)=\"save()\">\r\n            {{ 'ACTIONS.SAVE' | translate }}\r\n        </button>\r\n        <button mat-button [mat-dialog-close]=\"null\" class=\"spacing-element pepperi-button md weak pull-right flip\">\r\n            {{ 'ACTIONS.CANCEL' | translate }}\r\n        </button>\r\n    </div>\r\n</div>","import { Component, Inject, ViewEncapsulation, Injectable, TemplateRef } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { LayoutService } from '@pepperi-addons/ngx-lib';\r\nimport { Overlay, ComponentType } from '@angular/cdk/overlay';\r\n\r\nexport enum DialogDataType {\r\n    Text,\r\n    TextArea,\r\n    Html,\r\n    Iframe\r\n}\r\n\r\nexport class DialogData {\r\n    title = '';\r\n    content: any;\r\n    contentType: DialogDataType = DialogDataType.Text;\r\n    contentData?: any;\r\n    showHeader = true;\r\n    showFooter = false;\r\n\r\n    constructor(\r\n        options: {\r\n            title?: string,\r\n            content?: any,\r\n            contentType: DialogDataType,\r\n            contentData?: any,\r\n            showHeader?: boolean,\r\n            showFooter?: boolean\r\n        }\r\n    ) {\r\n\r\n        this.title = options.title || '';\r\n        this.content = options.content || '';\r\n        this.contentType = options.contentType;\r\n        this.contentData = options.contentData || {};\r\n        this.showHeader = options.showHeader === undefined ? true : options.showHeader;\r\n        this.showFooter = options.showFooter === undefined ? true : options.showFooter;\r\n        // this.actionButtons = actionButtons;\r\n        // this.showLoadingSpinner = showLoadingSpinner;\r\n    }\r\n}\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class DialogService {\r\n\r\n    constructor(\r\n        private dialog: MatDialog,\r\n        private layoutService: LayoutService,\r\n        private overlay: Overlay) { }\r\n\r\n    getDialogConfig(\r\n        options: {\r\n            height?: string,\r\n            disableClose?: boolean,\r\n            minWidth?: string,\r\n            maxWidth?: string,\r\n            maxHeight?: string,\r\n            panelClass?: string,\r\n        } = {}\r\n    ): MatDialogConfig {\r\n\r\n        const dialogConfig = new MatDialogConfig();\r\n\r\n        dialogConfig.autoFocus = false;\r\n        dialogConfig.direction = this.layoutService.isRtl() ? 'rtl' : 'ltr';\r\n        dialogConfig.disableClose = options.disableClose || false;\r\n        dialogConfig.height = options.height || 'auto';\r\n        dialogConfig.maxWidth = options.maxWidth || '100vw';\r\n        dialogConfig.maxHeight = options.maxHeight || '100vh';\r\n        dialogConfig.minWidth = options.minWidth || '0';\r\n        dialogConfig.panelClass = ['pepperi-dialog', options.panelClass || ''];\r\n\r\n        dialogConfig.scrollStrategy = this.overlay.scrollStrategies.noop();\r\n\r\n        return dialogConfig;\r\n    }\r\n\r\n    openDefaultDialog(data: DialogData, config: MatDialogConfig = null): MatDialogRef<any> {\r\n        if (!config) {\r\n            config = this.getDialogConfig();\r\n        }\r\n\r\n        config.data = data;\r\n        const dialogRef = this.dialog.open(PepperiDefaultDialogComponent, config);\r\n        return dialogRef;\r\n    }\r\n\r\n    openDialog<T>(\r\n        componentOrTemplateRef: ComponentType<T> | TemplateRef<T>,\r\n        data: any = {},\r\n        config: MatDialogConfig = null): MatDialogRef<T> {\r\n\r\n        if (!config) {\r\n            config = this.getDialogConfig();\r\n        }\r\n\r\n        config.data = data;\r\n\r\n        const dialogRef = this.dialog.open(componentOrTemplateRef, config);\r\n        return dialogRef;\r\n    }\r\n}\r\n\r\n@Component({\r\n    templateUrl: './dialog.component.html',\r\n    styleUrls: ['./dialog.component.scss'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class PepperiDefaultDialogComponent {\r\n    DialogDataType = DialogDataType;\r\n\r\n    constructor(\r\n        @Inject(MAT_DIALOG_DATA) public data: DialogData,\r\n        public dialogRef: MatDialogRef<any>\r\n    ) { }\r\n\r\n    save(): void {\r\n        this.dialogRef.close(this.data ? this.data.content : '');\r\n    }\r\n\r\n    updateContent(e): void {\r\n        this.data.content = e.target ? e.target.value : (e.currentTarget ? e.currentTarget.value : '');\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { MatCommonModule } from '@angular/material/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\n\r\nimport { PepperiModule } from '@pepperi-addons/ngx-lib';\r\nimport { PepperiIconModule, PepperiIconRegistry, pepperiIconSystemClose } from '@pepperi-addons/ngx-lib/icon';\r\n\r\nimport { PepperiDefaultDialogComponent } from './dialog.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        BrowserModule,\r\n        BrowserAnimationsModule,\r\n        // Material modules,\r\n        MatCommonModule,\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        MatDialogModule,\r\n        // Pepperi modules\r\n        PepperiModule,\r\n        PepperiIconModule\r\n    ],\r\n    exports: [ ],\r\n    declarations: [PepperiDefaultDialogComponent],\r\n})\r\nexport class PepperiDialogModule {\r\n    constructor(private pepperiIconRegistry: PepperiIconRegistry) {\r\n        this.pepperiIconRegistry.registerIcons([\r\n            pepperiIconSystemClose\r\n        ]);\r\n    }\r\n}\r\n","/*\r\n * Public API Surface of ngx-lib/dialog\r\n */\r\nexport * from './dialog.module';\r\nexport * from './dialog.component';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵadvance","i0.ɵɵtextInterpolate","i0.ɵɵtemplate","i0.ɵɵelement","i0.ɵɵproperty","i0.ɵɵlistener","i0.ɵɵtextInterpolate1"],"mappings":"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"}