{"version":3,"file":"pepperi-addons-ngx-lib-list.js","sources":["../../../projects/ngx-lib/list/virtual-scroll.component.ts","../../../projects/ngx-lib/list/list.component.html","../../../projects/ngx-lib/list/list.component.ts","../../../projects/ngx-lib/list/list.module.ts","../../../projects/ngx-lib/list/public-api.ts","../../../projects/ngx-lib/list/pepperi-addons-ngx-lib-list.ts"],"sourcesContent":["import { Component, ContentChild, ElementRef, EventEmitter, Input, NgModule, NgZone, OnChanges,\r\n    OnDestroy, OnInit, Output, Renderer2, SimpleChanges, ViewChild } from '@angular/core';\r\n\r\nimport * as tween from '@tweenjs/tween.js';\r\ndeclare var _: any;\r\n\r\nexport interface ChangeEvent {\r\n    start?: number;\r\n    end?: number;\r\n    fromIndex?: number;\r\n    toIndex?: number;\r\n    addAtStart?: boolean;\r\n    calculatedChildHeight?: number;\r\n}\r\n\r\n@Component({\r\n    selector: 'virtual-scroll,[virtualScroll]',\r\n    exportAs: 'virtualScroll',\r\n    template: `\r\n        <div class=\"total-padding\" #shim></div>\r\n        <div class=\"scrollable-content\" #content>\r\n            <ng-content></ng-content>\r\n        </div>\r\n    `,\r\n    host: {\r\n        '[style.overflow-y]': \"parentScroll ? 'hidden' : 'auto'\"\r\n    },\r\n    styles: [\r\n        `\r\n    :host {\r\n        overflow: hidden;\r\n        position: relative;\r\n        display: block;\r\n        -webkit-overflow-scrolling: touch;\r\n    }\r\n    .scrollable-content {\r\n        top: 0;\r\n        left: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        position: absolute;\r\n        //   z-index:495;\r\n    }\r\n    .total-padding {\r\n        width: 1px;\r\n        opacity: 0;\r\n    }\r\n\r\n    .rtl {\r\n        .scrollable-content {\r\n            left: unset;\r\n            right: 0;\r\n        }\r\n    }\r\n  `\r\n    ]\r\n})\r\nexport class VirtualScrollComponent implements OnInit, OnChanges, OnDestroy {\r\n    //@Input()\r\n    //items: any[] = [];\r\n\r\n    @Input()\r\n    totalRows: number = 0;\r\n\r\n    @Input()\r\n    scrollbarWidth: number;\r\n\r\n    @Input()\r\n    scrollbarHeight: number;\r\n\r\n    @Input()\r\n    childWidth: number;\r\n\r\n    @Input()\r\n    childHeight: number;\r\n\r\n    @Input()\r\n    bufferAmount: number = 0;\r\n\r\n    @Input()\r\n    scrollAnimationTime: number = 1500;\r\n\r\n    @Input()\r\n    doNotCheckAngularZone: boolean = false;\r\n\r\n    private refreshHandler = () => {\r\n        this.refresh(true);\r\n    }\r\n    private _parentScroll: Element | Window;\r\n    @Input()\r\n    set parentScroll(element: Element | Window) {\r\n        if (this._parentScroll === element) {\r\n            return;\r\n        }\r\n        this._parentScroll = element;\r\n        this.addParentEventHandlers(this._parentScroll);\r\n    }\r\n\r\n    get parentScroll(): Element | Window {\r\n        return this._parentScroll;\r\n    }\r\n\r\n    @Input()\r\n    isTable: boolean = false;\r\n\r\n    //@Output()\r\n    //update: EventEmitter<any[]> = new EventEmitter<any[]>();\r\n    //viewPortItems: any[];\r\n\r\n    @Output()\r\n    change: EventEmitter<ChangeEvent> = new EventEmitter<ChangeEvent>();\r\n\r\n    @Output()\r\n    load: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    @Output()\r\n    start: EventEmitter<ChangeEvent> = new EventEmitter<ChangeEvent>();\r\n\r\n    @Output()\r\n    end: EventEmitter<ChangeEvent> = new EventEmitter<ChangeEvent>();\r\n\r\n    @ViewChild('content', { read: ElementRef })\r\n    contentElementRef: ElementRef;\r\n\r\n    @ViewChild('shim', { read: ElementRef })\r\n    shimElementRef: ElementRef;\r\n\r\n    @ContentChild('container')\r\n    containerElementRef: ElementRef;\r\n\r\n    previousStart: number;\r\n    previousEnd: number;\r\n    startupLoop: boolean = true;\r\n    currentTween: any;\r\n\r\n    private disposeScrollHandler: () => void | undefined;\r\n    private disposeResizeHandler: () => void | undefined;\r\n\r\n    /** Cache of the last scroll height to prevent setting CSS when not needed. */\r\n    private lastScrollHeight = -1;\r\n\r\n    /** Cache of the last top padding to prevent setting CSS when not needed. */\r\n    private lastTopPadding = -1;\r\n\r\n    constructor(public element: ElementRef, private renderer: Renderer2, private zone: NgZone) { }\r\n\r\n    ngOnInit() {\r\n        this.scrollbarWidth = 0; // this.element.nativeElement.offsetWidth - this.element.nativeElement.clientWidth;\r\n        this.scrollbarHeight = 0; // this.element.nativeElement.offsetHeight - this.element.nativeElement.clientHeight;\r\n\r\n        if (!this.parentScroll) {\r\n            this.addParentEventHandlers(this.element.nativeElement);\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.removeParentEventHandlers();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        this.previousStart = undefined;\r\n        this.previousEnd = undefined;\r\n        const totalRows = (changes as any).totalRows || {};\r\n        if (((changes as any).totalRows !== undefined && totalRows.previousValue === undefined) ||\r\n            totalRows.previousValue !== undefined) {\r\n            this.startupLoop = true;\r\n        }\r\n\r\n        var ieVer = this.detectIE();\r\n        var headerRowHeight = '34px';\r\n\r\n        // Set padding top for the table view because the header row.\r\n        //this.renderer.setStyle(this.contentElementRef.nativeElement, 'padding-top', this.isTable ? headerRowHeight : '0');\r\n\r\n        if (!ieVer || ieVer >= 16) {\r\n            // not IE and version < 16\r\n            this.renderer.setStyle(this.element.nativeElement, 'top', '0');\r\n        } else {\r\n            this.renderer.setStyle(this.element.nativeElement, 'top', headerRowHeight);\r\n        }\r\n\r\n        //Only for IE browsers\r\n        /*  let ua = navigator.userAgent;\r\n        if (this.isTable && (ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0 || ua.indexOf('Edge/') >= 0)) {\r\n            this.renderer.setStyle(this.element.nativeElement, 'top', headerRowHeight);\r\n        }\r\n        else {\r\n            this.renderer.setStyle(this.element.nativeElement, 'top', '0');\r\n        }*/\r\n\r\n        this.refresh();\r\n    }\r\n\r\n    detectIE(): any {\r\n        var ua = window.navigator.userAgent;\r\n\r\n        // Test values; Uncomment to check result â€¦\r\n\r\n        // IE 10\r\n        // ua = 'Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Trident/6.0)';\r\n\r\n        // IE 11\r\n        // ua = 'Mozilla/5.0 (Windows NT 6.3; Trident/7.0; rv:11.0) like Gecko';\r\n\r\n        // Edge 12 (Spartan)\r\n        // ua = 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.71 Safari/537.36 Edge/12.0';\r\n\r\n        // Edge 13\r\n        // ua = 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2486.0 Safari/537.36 Edge/13.10586';\r\n\r\n        var msie = ua.indexOf('MSIE ');\r\n        if (msie > 0) {\r\n            // IE 10 or older => return version number\r\n            return parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\r\n        }\r\n\r\n        var trident = ua.indexOf('Trident/');\r\n        if (trident > 0) {\r\n            // IE 11 => return version number\r\n            var rv = ua.indexOf('rv:');\r\n            return parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10);\r\n        }\r\n\r\n        var edge = ua.indexOf('Edge/');\r\n        if (edge > 0) {\r\n            // Edge (IE 12+) => return version number\r\n            return parseInt(ua.substring(edge + 5, ua.indexOf('.', edge)), 10);\r\n        }\r\n\r\n        // other browser\r\n        return false;\r\n    }\r\n\r\n    refresh(forceViewportUpdate: boolean = false) {\r\n        this.zone.runOutsideAngular(() => {\r\n            requestAnimationFrame(() => this.calculateItems(forceViewportUpdate));\r\n        });\r\n    }\r\n\r\n    scrollInto(index: any) {\r\n        let el: Element = this.parentScroll instanceof Window ? document.body : this.parentScroll || this.element.nativeElement;\r\n        let offsetTop = this.getElementsOffset();\r\n        //let index: number = (this.items || []).indexOf(item);\r\n        if (index < 0 || index >= this.totalRows) return;\r\n\r\n        let d = this.calculateDimensions();\r\n        let scrollTop = Math.floor(index / d.itemsPerRow) * d.childHeight - d.childHeight * Math.min(index, this.bufferAmount);\r\n\r\n        let animationRequest;\r\n\r\n        if (this.currentTween !== undefined) { this.currentTween.stop(); }\r\n\r\n        // totally disable animate\r\n        if (!this.scrollAnimationTime) {\r\n            el.scrollTop = scrollTop;\r\n            return;\r\n        }\r\n\r\n        this.currentTween = new tween.Tween({ scrollTop: el.scrollTop })\r\n            .to({ scrollTop }, this.scrollAnimationTime)\r\n            .easing(tween.Easing.Quadratic.Out)\r\n            .onUpdate(data => {\r\n                if (isNaN(data.scrollTop)) {\r\n                    return;\r\n                }\r\n                this.renderer.setProperty(el, 'scrollTop', data.scrollTop);\r\n                this.refresh(true);\r\n            })\r\n            .onStop(() => {\r\n                cancelAnimationFrame(animationRequest);\r\n            })\r\n            .start();\r\n\r\n        const animate = (time?) => {\r\n            this.currentTween.update(time);\r\n            if (this.currentTween._object.scrollTop !== scrollTop) {\r\n                this.zone.runOutsideAngular(() => {\r\n                    animationRequest = requestAnimationFrame(animate);\r\n                });\r\n            }\r\n        };\r\n\r\n        animate();\r\n    }\r\n\r\n    private addParentEventHandlers(parentScroll: Element | Window) {\r\n        this.removeParentEventHandlers();\r\n        if (parentScroll) {\r\n            this.zone.runOutsideAngular(() => {\r\n                this.disposeScrollHandler = this.renderer.listen(parentScroll, 'mousewheel', _.throttle(this.refreshHandler, 20, { leading: false, trailing: true }));\r\n                this.renderer.listen(parentScroll, 'scroll', _.debounce(this.refreshHandler, 150));\r\n\r\n                //this.renderer.listen(parentScroll, 'scroll', _.debounce(_.throttle(this.refreshHandler, 150), 50));\r\n\r\n                if (parentScroll instanceof Window) {\r\n                    this.disposeScrollHandler = this.renderer.listen('window', 'resize', _.debounce(this.refreshHandler, 250));\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    private removeParentEventHandlers() {\r\n        if (this.disposeScrollHandler) {\r\n            this.disposeScrollHandler();\r\n            this.disposeScrollHandler = undefined;\r\n        }\r\n        if (this.disposeResizeHandler) {\r\n            this.disposeResizeHandler();\r\n            this.disposeResizeHandler = undefined;\r\n        }\r\n    }\r\n\r\n    private countItemsPerRow() {\r\n        let offsetTop;\r\n        let itemsPerRow;\r\n        let children = this.contentElementRef.nativeElement.children;\r\n        for (itemsPerRow = 0; itemsPerRow < children.length; itemsPerRow++) {\r\n            if (offsetTop != undefined && offsetTop !== children[itemsPerRow].offsetTop) break;\r\n            offsetTop = children[itemsPerRow].offsetTop;\r\n        }\r\n        return itemsPerRow;\r\n    }\r\n\r\n    private getElementsOffset(): number {\r\n        let offsetTop = 0;\r\n        if (this.containerElementRef && this.containerElementRef.nativeElement) {\r\n            offsetTop += this.containerElementRef.nativeElement.offsetTop;\r\n        }\r\n        if (this.parentScroll) {\r\n            offsetTop += this.element.nativeElement.offsetTop;\r\n        }\r\n        return offsetTop;\r\n    }\r\n\r\n    private calculateDimensions() {\r\n        let el: Element = this.parentScroll instanceof Window ? document.body : this.parentScroll || this.element.nativeElement;\r\n        let itemCount = this.totalRows;\r\n        let viewWidth = el.clientWidth - this.scrollbarWidth;\r\n        let viewHeight = el.clientHeight - this.scrollbarHeight;\r\n\r\n        let contentDimensions;\r\n        if (this.childWidth == undefined || this.childHeight == undefined) {\r\n            let content = this.contentElementRef.nativeElement;\r\n            if (this.containerElementRef && this.containerElementRef.nativeElement) {\r\n                content = this.containerElementRef.nativeElement;\r\n            }\r\n            contentDimensions = content.children[0]\r\n                ? content.children[0].getBoundingClientRect()\r\n                : {\r\n                    width: viewWidth,\r\n                    height: viewHeight\r\n                };\r\n        }\r\n\r\n        let childWidth = this.childWidth || contentDimensions.width;\r\n        let childHeight = this.childHeight || contentDimensions.height;\r\n\r\n        let itemsPerRow = Math.max(1, this.countItemsPerRow());\r\n        let itemsPerRowByCalc = Math.max(1, Math.floor(viewWidth / childWidth));\r\n        let itemsPerCol = Math.max(1, Math.floor(viewHeight / childHeight));\r\n        let elScrollTop = this.parentScroll instanceof Window ? window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0 : el.scrollTop;\r\n        let scrollTop = Math.max(0, elScrollTop);\r\n\r\n        var scrollHeight = childHeight * Math.floor(itemCount / itemsPerRow) + (itemCount % itemsPerRow != 0 ? childHeight : 0);\r\n\r\n        let ua = navigator.userAgent;\r\n        /*if (this.isTable && (ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0 || ua.indexOf('Edge/') >= 0)) {\r\n            scrollHeight += 34;\r\n        }*/\r\n        if (itemsPerCol === 1 && Math.floor((scrollTop / scrollHeight) * itemCount) + itemsPerRowByCalc >= itemCount) {\r\n            itemsPerRow = itemsPerRowByCalc;\r\n        }\r\n\r\n        if (scrollHeight !== this.lastScrollHeight) {\r\n            this.renderer.setStyle(this.shimElementRef.nativeElement, 'height', `${scrollHeight}px`);\r\n            this.lastScrollHeight = scrollHeight;\r\n        }\r\n\r\n        return {\r\n            itemCount: itemCount,\r\n            viewWidth: viewWidth,\r\n            viewHeight: viewHeight,\r\n            childWidth: childWidth,\r\n            childHeight: childHeight,\r\n            itemsPerRow: itemsPerRow,\r\n            itemsPerCol: itemsPerCol,\r\n            itemsPerRowByCalc: itemsPerRowByCalc,\r\n            scrollHeight\r\n        };\r\n    }\r\n\r\n    private calculateItems(forceViewportUpdate: boolean = false) {\r\n        if (!this.doNotCheckAngularZone) {\r\n            NgZone.assertNotInAngularZone();\r\n        }\r\n\r\n        let el = this.parentScroll instanceof Window ? document.body : this.parentScroll || this.element.nativeElement;\r\n        let d = this.calculateDimensions();\r\n\r\n        //let items = this.items || [];\r\n        let offsetTop = this.getElementsOffset();\r\n        let elScrollTop = this.parentScroll instanceof Window ? window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0 : el.scrollTop;\r\n\r\n        if (elScrollTop > d.scrollHeight) {\r\n            elScrollTop = d.scrollHeight + offsetTop;\r\n        }\r\n\r\n        let scrollTop = Math.max(0, elScrollTop - offsetTop);\r\n        let indexByScrollTop = ((scrollTop / d.scrollHeight) * d.itemCount) / d.itemsPerRow;\r\n        let end = Math.min(d.itemCount, Math.ceil(indexByScrollTop) * d.itemsPerRow + d.itemsPerRow * (d.itemsPerCol + 1));\r\n\r\n        let maxStartEnd = end;\r\n        const modEnd = end % d.itemsPerRow;\r\n        if (modEnd) {\r\n            maxStartEnd = end + d.itemsPerRow - modEnd;\r\n        }\r\n        let maxStart = Math.max(0, maxStartEnd - d.itemsPerCol * d.itemsPerRow - d.itemsPerRow);\r\n        let start = Math.min(maxStart, Math.floor(indexByScrollTop) * d.itemsPerRow);\r\n\r\n        let startRow = Math.ceil(start / d.itemsPerRow);\r\n\r\n        const topPadding = this.totalRows === 0 ? 0 : d.childHeight * startRow - d.childHeight * Math.min(startRow, this.bufferAmount);\r\n\r\n        if (topPadding !== this.lastTopPadding) {\r\n            this.renderer.setStyle(this.contentElementRef.nativeElement, 'transform', `translateY(${topPadding}px)`);\r\n            this.renderer.setStyle(this.contentElementRef.nativeElement, 'webkitTransform', `translateY(${topPadding}px)`);\r\n            this.lastTopPadding = topPadding;\r\n        }\r\n\r\n        let buffer = this.bufferAmount * d.itemsPerRow;\r\n        start = !isNaN(start) ? start : -1;\r\n        end = !isNaN(end) ? end : -1;\r\n        start -= buffer;\r\n        start = Math.max(0, start);\r\n        end += buffer;\r\n        end = Math.min(this.totalRows, end);\r\n\r\n        if (start !== this.previousStart || end !== this.previousEnd || forceViewportUpdate === true) {\r\n            this.zone.run(() => {\r\n                // update the scroll list\r\n                end = end >= 0 ? end : 0; // To prevent from accidentally selecting the entire array with a negative 1 (-1) in the end position.\r\n\r\n                //this.viewPortItems = this.items.slice(start, end);\r\n                //this.update.emit(this.viewPortItems);\r\n\r\n                // emit 'start' event\r\n                //if (start !== this.previousStart && this.startupLoop === false) {\r\n                //    this.start.emit({ start, end });\r\n                //}\r\n\r\n                // emit 'end' event\r\n                //if (end !== this.previousEnd && this.startupLoop === false) {\r\n                //    this.end.emit({ start, end });\r\n                //}\r\n\r\n                // To know if to add at the start of the list or at the end.\r\n                let addAtStart = this.previousEnd >= end;\r\n                this.previousStart = start;\r\n                this.previousEnd = end;\r\n\r\n                if (this.startupLoop === true) {\r\n                    this.refresh();\r\n                } else {\r\n                    let calculatedChildHeight = d.childHeight;\r\n                    this.change.emit({ start, end, addAtStart, calculatedChildHeight });\r\n                }\r\n            });\r\n        } else if (this.startupLoop === true) {\r\n            this.startupLoop = false;\r\n            // Added to know when the scroll is ready (UI elements are displayed already).\r\n            this.load.emit(); \r\n            this.refresh();\r\n        }\r\n    }\r\n}\r\n\r\n@NgModule({\r\n    exports: [VirtualScrollComponent],\r\n    declarations: [VirtualScrollComponent]\r\n})\r\nexport class VirtualScrollModule { }\r\n","<ng-container *ngIf=\"totalRows == 0\">\r\n    <div class=\"no-data\">{{ noDataFoundMsg }}</div>\r\n</ng-container>\r\n<ng-container *ngIf=\"totalRows > 0\">\r\n    <!--\r\n            appDebounceMouseMove\r\n            [debounceTime]=\"10\"\r\n            (debounceMouseMove)=\"onListResize($event)\" -->\r\n    <div *ngIf=\"isTable\" #tableHeader class=\"table-header\"\r\n        [ngClass]=\"{ 'below-header-and-top-bar' : parentScroll == null }\" (mouseup)=\"onListResizeEnd($event)\"\r\n        (mouseenter)=\"onListHeaderMouseEnter($event)\" (mouseleave)=\"onListHeaderMouseLeave($event)\"\r\n        (mousemove)=\"onListResize($event)\">\r\n        <fieldset class=\"table-header-fieldset\">\r\n            <mat-checkbox *ngIf=\"selectionTypeForActions !== SELECTION_TYPE_FOR_ACTIONS.None\" #selectAllCB\r\n                class=\"pull-left flip row-selection\" type=\"checkbox\" [ngStyle]=\"{\r\n                        visibility:\r\n                            selectionTypeForActions == SELECTION_TYPE_FOR_ACTIONS.Single || (selectionTypeForActions == SELECTION_TYPE_FOR_ACTIONS.Multi && hideAllSelectionInMulti) ? 'hidden' : 'visible'\r\n                    }\"\r\n                [indeterminate]=\"isAllSelected ? unSelectedItems.size > 0 && unSelectedItems.size < totalRows : (selectedItems.size > 0 && !getIsAllSelectedForActions())\"\r\n                [disabled]=\"disabled || selectionTypeForActions === SELECTION_TYPE_FOR_ACTIONS.Single\"\r\n                [checked]=\"getIsAllSelectedForActions()\" (change)=\"selectAllItemsForActions($event)\"></mat-checkbox>\r\n            <fieldset>\r\n                <div *ngFor=\"let field of uiControl?.ControlFields; let j = index\" class=\"header-column pull-left flip\"\r\n                    [ngStyle]=\"{ width: field.calcTitleColumnWidthString }\" [ngClass]=\"{\r\n                            'support-sorting': supportSorting,\r\n                            'has-sorting': field.ApiName === sortBy,\r\n                            'is-resizing': field.ApiName === pressedColumn,\r\n                            'is-first': j === 0 && selectionTypeForActions !== SELECTION_TYPE_FOR_ACTIONS.Multi,\r\n                            'is-last': j === uiControl?.ControlFields?.length - 1\r\n                        }\"\r\n                    (click)=\"supportSorting ? (onListSortingChange(field.ApiName, sortBy !== null && sortBy != field.ApiName ? true : !isAsc, $event)) : false\">\r\n\r\n                    <label *ngIf=\"field.Title != ''\" id=\"{{ field.ApiName }}\"\r\n                        class=\"header-label body-sm pull-left flip text-align-{{ field.Layout.XAlignment }}\"\r\n                        title=\"{{ field.Title }}\">\r\n                        {{ field.Title }}\r\n                    </label>\r\n                    <!-- (click)=\"onListSortingChange(field.ApiName, sortBy !== null && sortBy != field.ApiName ? true : !isAsc)\" -->\r\n                    <label *ngIf=\"field.Title == ''\" id=\"{{ field.ApiName }}\"\r\n                        class=\"header-label body-sm pull-left flip\">&nbsp;</label>\r\n\r\n                    <div *ngIf=\"supportResizing\" class=\"resizeBox pull-right flip\"\r\n                        (mousedown)=\"onListResizeStart($event, field.ApiName)\">\r\n                        <mat-icon>\r\n                            <pep-icon name=\"arrow-up\" class=\"asc\"></pep-icon>\r\n                        </mat-icon>\r\n                    </div>\r\n\r\n                    <!-- The onListSortingChange moved to the column click -->\r\n                    <!-- (click)=\"onListSortingChange(field.ApiName, true)\" -->\r\n                    <div *ngIf=\"supportSorting\" class=\"sortingBox pull-left flip\"\r\n                        [ngClass]=\"{ 'has-sorting': field.ApiName === sortBy }\">\r\n                        <mat-icon *ngIf=\"field.ApiName !== sortBy\">\r\n                            <pep-icon name=\"arrow-either\" class=\"asc\"></pep-icon>\r\n                        </mat-icon>\r\n\r\n                        <mat-icon *ngIf=\"field.ApiName === sortBy && !isAsc\"\r\n                            [ngClass]=\"{ 'sort-by': field.ApiName === sortBy && isAsc }\"\r\n                            title=\"{{ 'LIST.SORT_ASC' | translate }}\">\r\n                            <pep-icon name=\"arrow-down\" class=\"asc\"></pep-icon>\r\n                        </mat-icon>\r\n                        <mat-icon *ngIf=\"field.ApiName === sortBy && isAsc\"\r\n                            [ngClass]=\"{ 'sort-by': field.ApiName === sortBy && !isAsc }\"\r\n                            title=\"{{ 'LIST.SORT_DESC' | translate }}\">\r\n                            <pep-icon name=\"arrow-down\" class=\"desc\"></pep-icon>\r\n                        </mat-icon>\r\n                    </div>\r\n                </div>\r\n            </fieldset>\r\n        </fieldset>\r\n    </div>\r\n\r\n    <virtual-scroll *ngIf=\"useVirtualScroll\" [totalRows]=\"totalRows\" [isTable]=\"isTable\" (load)=\"onListLoad($event)\"\r\n        (change)=\"onListChange($event)\" [parentScroll]=\"parentScroll ? parentScroll : nativeWindow\"\r\n        [bufferAmount]=\"isReport ? (isTable ? 20 : 3) : isTable ? 15 : 3\"\r\n        [ngClass]=\"{ 'table-body': isTable, 'cards-body': !isTable }\">\r\n        <ng-container *ngTemplateOutlet=\"listData\"></ng-container>\r\n    </virtual-scroll>\r\n\r\n    <!-- <virtual-scroller *ngIf=\"useVirtualScroll\" [totalItems]=\"totalRows\" (vsChange)=\"onScrollerListChange($event)\"\r\n        [parentScroll]=\"parentScroll ? parentScroll : nativeWindow\"\r\n        [ngClass]=\"{ 'table-body': isTable, 'cards-body': !isTable }\">\r\n        <ng-container *ngTemplateOutlet=\"listData\"></ng-container>\r\n    </virtual-scroller> -->\r\n\r\n    <div #noVirtualScrollCont *ngIf=\"!useVirtualScroll\" [ngClass]=\"{ 'table-body': isTable, 'cards-body': !isTable }\">\r\n        <ng-container *ngTemplateOutlet=\"listData\"></ng-container>\r\n    </div>\r\n    <ng-container *ngTemplateOutlet=\"listTotals\"></ng-container>\r\n</ng-container>\r\n\r\n<!-- <img style=\"display:none;\" src=\"{{ envVariables.AssetsDomain + webappDirectory }}/assets/images/no-image.svg\" /> -->\r\n\r\n<ng-template #listData>\r\n    <ng-container *ngFor=\"let pepperiObjectInput of scrollItems; let index; let isFirst = first; trackBy: trackByFunc\">\r\n        <ng-container *ngIf=\"isTable\">\r\n            <div class=\"table-row\"\r\n                (mouseenter)=\"onTableRowMouseEnter($event, pepperiObjectInput?.Data?.UID, pepperiObjectInput?.Data?.Type)\"\r\n                (mouseleave)=\"onTableRowMouseLeave($event, pepperiObjectInput?.Data?.UID, pepperiObjectInput?.Data?.Type)\"\r\n                [ngClass]=\"{\r\n                        selected: isItemSelected(pepperiObjectInput?.Data?.UID, pepperiObjectInput?.Data?.Type),\r\n                        highlighted: pepperiObjectInput?.Data?.UID + SEPARATOR + pepperiObjectInput?.Data?.Type === selectedItemId\r\n                    }\"\r\n                [ngStyle]=\"{ height: calculatedObjectHeight, visibility: showItems || pepperiObjectInput ? 'visible' : 'hidden' }\">\r\n                <fieldset class=\"table-row-fieldset\"\r\n                    [ngStyle]=\"{ 'background-color': pepperiObjectInput?.Data?.BackgroundColor }\">\r\n                    <mat-checkbox\r\n                        *ngIf=\"selectionTypeForActions == SELECTION_TYPE_FOR_ACTIONS.Multi || selectionTypeForActions == SELECTION_TYPE_FOR_ACTIONS.SingleAction\"\r\n                        type=\"checkbox\" class=\"pull-left flip row-selection\"\r\n                        [disabled]=\"getIsDisabled(pepperiObjectInput)\" [ngStyle]=\"{\r\n                                visibility: isTouchDevice ||\r\n                                    pepperiObjectInput?.Data?.UID + SEPARATOR + pepperiObjectInput?.Data?.Type === hoveredItemId || isAllSelected || selectedItems.size > 0 ? 'visible' : 'hidden'\r\n                            }\"\r\n                        [checked]=\"getIsSelectedForActions(pepperiObjectInput?.Data?.UID, pepperiObjectInput?.Data?.IsSelectableForActions, pepperiObjectInput?.Data?.Type)\"\r\n                        (change)=\"selectItemForActions($event, pepperiObjectInput?.Data?.UID, pepperiObjectInput?.Data?.IsSelectableForActions, pepperiObjectInput?.Data?.Type)\">\r\n                    </mat-checkbox>\r\n                    <mat-radio-button *ngIf=\"selectionTypeForActions == SELECTION_TYPE_FOR_ACTIONS.Single\"\r\n                        name=\"selection\" class=\"pull-left flip row-selection pepperi-radio-button\"\r\n                        [disabled]=\"getIsDisabled(pepperiObjectInput)\"\r\n                        [checked]=\"getIsSelectedForActions(pepperiObjectInput?.Data?.UID, pepperiObjectInput?.Data?.IsSelectableForActions, pepperiObjectInput?.Data?.Type)\"\r\n                        (change)=\"selectItemForActions($event, pepperiObjectInput?.Data?.UID, pepperiObjectInput?.Data?.IsSelectableForActions, pepperiObjectInput?.Data?.Type)\">\r\n                    </mat-radio-button>\r\n                    <pep-form [checkForChanges]=\"checkForChanges\" [uiControlHeader]=\"uiControl\"\r\n                        [firstFieldAsLink]=\"firstFieldAsLink\" [pepperiObjectInput]=\"pepperiObjectInput\"\r\n                        [canEditObject]=\"!disabled && pepperiObjectInput?.IsEditable\" [objectId]=\"objectId\"\r\n                        [parentId]=\"parentId\" [searchCode]=\"searchCode\" [lockEvents]=\"disableSelectionItems\"\r\n                        [isReport]=\"isReport\" [layoutType]=\"LAYOUT_TYPE.PepperiTable\" [listType]=\"listType\" [isActive]=\"\r\n                                (pepperiObjectInput?.Data?.UID + SEPARATOR + pepperiObjectInput?.Data?.Type === selectedItemId ||\r\n                                pepperiObjectInput?.Data?.UID + SEPARATOR + pepperiObjectInput?.Data?.Type === hoveredItemId) && !isTouchDevice\r\n                            \" (notifyValueChanged)=\"onValueChanged($event)\"\r\n                        (notifyFieldClicked)=\"onCustomizeFieldClick($event)\"\r\n                        (notifyMenuItemClicked)=\"onCustomizeFieldMenuClicked($event)\"\r\n                        (click)=\"itemClicked($event, pepperiObjectInput)\" [pageType]=\"pageType\">\r\n                    </pep-form>\r\n                </fieldset>\r\n            </div>\r\n        </ng-container>\r\n\r\n        <ng-container *ngIf=\"!isTable\">\r\n            <div [class]=\"itemClass\"\r\n                (mouseenter)=\"onCardMouseEnter($event, pepperiObjectInput?.Data?.UID, pepperiObjectInput?.Data?.Type)\"\r\n                (mouseleave)=\"onCardMouseLeave($event, pepperiObjectInput?.Data?.UID, pepperiObjectInput?.Data?.Type)\"\r\n                [ngClass]=\"{\r\n                        selected: isItemSelected(pepperiObjectInput?.Data?.UID, pepperiObjectInput?.Data?.Type),\r\n                        highlighted: pepperiObjectInput?.Data?.UID + SEPARATOR + pepperiObjectInput?.Data?.Type === selectedItemId,\r\n                        cardView: isCardView\r\n                    }\" class=\"pull-left flip\"\r\n                [ngStyle]=\"{ height: calculatedObjectHeight, visibility: showItems || pepperiObjectInput ? 'visible' : 'hidden' }\">\r\n                <mat-checkbox *ngIf=\"showSelection\" class=\"pull-left flip card-selection\"\r\n                    [disabled]=\"getIsDisabled(pepperiObjectInput)\"\r\n                    [checked]=\"getIsSelectedForActions(pepperiObjectInput?.Data?.UID, pepperiObjectInput?.Data?.IsSelectableForActions, pepperiObjectInput?.Data?.Type)\"\r\n                    (change)=\"selectItemForActions($event, pepperiObjectInput?.Data?.UID, pepperiObjectInput?.Data?.IsSelectableForActions, pepperiObjectInput?.Data?.Type)\">\r\n                </mat-checkbox>\r\n                <pep-form [firstFieldAsLink]=\"isCardView ? firstFieldAsLink : false\" [checkForChanges]=\"checkForChanges\"\r\n                    [uiControlHeader]=\"uiControl\" [pepperiObjectInput]=\"pepperiObjectInput\" [isCardView]=\"isCardView\"\r\n                    [canEditObject]=\"!disabled && pepperiObjectInput?.IsEditable\" [objectId]=\"objectId\"\r\n                    [parentId]=\"parentId\" [searchCode]=\"searchCode\" [lockEvents]=\"disableSelectionItems\"\r\n                    [layoutType]=\"getThumbnailsLayout()\" [listType]=\"listType\" [isActive]=\"\r\n                            (pepperiObjectInput?.Data?.UID + SEPARATOR + pepperiObjectInput?.Data?.Type === selectedItemId ||\r\n                                pepperiObjectInput?.Data?.UID + SEPARATOR + pepperiObjectInput?.Data?.Type === hoveredItemId) && !isTouchDevice\r\n                        \" (notifyValueChanged)=\"onValueChanged($event)\"\r\n                    (notifyFieldClicked)=\"onCustomizeFieldClick($event)\"\r\n                    (notifyMenuItemClicked)=\"onCustomizeFieldMenuClicked($event)\"\r\n                    (click)=\"itemClicked($event, pepperiObjectInput)\" [pageType]=\"pageType\">\r\n                </pep-form>\r\n            </div>\r\n        </ng-container>\r\n    </ng-container>\r\n</ng-template>\r\n\r\n<ng-template #listTotals>\r\n    <div *ngIf=\"totalsRow?.length > 0 && totalsRow.length <= uiControl?.ControlFields.length\" class=\"table-total\">\r\n        <fieldset class=\"table-header-fieldset\">\r\n            <div *ngFor=\"let field of uiControl?.ControlFields; let j = index\" class=\"total-column pull-left flip\"\r\n                [ngStyle]=\"{ width: field.calcTitleColumnWidthString }\">\r\n                <label class=\"total-label body-sm text-align-{{ field.Layout.XAlignment }}\">\r\n                    {{ totalsRow[j] }}\r\n                </label>\r\n            </div>\r\n        </fieldset>\r\n    </div>\r\n</ng-template>","import {\r\n    Component, Input, Output, EventEmitter, OnInit, Renderer2, ViewChild, ElementRef,\r\n    ChangeDetectorRef, OnDestroy, OnChanges\r\n} from '@angular/core';\r\nimport { delay } from 'rxjs/operators';\r\nimport {\r\n    LAYOUT_TYPE, LayoutService, ObjectSingleData, UIControl, UIControlField,\r\n    FIELD_TYPE, ObjectsDataRow, SCREEN_SIZE, PepperiObjectChangedData, PepperiFieldClickedData\r\n} from '@pepperi-addons/ngx-lib';\r\nimport { VirtualScrollComponent, ChangeEvent } from './virtual-scroll.component';\r\n\r\nimport disableScroll from 'disable-scroll';\r\n\r\n// import { ApplicationState } from '../application-state/application-state';\r\n\r\nimport * as $ from 'jquery';\r\n\r\nexport enum SELECTION_TYPE_FOR_ACTIONS {\r\n    None,\r\n    Single,\r\n    Multi,\r\n    SingleAction\r\n}\r\nexport enum VIEW_TYPE {\r\n    None,\r\n    Card,\r\n    Line,\r\n    Table,\r\n    Map\r\n}\r\n\r\nexport interface ChangeSortingEvent {\r\n    sortBy: string;\r\n    isAsc: boolean;\r\n}\r\n\r\nexport class SelectionData {\r\n    selectionType: number;\r\n    rows: Array<any>;\r\n    rowTypes: Array<any>;\r\n}\r\n\r\n@Component({\r\n    selector: 'pep-list',\r\n    templateUrl: './list.component.html',\r\n    styleUrls: ['./list.component.scss'],\r\n    host: {\r\n        // '[style.width]': \"'inherit'\",\r\n        '(document:mousedown)': 'onMouseDown($event)',\r\n        '(window:resize)': 'winResize($event)'\r\n        // '(window:mouseup)': 'onListResizeEnd($event)',\r\n        // '(window:mousemove)': 'onListResize($event)'\r\n    }\r\n    // changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PepperiListComponent implements OnInit, OnChanges, OnDestroy {\r\n    static TOP_ITEMS_DEFAULT = 100;\r\n    static TOP_ITEMS_TABLE = 100;\r\n    static TOP_ITEMS_THUMBNAILS = 100;\r\n    static TOP_ITEMS_ARRAY = 2500;\r\n\r\n    static SELECTED_ITEMS_STATE_KEY = 'SelectedItems';\r\n    static UN_SELECTED_ITEMS_STATE_KEY = 'UnSelectedItems';\r\n    static ALL_SELECTED_STATE_KEY = 'AllSelected';\r\n    static SORT_BY_STATE_KEY = 'SortBy';\r\n    static ASCENDING_STATE_KEY = 'IsAscending';\r\n\r\n    static MINIMUM_COLUMN_WIDTH = 48;\r\n\r\n    @Input() currentListTypeTranslation = '';\r\n    @Input() noDataFoundMsg = 'Items not found';\r\n    @Input() selectionTypeForActions: SELECTION_TYPE_FOR_ACTIONS = SELECTION_TYPE_FOR_ACTIONS.Multi;\r\n    @Input() hideAllSelectionInMulti = false;\r\n\r\n    @Input() top = -1;\r\n    @Input() listType = '';\r\n    @Input() objectId = '0';\r\n    @Input() parentId = '0';\r\n    @Input() searchCode = '0';\r\n    // @Input() showTopBorder = false;\r\n    @Input() firstFieldAsLink = false;\r\n    @Input() supportSorting = true;\r\n    @Input() supportResizing = true;\r\n    @Input() parentScroll: Element | Window = null;\r\n    @Input() disabled = false;\r\n    @Input() isPrinting = false;\r\n    @Input() disableSelectionItems = false;\r\n    @Input() isReport = false;\r\n    @Input() layoutType: LAYOUT_TYPE = null;\r\n    @Input() pageType = '';\r\n    @Input() totalsRow = [];\r\n    @Input() isTouchDevice = false;\r\n\r\n    @Output() notifyThumbnailClicked: EventEmitter<ObjectSingleData> = new EventEmitter<ObjectSingleData>();\r\n    @Output() notifyFieldClicked: EventEmitter<any> = new EventEmitter<PepperiFieldClickedData>();\r\n    @Output() notifyMenuItemClicked: EventEmitter<any> = new EventEmitter<PepperiFieldClickedData>();\r\n    @Output() notifyValueChanged: EventEmitter<PepperiObjectChangedData> = new EventEmitter<PepperiObjectChangedData>();\r\n    @Output() notifyListChanged: EventEmitter<ChangeEvent> = new EventEmitter<ChangeEvent>();\r\n    @Output() notifySortingChanged: EventEmitter<ChangeSortingEvent> = new EventEmitter<ChangeSortingEvent>();\r\n\r\n    @Output() notifySelectedItemsChanged: EventEmitter<number> = new EventEmitter<number>();\r\n    @Output() notifySelectAllSingleActionClicked: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() notifySingleActionClicked: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    @Output() notifyListLoad: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    @ViewChild(VirtualScrollComponent) virtualScroll: VirtualScrollComponent;\r\n    @ViewChild('noVirtualScrollCont') noVirtualScrollCont: ElementRef;\r\n    @ViewChild('tableHeader') tableHeader: ElementRef;\r\n    @ViewChild('selectAllCB') selectAllCB: any;\r\n\r\n    LAYOUT_TYPE = LAYOUT_TYPE;\r\n    SELECTION_TYPE_FOR_ACTIONS = SELECTION_TYPE_FOR_ACTIONS;\r\n\r\n    public uiControl: UIControl = null;\r\n    public totalRows = -1;\r\n    itemClass: string;\r\n    isTable = false;\r\n    private hasColumnWidthOfTypePercentage = true;\r\n    public items: Array<ObjectSingleData> = null;\r\n    public showSelection = false;\r\n    isCardView = false;\r\n    private itemsCounter = 0;\r\n    showItems = true;\r\n    scrollItems: Array<ObjectSingleData>;\r\n\r\n    public SEPARATOR = ',';\r\n    public isAllSelected = false;\r\n    public selectedItems = new Map<string, string>();\r\n    public unSelectedItems = new Map<string, string>();\r\n\r\n    // public tableHeaderWidth: string;\r\n    nativeWindow: any = null;\r\n\r\n    selectedItemId = '';\r\n    hoveredItemId = '';\r\n\r\n    private lockEvents = false;\r\n    private containerWidth = 0;\r\n\r\n    screenSize: SCREEN_SIZE;\r\n\r\n    // headerIsInFocus = false;\r\n\r\n    // For resize\r\n    pressedColumn = '';\r\n    startX = 0;\r\n    startWidth = 0;\r\n    tableStartWidth = 0;\r\n\r\n    // For sorting\r\n    isAsc = true;\r\n    sortBy = '';\r\n    isUserSelected = false;\r\n    checkForChanges: any = null;\r\n    useVirtualScroll = true;\r\n    calculatedObjectHeight: string;\r\n\r\n    constructor(\r\n        private element: ElementRef,\r\n        private layoutService: LayoutService,\r\n        private cd: ChangeDetectorRef,\r\n        private renderer: Renderer2,\r\n        // private state: ApplicationState\r\n    ) {\r\n        this.layoutService.onResize$\r\n            .pipe(delay(0))\r\n            .subscribe(size => {\r\n                this.screenSize = size;\r\n            });\r\n\r\n        // this.checkForChanges = new Date().getTime();\r\n        // this.state.stateKey = location.href;\r\n        this.nativeWindow = window;\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.containerWidth = 0;\r\n    }\r\n\r\n    ngOnChanges(changes): void {\r\n        if (this.containerWidth <= 0) {\r\n            this.setContainerWidth();\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        if (this.notifyValueChanged) {\r\n            this.notifyValueChanged.unsubscribe();\r\n        }\r\n\r\n        if (this.notifyListChanged) {\r\n            this.notifyListChanged.unsubscribe();\r\n        }\r\n\r\n        if (this.notifySortingChanged) {\r\n            this.notifySortingChanged.unsubscribe();\r\n        }\r\n\r\n        if (this.notifyFieldClicked) {\r\n            this.notifyFieldClicked.unsubscribe();\r\n        }\r\n\r\n        if (this.notifyMenuItemClicked) {\r\n            this.notifyMenuItemClicked.unsubscribe();\r\n        }\r\n\r\n        if (this.notifyThumbnailClicked) {\r\n            this.notifyThumbnailClicked.unsubscribe();\r\n        }\r\n\r\n        this.saveSortingToSession();\r\n    }\r\n\r\n    setContainerWidth(): void {\r\n        const selectionCheckBoxWidth = this.selectionTypeForActions === SELECTION_TYPE_FOR_ACTIONS.Multi ? 44 : 0;\r\n\r\n        const rowHeight = 40; // the table row height (2.5rem * 16font-size).\r\n        const style = window.getComputedStyle(this.element.nativeElement.parentElement);\r\n        // The container-fluid class padding left + right + border\r\n        const containerFluidSpacing = parseInt(style.paddingLeft, 10) + parseInt(style.paddingRight, 10);\r\n\r\n        const parentContainer = this.element.nativeElement.parentElement.parentElement > 0 ?\r\n            this.element.nativeElement.parentElement.parentElement : this.element.nativeElement.parentElement;\r\n\r\n        // Calculate if vertical scroll should appear, if so set the scroll width. (this.totalRows + 1) + 1 is for the header row.\r\n        const scrollWidth = parentContainer.clientHeight < rowHeight * (this.totalRows + 1) ? 18 : 0; // 18 is the default scroll width.\r\n\r\n        // The selectionCheckBoxWidth width + containerFluidSpacing + scrollWidth.\r\n        const rowHeaderWidthToSub = containerFluidSpacing + selectionCheckBoxWidth + scrollWidth;\r\n        this.containerWidth = parentContainer.offsetWidth - rowHeaderWidthToSub;\r\n    }\r\n\r\n    saveSortingToSession(): void {\r\n        // this.state.setItemInState(PepperiListComponent.SORT_BY_STATE_KEY, this.sortBy);\r\n        // this.state.setItemInState(PepperiListComponent.ASCENDING_STATE_KEY, this.isAsc);\r\n        // this.state.writeToSession();\r\n    }\r\n\r\n    onMouseDown(event): void {\r\n        const self = this;\r\n\r\n        // if (!this.element.nativeElement.contains(event.target) || event.target.className === 'scrollable-content') {\r\n        //     setTimeout(() => {\r\n        //         if (self.selectionTypeForActions === SELECTION_TYPE_FOR_ACTIONS.Multi || self.selectionTypeForActions === SELECTION_TYPE_FOR_ACTIONS.SingleAction) {\r\n        //         }\r\n\r\n        //         // self.selectedItemId = '';\r\n        //         //self.hoveredItemId = '';\r\n        //     }, 500);\r\n        // }\r\n    }\r\n\r\n    removeTable(): void {\r\n        this.cleanItems();\r\n        this.uiControl = null;\r\n    }\r\n\r\n    private getTopItems(): number {\r\n        return this.isTable ? PepperiListComponent.TOP_ITEMS_TABLE : PepperiListComponent.TOP_ITEMS_THUMBNAILS;\r\n    }\r\n\r\n    private toggleItems(isVisible: boolean): void {\r\n        this.showItems = isVisible;\r\n        this.lockEvents = !isVisible;\r\n\r\n        if (this.useVirtualScroll) {\r\n            if (isVisible) {\r\n                disableScroll.off();\r\n            } else {\r\n                disableScroll.on();\r\n            }\r\n        }\r\n    }\r\n\r\n    private updateScrollItems(startIndex, endIndex, loadInChunks = true): void {\r\n        this.scrollItems = this.items.slice(startIndex, endIndex);\r\n        // if (!loadInChunks) {\r\n        //     this.scrollItems = this.items.slice(startIndex, endIndex).map((item) => item).filter((item) => item != null);\r\n        // } else {\r\n        //     // this.scrollItems = this.items.slice(startIndex, endIndex);\r\n\r\n        //     const ITEMS_RENDERED_AT_ONCE = 15;//this.isTable ? 1 : 7;\r\n        //     const INTERVAL_IN_MS = 10;\r\n\r\n        //     let currentIndex = 0;\r\n        //     const tmp = this.items.slice(startIndex, endIndex);\r\n        //     // this.scrollItems = [];\r\n\r\n        //     const interval = setInterval(() => {\r\n        //         const nextIndex = currentIndex + ITEMS_RENDERED_AT_ONCE;\r\n\r\n        //         for (let i = currentIndex; i < nextIndex; i++) {\r\n        //             // if (currentIndex === 0) {\r\n        //             //     this.scrollItems = [];\r\n        //             // }\r\n\r\n        //             if (i >= tmp.length) {\r\n        //                 clearInterval(interval);\r\n        //                 break;\r\n        //             }\r\n\r\n        //             if (this.scrollItems[i]) {\r\n        //                 this.scrollItems[i] = tmp[i];\r\n        //             } else {\r\n        //                 this.scrollItems.push(tmp[i]);\r\n        //             }\r\n        //         }\r\n\r\n        //         currentIndex += ITEMS_RENDERED_AT_ONCE;\r\n        //     }, INTERVAL_IN_MS);\r\n        // }\r\n    }\r\n\r\n    private setSelectionItems(itemId: string, uniqItemId: string, isChecked: boolean): void {\r\n        // Set selected item checkbox\r\n        if (this.isAllSelected) {\r\n            if (isChecked) {\r\n                this.unSelectedItems.delete(itemId);\r\n                this.selectedItems.set(itemId, uniqItemId);\r\n            } else {\r\n                this.selectedItems.delete(itemId);\r\n                this.unSelectedItems.set(itemId, uniqItemId);\r\n            }\r\n        } else {\r\n            if (isChecked) {\r\n                this.unSelectedItems.delete(itemId);\r\n                this.selectedItems.set(itemId, uniqItemId);\r\n            } else {\r\n                this.selectedItems.delete(itemId);\r\n                this.unSelectedItems.set(itemId, uniqItemId);\r\n            }\r\n        }\r\n    }\r\n\r\n    getUniqItemId(itemId: string, itemType: string = ''): string {\r\n        return itemId + this.SEPARATOR + itemType;\r\n    }\r\n\r\n    isItemSelected(itemId: string, itemType: string = ''): boolean {\r\n        let isSelected = false;\r\n        if (this.selectionTypeForActions === SELECTION_TYPE_FOR_ACTIONS.SingleAction ||\r\n            this.selectionTypeForActions === SELECTION_TYPE_FOR_ACTIONS.Multi) {\r\n            isSelected = this.selectedItems.has(itemId) || this.isAllSelected && !this.unSelectedItems.has(itemId);\r\n        } else if (this.selectionTypeForActions === SELECTION_TYPE_FOR_ACTIONS.Single) {\r\n            const uniqItemId = this.getUniqItemId(itemId, itemType);\r\n            isSelected = uniqItemId === this.selectedItemId;\r\n        }\r\n\r\n        return isSelected;\r\n    }\r\n\r\n    setLayout(): void {\r\n        const self = this;\r\n        if (this.totalRows === 0 ||\r\n            !this.uiControl ||\r\n            !this.uiControl.ControlFields ||\r\n            this.uiControl.ControlFields.length === 0) {\r\n            return;\r\n        }\r\n\r\n        this.uiControl.ControlFields.forEach((cf) => {\r\n            if (cf.ColumnWidth === 0) {\r\n                cf.ColumnWidth = 10;\r\n            }\r\n\r\n            if (self.isTable &&\r\n                (cf.FieldType === FIELD_TYPE.Image ||\r\n                    // cf.FieldType === FIELD_TYPE.Indicators || ???\r\n                    cf.FieldType === FIELD_TYPE.Signature ||\r\n                    cf.FieldType === FIELD_TYPE.NumberIntegerQuantitySelector ||\r\n                    cf.FieldType === FIELD_TYPE.NumberRealQuantitySelector ||\r\n                    cf.FieldType === FIELD_TYPE.NumberIntegerForMatrix ||\r\n                    cf.FieldType === FIELD_TYPE.NumberRealForMatrix ||\r\n                    cf.FieldType === FIELD_TYPE.Package ||\r\n                    cf.ApiName === 'UnitsQuantity' ||\r\n                    cf.ApiName === 'QuantitySelector')\r\n            ) {\r\n                cf.Layout.XAlignment = 3;\r\n            }\r\n        });\r\n\r\n        if (!this.cd['destroyed']) {\r\n            this.cd.detectChanges();\r\n        }\r\n\r\n        // Set the columns width.\r\n        if (this.containerWidth <= 0) {\r\n            this.setContainerWidth();\r\n        }\r\n\r\n        this.calcColumnsWidth();\r\n        this.checkForChanges = new Date().getTime();\r\n    }\r\n\r\n    private calcColumnsWidth(): void {\r\n        const fixedMultiple = 3.78; // for converting em to pixel.\r\n        const length = this.uiControl.ControlFields.length;\r\n        const selectionCheckBoxWidth = this.selectionTypeForActions === SELECTION_TYPE_FOR_ACTIONS.Multi ? 44 : 0;\r\n\r\n        // Is table AND there is at least one column of width type of percentage.\r\n        if (this.isTable) {\r\n            if (this.uiControl && this.uiControl.ControlFields) {\r\n                this.hasColumnWidthOfTypePercentage = this.uiControl.ControlFields.filter(cf => cf.ColumnWidthType === 1).length === 0;\r\n            }\r\n        }\r\n\r\n        // If the columns size is fixed and the total is small then the container change it to percentage.\r\n        if (!this.hasColumnWidthOfTypePercentage) {\r\n            const totalFixedColsWidth = this.uiControl.ControlFields\r\n                .map(cf => cf.ColumnWidth * fixedMultiple)\r\n                .reduce((sum, current) => sum + current);\r\n\r\n            if (window.innerWidth > totalFixedColsWidth) {\r\n                this.hasColumnWidthOfTypePercentage = true;\r\n            }\r\n        }\r\n\r\n        let totalCalcColsWidth = 0;\r\n\r\n        // Calc by percentage\r\n        if (this.hasColumnWidthOfTypePercentage) {\r\n            const totalColsWidth: number = this.uiControl.ControlFields.map(cf => cf.ColumnWidth).reduce((sum, current) => sum + current);\r\n\r\n            for (let index = 0; index < length; index++) {\r\n                const uiControlField: UIControlField = this.uiControl.ControlFields[index];\r\n                const calcColumnWidthPercentage = (100 / totalColsWidth) * uiControlField.ColumnWidth;\r\n\r\n                uiControlField.calcColumnWidth = Math.floor((this.containerWidth * calcColumnWidthPercentage) / 100);\r\n\r\n                if (index === length - 1) {\r\n                    uiControlField.calcTitleColumnWidthString = uiControlField.calcColumnWidthString =\r\n                        'calc(100% - ' + totalCalcColsWidth + 'px)'; // For 100%\r\n                } else {\r\n                    uiControlField.calcTitleColumnWidthString = uiControlField.calcColumnWidthString =\r\n                        uiControlField.calcColumnWidth + 'px';\r\n                    totalCalcColsWidth += uiControlField.calcColumnWidth;\r\n                }\r\n            }\r\n\r\n            this.renderer.setStyle(this.element.nativeElement, 'width', 'inherit');\r\n        } else {\r\n            for (let index = 0; index < length; index++) {\r\n                const uiControlField: UIControlField = this.uiControl.ControlFields[index];\r\n                const currentFixedWidth = Math.floor(uiControlField.ColumnWidth * fixedMultiple);\r\n\r\n                if (index === length - 1) {\r\n                    uiControlField.calcTitleColumnWidthString = currentFixedWidth + 'px';\r\n                    uiControlField.calcColumnWidthString = currentFixedWidth - 4 + 'px'; // -4 for the row padding.\r\n                } else {\r\n                    uiControlField.calcTitleColumnWidthString = uiControlField.calcColumnWidthString =\r\n                        currentFixedWidth + 'px';\r\n                }\r\n\r\n                totalCalcColsWidth += currentFixedWidth;\r\n            }\r\n\r\n            this.renderer.setStyle(this.element.nativeElement, 'width', totalCalcColsWidth + selectionCheckBoxWidth + 'px');\r\n        }\r\n    }\r\n\r\n    private initResizeData(): void {\r\n        this.startX = 0;\r\n        this.startWidth = 0;\r\n        this.tableStartWidth = 0;\r\n        this.pressedColumn = '';\r\n    }\r\n\r\n    onListResizeStart(event, apiName): void {\r\n        this.pressedColumn = apiName;\r\n        this.startX = event.x;\r\n        this.startWidth = event.target.closest('.header-column').offsetWidth;\r\n        if (this.useVirtualScroll) {\r\n            this.tableStartWidth = this.virtualScroll.contentElementRef.nativeElement.offsetWidth;\r\n        } else {\r\n            // Set the tableStartWidth to the container offsetWidth\r\n            this.tableStartWidth = this.noVirtualScrollCont.nativeElement.offsetWidth;\r\n        }\r\n    }\r\n\r\n    onListResize(event): void {\r\n        if (this.pressedColumn.length > 0) {\r\n            const widthToAdd = this.layoutService.isRtl() ? this.startX - event.x : event.x - this.startX;\r\n\r\n            // Set the width of the column and the container of the whole columns.\r\n            if (this.startWidth + widthToAdd >= PepperiListComponent.MINIMUM_COLUMN_WIDTH || widthToAdd > 0) {\r\n                const length = this.uiControl.ControlFields.length;\r\n                let totalCalcColsWidth = 0;\r\n\r\n                for (let index = 0; index < length; index++) {\r\n                    const uiControlField: UIControlField = this.uiControl.ControlFields[index];\r\n\r\n                    if (index === length - 1) {\r\n                        // Calc the last column only in percentage type.\r\n                        if (this.hasColumnWidthOfTypePercentage) {\r\n                            uiControlField.calcTitleColumnWidthString = uiControlField.calcColumnWidthString =\r\n                                'calc(100% - ' + totalCalcColsWidth + 'px)'; // For 100%\r\n                        } else {\r\n                            if (uiControlField.ApiName === this.pressedColumn) {\r\n                                uiControlField.calcColumnWidth = this.startWidth + widthToAdd;\r\n                                uiControlField.calcTitleColumnWidthString = uiControlField.calcColumnWidth + 'px';\r\n                                uiControlField.calcColumnWidthString = uiControlField.calcColumnWidth - 4 + 'px';\r\n                            }\r\n                        }\r\n                    } else if (uiControlField.ApiName === this.pressedColumn) {\r\n                        uiControlField.calcColumnWidth = this.startWidth + widthToAdd;\r\n                        uiControlField.calcTitleColumnWidthString = uiControlField.calcColumnWidthString =\r\n                            uiControlField.calcColumnWidth + 'px';\r\n                    }\r\n\r\n                    totalCalcColsWidth += uiControlField.calcColumnWidth;\r\n                }\r\n\r\n                this.renderer.setStyle(this.element.nativeElement, 'width', this.tableStartWidth + widthToAdd + 'px');\r\n            }\r\n\r\n            this.checkForChanges = new Date().getTime();\r\n        }\r\n    }\r\n\r\n    onListResizeEnd(event): void {\r\n        if (this.pressedColumn.length > 0) {\r\n            if (event && $(event.srcElement).parents('.resizeBox').length > 0) {\r\n                this.initResizeData();\r\n            } else {\r\n                // Set timeout 0 for onListSortingChange will have the pressedColumn.\r\n                const self = this;\r\n                setTimeout(() => {\r\n                    self.initResizeData();\r\n                }, 0);\r\n            }\r\n        }\r\n    }\r\n\r\n    onListSortingChange(sortBy: string, isAsc: boolean, event = null): void {\r\n        if (this.isPrinting) {\r\n            return;\r\n        }\r\n\r\n        if (this.pressedColumn.length > 0 || (event && $(event.srcElement).parents('.resizeBox').length > 0)) {\r\n            return;\r\n        }\r\n\r\n        if (this.sortBy !== sortBy || this.isAsc !== isAsc) {\r\n            this.sortBy = sortBy;\r\n            this.isAsc = isAsc;\r\n            this.saveSortingToSession();\r\n\r\n            this.notifySortingChanged.emit({ sortBy, isAsc });\r\n        }\r\n    }\r\n\r\n    onListHeaderMouseEnter(event): void {\r\n        // this.headerIsInFocus = true;\r\n    }\r\n\r\n    onListHeaderMouseLeave(event): void {\r\n        // this.headerIsInFocus = false;\r\n        this.onListResizeEnd(event);\r\n        this.initResizeData();\r\n    }\r\n\r\n    onListChange(event: ChangeEvent): void {\r\n        if (this.isPrinting) {\r\n            return;\r\n        }\r\n\r\n        // For other events do nothing.\r\n        if (typeof event.start === 'undefined' || typeof event.end === 'undefined') {\r\n            return;\r\n        }\r\n\r\n        this.calculatedObjectHeight = event.calculatedChildHeight + 'px';\r\n\r\n        if (!this.lockEvents) {\r\n            this.toggleItems(false);\r\n            this.updateScrollItems(event.start, event.end, false);\r\n\r\n            let getItemsFromApi = false;\r\n            let index: number = event.start;\r\n\r\n            while (!getItemsFromApi && index < event.end) {\r\n                if (!this.items[index]) {\r\n                    getItemsFromApi = true;\r\n                }\r\n                index++;\r\n            }\r\n\r\n            // Get bulk from api.\r\n            if (getItemsFromApi) {\r\n                const top = this.getTopItems() - 1;\r\n\r\n                if (event.addAtStart) {\r\n                    event.fromIndex = Math.max(event.start - (top - (event.end - event.start)), 0);\r\n                    event.toIndex = event.end;\r\n                } else {\r\n                    event.fromIndex = event.start;\r\n                    event.toIndex = Math.min(event.end + (top - (event.end - event.start)), this.totalRows);\r\n                }\r\n\r\n                this.notifyListChanged.emit(event);\r\n                // this.lockEvents = true;\r\n            } else {\r\n                // this.scrollItems = this.items.slice(event.start, event.end);\r\n                this.toggleItems(true);\r\n            }\r\n        }\r\n    }\r\n\r\n    // onScrollerListChange(event: any) {\r\n    //     if (this.isPrinting) {\r\n    //         return;\r\n    //     }\r\n\r\n    //     // For other events do nothing.\r\n    //     if (typeof event.startIndex === 'undefined' || typeof event.endIndex === 'undefined') {\r\n    //         return;\r\n    //     }\r\n\r\n    //     if (!this.lockEvents) {\r\n    //         this.toggleItems(false);\r\n    //         this.updateScrollItems(event.startIndex, event.endIndex);\r\n\r\n    //         let getItemsFromApi = false;\r\n    //         let index: number = event.startIndex;\r\n\r\n    //         while (!getItemsFromApi && index < event.endIndex) {\r\n    //             if (!this.items[index]) {\r\n    //                 getItemsFromApi = true;\r\n    //             }\r\n    //             index++;\r\n    //         }\r\n\r\n    //         // Get bulk from api.\r\n    //         if (getItemsFromApi) {\r\n    //             const top = this.getTopItems() - 1;\r\n\r\n    //             // if (event.addAtStart) {\r\n    //             //     event.fromIndex = Math.max(event.start - (top - (event.end - event.start)), 0);\r\n    //             //     event.toIndex = event.end;\r\n    //             // } else {\r\n    //             event.fromIndex = event.startIndex;\r\n    //             event.toIndex = Math.min(event.endIndex + (top - (event.endIndex - event.startIndex)), this.totalRows);\r\n    //             // }\r\n\r\n    //             this.notifyListChanged.emit(event);\r\n    //             // this.lockEvents = true;\r\n    //         } else {\r\n    //             // this.scrollItems = this.items.slice(event.start, event.end);\r\n    //             this.toggleItems(true);\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n    onListLoad(event: any): void {\r\n        this.notifyListLoad.emit(event);\r\n    }\r\n\r\n    getParentContainer(): Element | Window {\r\n        return this.parentScroll ? this.parentScroll : window;\r\n    }\r\n\r\n    onValueChanged(valueChanged: any): void {\r\n        if (this.disabled) {\r\n            return;\r\n        }\r\n\r\n        this.notifyValueChanged.emit(valueChanged);\r\n    }\r\n\r\n    onCustomizeFieldClick(customizeFieldClickedData: PepperiFieldClickedData): void {\r\n        if (this.disabled) {\r\n            return;\r\n        }\r\n\r\n        this.notifyFieldClicked.emit(customizeFieldClickedData);\r\n    }\r\n\r\n    onCustomizeFieldMenuClicked(customizeFieldClickedData: PepperiFieldClickedData): void {\r\n        if (this.disabled) {\r\n            return;\r\n        }\r\n\r\n        this.notifyMenuItemClicked.emit(customizeFieldClickedData);\r\n    }\r\n\r\n    getIsDisabled(pepperiObjectInput: ObjectSingleData): boolean {\r\n        if (this.disableSelectionItems) {\r\n            return true;\r\n        } else {\r\n            const IsNotSelectableForActions = pepperiObjectInput?.Data && !pepperiObjectInput.Data.IsSelectableForActions;\r\n            return IsNotSelectableForActions;\r\n        }\r\n    }\r\n\r\n    public getIsAllSelectedForActions(): boolean {\r\n        let res = false;\r\n\r\n        if (this.isAllSelected) {\r\n            if (this.unSelectedItems.size === 0) {\r\n                res = true;\r\n            }\r\n        } else {\r\n            if (this.selectedItems.size === this.totalRows) {\r\n                res = this.getIsAllSelected(this.scrollItems);\r\n            } else if (this.selectedItems.size < this.totalRows) {\r\n                // for (let index = 0; index < this.scrollItems.length; index++) {\r\n                //     const pepperiObjectInput = this.scrollItems[index];\r\n                for (const pepperiObjectInput of this.scrollItems) {\r\n                    res = pepperiObjectInput && pepperiObjectInput.Data &&\r\n                        this.selectedItems.has(pepperiObjectInput.Data.UID.toString());\r\n\r\n                    if (!res) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return res;\r\n    }\r\n\r\n    public setIsAllSelected(isChecked: boolean): void {\r\n        if (this.selectionTypeForActions === SELECTION_TYPE_FOR_ACTIONS.Multi ||\r\n            this.selectionTypeForActions === SELECTION_TYPE_FOR_ACTIONS.SingleAction) {\r\n            this.selectAllCB.checked = isChecked;\r\n            this.isAllSelected = isChecked;\r\n        }\r\n    }\r\n\r\n    selectAllItemsForActions(e: any): void {\r\n        // For material checkbox || radio.\r\n        const isChecked = e.source.checked;\r\n\r\n        // Indeterminate mode\r\n        let isIndeterminate = false;\r\n        const currentList = this.isAllSelected ? this.unSelectedItems : this.selectedItems;\r\n        if (currentList.size > 0) {\r\n            isIndeterminate = true;\r\n            this.isAllSelected = false;\r\n            this.notifySelectedItemsChanged.emit(0);\r\n            e.source.checked = false;\r\n        }\r\n\r\n        this.selectedItems.clear();\r\n        this.unSelectedItems.clear();\r\n\r\n        if (!isIndeterminate) {\r\n            this.isAllSelected = isChecked;\r\n            if (this.selectionTypeForActions === SELECTION_TYPE_FOR_ACTIONS.SingleAction) {\r\n                // Add all or remove all\r\n                this.notifySelectAllSingleActionClicked.emit(isChecked);\r\n            } else if (this.selectionTypeForActions === SELECTION_TYPE_FOR_ACTIONS.Multi) {\r\n                if (!isChecked) {\r\n                    this.notifySelectedItemsChanged.emit(0);\r\n                    this.selectedItemId = '';\r\n                } else {\r\n                    const filteredItems = this.items.filter(item => item.Data && item.Data.IsSelectableForActions);\r\n                    this.notifySelectedItemsChanged.emit(filteredItems.length);\r\n                }\r\n            }\r\n        } else {\r\n            if (this.selectionTypeForActions === SELECTION_TYPE_FOR_ACTIONS.SingleAction) {\r\n                // Remove all\r\n                this.notifySelectAllSingleActionClicked.emit(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    getIsSelectedForActions(itemId: string, isSelectableForActions: boolean, itemType: string = ''): boolean {\r\n        if (this.selectionTypeForActions === SELECTION_TYPE_FOR_ACTIONS.Single) {\r\n            return this.selectedItemId === this.getUniqItemId(itemId, itemType);\r\n        } else if (this.selectionTypeForActions === SELECTION_TYPE_FOR_ACTIONS.SingleAction) {\r\n            let res = this.isAllSelected || this.selectedItems.has(itemId);\r\n\r\n            if (this.unSelectedItems.has(itemId)) {\r\n                res = false;\r\n            }\r\n\r\n            return res;\r\n        } else if (this.selectionTypeForActions === SELECTION_TYPE_FOR_ACTIONS.Multi) {\r\n            if (!isSelectableForActions) {\r\n                return false;\r\n            } else {\r\n                let res = this.isAllSelected || this.selectedItems.has(itemId);\r\n\r\n                if (this.unSelectedItems.has(itemId)) {\r\n                    res = false;\r\n                }\r\n\r\n                return res;\r\n            }\r\n        }\r\n    }\r\n\r\n    selectItemForActions(e: any, itemId: string, isSelectableForActions: boolean, itemType: string = ''): void {\r\n        // For material checkbox || radio.\r\n        const isChecked = e.source.checked;\r\n        this.setItemClicked(itemId, isSelectableForActions, itemType, isChecked);\r\n    }\r\n\r\n    itemClicked(e: any, objectSingleData: ObjectSingleData): void {\r\n        // Set seleted item\r\n        const itemId = objectSingleData.Data.UID.toString();\r\n        const itemType = objectSingleData.Data.Type.toString();\r\n        let isChecked = false;\r\n\r\n        if (objectSingleData && objectSingleData.Data && objectSingleData.Data.IsSelectableForActions) {\r\n            this.selectedItemId = this.getUniqItemId(itemId, itemType);\r\n            isChecked = true;\r\n        }\r\n\r\n        if (this.isTable) {\r\n            if (this.selectionTypeForActions === SELECTION_TYPE_FOR_ACTIONS.Single) {\r\n                this.setItemClicked(itemId, objectSingleData.Data.IsSelectableForActions, itemType, isChecked);\r\n            } else if (this.selectionTypeForActions === SELECTION_TYPE_FOR_ACTIONS.None) {\r\n                // Just mark the row as highlighted\r\n                this.setItemClicked(itemId, objectSingleData.Data.IsSelectableForActions, itemType, true);\r\n            }\r\n        } else {\r\n            if (this.disabled) {\r\n                return;\r\n            }\r\n\r\n            this.notifyThumbnailClicked.emit(objectSingleData);\r\n        }\r\n    }\r\n\r\n    setItemClicked(itemId, isSelectableForActions: boolean, itemType: string, isChecked: boolean): void {\r\n        const uniqItemId = this.getUniqItemId(itemId, itemType);\r\n\r\n        // select the selected item.\r\n        if (isChecked) {\r\n            // Set seleted item\r\n            this.selectedItemId = uniqItemId;\r\n        } else {\r\n            if (this.selectedItemId === uniqItemId) {\r\n                this.selectedItemId = '';\r\n            }\r\n        }\r\n\r\n        if (this.selectionTypeForActions === SELECTION_TYPE_FOR_ACTIONS.Single) {\r\n            this.notifySelectedItemsChanged.emit(this.selectedItemId.length === 0 ? 0 : 1);\r\n        } else if (this.selectionTypeForActions === SELECTION_TYPE_FOR_ACTIONS.SingleAction) {\r\n            this.setSelectionItems(itemId, uniqItemId, isChecked);\r\n            this.notifySingleActionClicked.emit({ id: itemId, selected: isChecked });\r\n        } else if (this.selectionTypeForActions === SELECTION_TYPE_FOR_ACTIONS.Multi) {\r\n            if (isSelectableForActions) {\r\n                this.setSelectionItems(itemId, uniqItemId, isChecked);\r\n\r\n                const currentList = this.isAllSelected ? this.unSelectedItems : this.selectedItems;\r\n                const currentListCount = this.isAllSelected ? this.totalRows - currentList.size : currentList.size;\r\n                this.notifySelectedItemsChanged.emit(currentListCount);\r\n            }\r\n        }\r\n    }\r\n\r\n    onTableRowMouseEnter(event: any, itemId: string, itemType: string): void {\r\n        if (this.isTouchDevice) {\r\n            return;\r\n        }\r\n\r\n        const uniqItemId = this.getUniqItemId(itemId, itemType);\r\n        this.hoveredItemId = uniqItemId;\r\n    }\r\n\r\n    onTableRowMouseLeave(event: any, itemId: string, itemType: string): void {\r\n        this.hoveredItemId = '';\r\n    }\r\n\r\n    onCardMouseEnter(event: any, itemId: string, itemType: string): void {\r\n        if (this.isTouchDevice) {\r\n            return;\r\n        }\r\n\r\n        const uniqItemId = this.getUniqItemId(itemId, itemType);\r\n        this.hoveredItemId = uniqItemId;\r\n    }\r\n\r\n    onCardMouseLeave(event: any, itemId: string, itemType: string): void {\r\n        this.hoveredItemId = '';\r\n    }\r\n\r\n    getThumbnailsLayout(): LAYOUT_TYPE {\r\n        return this.layoutType == null ? LAYOUT_TYPE.PepperiCard : this.layoutType;\r\n    }\r\n\r\n    // call this function after resize + animation end\r\n    winResize(e): void {\r\n        if (typeof this.virtualScroll !== 'undefined') {\r\n            this.virtualScroll.refresh();\r\n        }\r\n\r\n        this.containerWidth = 0;\r\n        this.setLayout();\r\n    }\r\n\r\n    trackByFunc(index: number, item: ObjectSingleData): any {\r\n        return item && item.Data && item.Data.UID ? item.Data.UID : index;\r\n        // let res: string = \"\";\r\n\r\n        // if (item && item.Data && item.Data.UID) {\r\n        //    res = item.Data.UID + \"_\" + this.listType + \"_\" + (this.isTable ? \"Table\" : \"Thumbnails\");\r\n        // }\r\n        // else {\r\n        //    res = index + \"_\" + this.listType + \"_\" + (this.isTable ? \"Table\" : \"Thumbnails\");\r\n        // }\r\n\r\n        // return res;\r\n    }\r\n\r\n    cleanItems(): void {\r\n        this.itemsCounter = 0;\r\n        this.items = this.totalRows > 0 ? Array<ObjectSingleData>(this.totalRows) : [];\r\n        this.scrollItems = [];\r\n        this.calculatedObjectHeight = '';\r\n    }\r\n\r\n    getUIControl(): UIControl {\r\n        return this.uiControl;\r\n    }\r\n\r\n    initListData(uiControl: UIControl, totalRows: number, items: ObjectSingleData[], viewType: VIEW_TYPE = VIEW_TYPE.Table,\r\n        itemClass: string = '', showSelection: boolean = false): void {\r\n        // const selectedItemsFromState: Map<string, string> =\r\n        //     this.state.getItemFromState(PepperiListComponent.SELECTED_ITEMS_STATE_KEY);\r\n        // if (selectedItemsFromState != null && typeof selectedItemsFromState.size !== 'undefined' &&\r\n        //     selectedItemsFromState.size > 0) {\r\n        //     this.selectedItems = selectedItemsFromState;\r\n        //     this.state.setItemInState(PepperiListComponent.SELECTED_ITEMS_STATE_KEY, new Map<string, string>());\r\n        // } else {\r\n        this.selectedItems.clear();\r\n        // }\r\n\r\n        // const unSelectedItemsFromState: Map<string, string> =\r\n        //     this.state.getItemFromState(PepperiListComponent.UN_SELECTED_ITEMS_STATE_KEY);\r\n        // if (unSelectedItemsFromState != null && typeof unSelectedItemsFromState.size !== 'undefined' &&\r\n        //     unSelectedItemsFromState.size > 0) {\r\n        //     this.unSelectedItems = unSelectedItemsFromState;\r\n        //     this.state.setItemInState(PepperiListComponent.UN_SELECTED_ITEMS_STATE_KEY, new Map<string, string>());\r\n        // } else {\r\n        this.unSelectedItems.clear();\r\n        // }\r\n\r\n        // if (this.state.getItemFromState(PepperiListComponent.ALL_SELECTED_STATE_KEY) != null) {\r\n        //     let isAllSelectedFromState = this.state.getItemFromState(PepperiListComponent.ALL_SELECTED_STATE_KEY);\r\n        //     this.isAllSelected = isAllSelectedFromState && this.getIsAllSelected(items);\r\n        //     this.state.setItemInState(PepperiListComponent.ALL_SELECTED_STATE_KEY, false);\r\n        // } else {\r\n        this.isAllSelected = false;\r\n        // }\r\n\r\n        // if (this.state.getItemFromState(PepperiListComponent.SORT_BY_STATE_KEY) !== '') {\r\n        //     this.sortBy = this.state.getItemFromState(PepperiListComponent.SORT_BY_STATE_KEY);\r\n        //     this.state.setItemInState(PepperiListComponent.SORT_BY_STATE_KEY, '');\r\n        // }\r\n\r\n        // if (this.state.getItemFromState(PepperiListComponent.ASCENDING_STATE_KEY) != null) {\r\n        //     this.isAsc = this.state.getItemFromState(PepperiListComponent.ASCENDING_STATE_KEY);\r\n        //     this.state.setItemInState(PepperiListComponent.ASCENDING_STATE_KEY, false);\r\n        // }\r\n\r\n        const currentList = this.isAllSelected ? this.unSelectedItems : this.selectedItems;\r\n        const currentListCount = this.isAllSelected ? this.totalRows - currentList.size : currentList.size;\r\n        this.notifySelectedItemsChanged.emit(currentListCount);\r\n\r\n        this.isCardView = viewType === VIEW_TYPE.Card;\r\n        this.showSelection = showSelection;\r\n        this.uiControl = uiControl;\r\n        this.itemClass = itemClass;\r\n        this.selectedItemId = '';\r\n        this.isTable = viewType === VIEW_TYPE.Table;\r\n        this.totalRows = totalRows;\r\n\r\n        // fix bug for the scrollTo that doesn't work on edge div , not window\r\n        const scrollingElement = this.getParentContainer();\r\n        if (scrollingElement === window) {\r\n            scrollingElement.scrollTo(0, 0);\r\n        } else {\r\n            this.focusOnAnItem(0);\r\n        }\r\n\r\n        this.cleanItems();\r\n\r\n        if (this.totalRows === items.length) {\r\n            this.useVirtualScroll = false;\r\n            this.updateListItems(items, null);\r\n            this.onListLoad(null);\r\n        } else {\r\n            this.useVirtualScroll = true;\r\n            const numberOfStartItems = this.getNumberOfStartItems();\r\n            this.updateListItems(items, { start: 0, end: numberOfStartItems, fromIndex: 0, toIndex: numberOfStartItems, addAtStart: true });\r\n\r\n            if (typeof this.virtualScroll !== 'undefined') {\r\n                this.virtualScroll.refresh();\r\n            }\r\n        }\r\n\r\n        this.setLayout();\r\n    }\r\n\r\n    getIsAllSelected(items: Array<ObjectSingleData>): boolean {\r\n        let result = true;\r\n\r\n        if (this.selectedItems.size > 0 && items.length > 0) {\r\n            // for (let index = 0; index < items.length; index++) {\r\n            // const pepperiObjectInput = items[index];\r\n            for (const pepperiObjectInput of items) {\r\n                if (!(pepperiObjectInput && pepperiObjectInput.Data && this.selectedItems.has(pepperiObjectInput.Data.UID.toString()))) {\r\n                    result = false;\r\n                    break;\r\n                }\r\n            }\r\n        } else {\r\n            result = false;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getNumberOfStartItems(): number {\r\n        let numberOfStartItems = 20;\r\n\r\n        if ((this.screenSize === SCREEN_SIZE.XL) ||\r\n            (this.screenSize === SCREEN_SIZE.LG)) {\r\n            numberOfStartItems = this.isTable ? 50 : 40;\r\n        } else if (this.screenSize === SCREEN_SIZE.MD) {\r\n            numberOfStartItems = this.isTable ? 30 : 20;\r\n        } else if (this.screenSize === SCREEN_SIZE.SM) {\r\n            numberOfStartItems = this.isTable ? 20 : 10;\r\n        } else if (this.screenSize === SCREEN_SIZE.XS) {\r\n            numberOfStartItems = this.isTable ? 15 : 5;\r\n        }\r\n\r\n        return numberOfStartItems;\r\n    }\r\n\r\n    setSelectedIds(selectedIds: string[], items = null): void {\r\n        this.selectedItems.clear();\r\n        this.isAllSelected = false;\r\n\r\n        if (selectedIds) {\r\n            // for (let i = 0; i < selected.length; i++) {\r\n            for (const selectedId of selectedIds) {\r\n                const tmp = selectedId.split(this.SEPARATOR);\r\n\r\n                if (tmp && tmp.length > 0) {\r\n                    const itemId = tmp[0];\r\n                    const itemType = tmp.length > 1 ? tmp[1] : '';\r\n\r\n                    this.selectedItems.set(itemId, this.getUniqItemId(itemId, itemType));\r\n                }\r\n            }\r\n\r\n            this.isAllSelected = this.getIsAllSelected(items ? items : this.scrollItems); // this.selectedItems.Count() === this.totalRows;\r\n            this.setSelectionDataInSession();\r\n        }\r\n\r\n        if (typeof this.virtualScroll !== 'undefined') {\r\n            this.virtualScroll.refresh();\r\n        }\r\n    }\r\n\r\n    setSelectionDataInSession(): void {\r\n        // this.state.setItemInState(PepperiListComponent.SELECTED_ITEMS_STATE_KEY, this.selectedItems);\r\n        // this.state.setItemInState(PepperiListComponent.UN_SELECTED_ITEMS_STATE_KEY, this.unSelectedItems);\r\n        // this.state.setItemInState(PepperiListComponent.ALL_SELECTED_STATE_KEY, this.isAllSelected);\r\n    }\r\n\r\n    updateListItems(items: ObjectSingleData[], event: ChangeEvent): void {\r\n        if (this.useVirtualScroll) {\r\n            // Clean array\r\n            if (this.itemsCounter + items.length > PepperiListComponent.TOP_ITEMS_ARRAY) {\r\n                this.cleanItems();\r\n            }\r\n\r\n            const startIndex = event.fromIndex ? event.fromIndex : event.start;\r\n\r\n            for (let i = 0; i < items.length; i++) {\r\n                if (!this.items[i + startIndex]) {\r\n                    this.items[i + startIndex] = items[i];\r\n                    this.itemsCounter += 1;\r\n                }\r\n            }\r\n\r\n            this.updateScrollItems(event.start, event.end);\r\n            this.toggleItems(true);\r\n            // this.lockEvents = false;\r\n        } else {\r\n            this.scrollItems = this.items = items;\r\n            this.itemsCounter = items.length;\r\n        }\r\n    }\r\n\r\n    updateListItem(data: any): void {\r\n        let index = 0;\r\n\r\n        // Update items list\r\n        index = this.items.findIndex(i => i && i.Data && i.Data.UID === data.UID);\r\n        if (index >= 0 && index < this.items.length) {\r\n            this.items[index].Data = data;\r\n        }\r\n        // Update scrollItems list\r\n        index = this.scrollItems.findIndex(i => i && i.Data && i.Data.UID === data.UID);\r\n        if (index >= 0 && index < this.scrollItems.length) {\r\n            this.scrollItems[index].Data = data;\r\n            this.checkForChanges = new Date().getTime();\r\n        }\r\n    }\r\n\r\n    focusOnAnItem(itemIndex): void {\r\n        if (typeof this.virtualScroll !== 'undefined') {\r\n            this.virtualScroll.scrollInto(itemIndex);\r\n        }\r\n    }\r\n\r\n    getSelectedItemsData(isForEdit: boolean = false): SelectionData {\r\n        const res: SelectionData = new SelectionData();\r\n\r\n        if (this.selectionTypeForActions === SELECTION_TYPE_FOR_ACTIONS.Single) {\r\n            const tmp = this.selectedItemId.split(this.SEPARATOR);\r\n\r\n            res.selectionType = 1;\r\n            res.rows = [tmp[0]];\r\n            res.rowTypes = [tmp[1]];\r\n        } else if (this.selectionTypeForActions === SELECTION_TYPE_FOR_ACTIONS.Multi) {\r\n            const items = [];\r\n            const itemTypes = [];\r\n            let selectionType = 1;\r\n            let currentList = [];\r\n\r\n            // For edit - only the selected items.\r\n            if (isForEdit) {\r\n                if (!this.isAllSelected) {\r\n                    currentList = Array.from(this.selectedItems.values());\r\n                } else {\r\n                    // Get the id's of the items that not founded in unSelectedItems.\r\n                    this.items.forEach(item => {\r\n                        if (item && !this.unSelectedItems.has(item.Data.UID.toString())) {\r\n                            currentList.push(this.getUniqItemId(item.Data.UID.toString(), item.Data.Type.toString()));\r\n                        }\r\n                    });\r\n                }\r\n            } else {\r\n                // For delete - can be the unselected with select_all functionality.\r\n                currentList = Array.from(this.isAllSelected ? this.unSelectedItems.values() : this.selectedItems.values());\r\n                selectionType = this.isAllSelected ? 0 : 1;\r\n            }\r\n\r\n            currentList.forEach(item => {\r\n                const tmp = item.split(this.SEPARATOR);\r\n\r\n                if (tmp.length === 2) {\r\n                    items.push(tmp[0]);\r\n                    itemTypes.push(tmp[1]);\r\n                }\r\n            });\r\n\r\n            res.selectionType = selectionType;\r\n            res.rows = items;\r\n            res.rowTypes = itemTypes;\r\n        }\r\n\r\n        return res;\r\n    }\r\n\r\n    initCollectionFromState(collectionType, collection: string[]): void {\r\n        if (collectionType === 'Selected') {\r\n            collection.forEach(x => this.selectedItems.set(x, x));\r\n        } else {\r\n            collection.forEach(x => this.unSelectedItems.set(x, x));\r\n        }\r\n    }\r\n\r\n    getIsItemEditable(uid: string): boolean {\r\n        const item = this.items.filter(x => x.Data.UID.toString() === uid);\r\n        if (item.length > 0) {\r\n            return item[0].Data.IsEditable;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    getItemDataByID(uid: string): ObjectsDataRow {\r\n        return this.items.find(item => item.Data.UID.toString() === uid)?.Data;\r\n\r\n        // const item = this.items.filter(x => x.Data.UID.toString() === uid);\r\n        // if (item.length > 0) {\r\n        //     return item[0].Data;\r\n        // } else {\r\n        //     return null;\r\n        // }\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { MatCommonModule } from '@angular/material/core';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\nimport { PepperiModule } from '@pepperi-addons/ngx-lib';\r\nimport {\r\n    PepperiIconModule,\r\n    PepperiIconRegistry,\r\n    pepperiIconArrowDown,\r\n    pepperiIconArrowEither,\r\n    pepperiIconArrowUp\r\n} from '@pepperi-addons/ngx-lib/icon';\r\nimport { PepperiFormModule } from '@pepperi-addons/ngx-lib/form';\r\n\r\nimport { VirtualScrollModule } from './virtual-scroll.component';\r\n\r\nimport { PepperiListComponent } from './list.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        // Material modules,\r\n        MatCommonModule,\r\n        MatCheckboxModule,\r\n        MatRadioModule,\r\n        MatIconModule,\r\n        // Pepperi modules\r\n        PepperiModule,\r\n        PepperiIconModule,\r\n        PepperiFormModule,\r\n        VirtualScrollModule\r\n    ],\r\n    exports: [ PepperiListComponent ],\r\n    declarations: [ PepperiListComponent ],\r\n})\r\nexport class PepperiListModule {\r\n    constructor(private pepperiIconRegistry: PepperiIconRegistry) {\r\n        this.pepperiIconRegistry.registerIcons([\r\n            pepperiIconArrowDown,\r\n            pepperiIconArrowEither,\r\n            pepperiIconArrowUp\r\n        ]);\r\n    }\r\n}\r\n","/*\r\n * Public API Surface of ngx-lib/list\r\n */\r\nexport * from './list.module';\r\nexport * from './list.component';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["tween.Tween","tween.Easing","i0.ÉµÉµelement","i0.ÉµÉµelementStart","i0.ÉµÉµprojection","i0.ÉµÉµelementEnd","i0.ÉµÉµelementContainerStart","i0.ÉµÉµtext","i0.ÉµÉµelementContainerEnd","i0.ÉµÉµadvance","i0.ÉµÉµtextInterpolate","i0.ÉµÉµlistener","i0.ÉµÉµproperty","i0.ÉµÉµclassMapInterpolate1","i0.ÉµÉµpropertyInterpolate","i0.ÉµÉµtextInterpolate1","i0.ÉµÉµtemplate","i0.ÉµÉµelementContainer","i0.ÉµÉµclassMap"],"mappings":"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"}