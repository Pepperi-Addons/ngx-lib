{"version":3,"file":"pepperi-addons-ngx-lib-address.js","sources":["../../../projects/ngx-lib/address/address.component.html","../../../projects/ngx-lib/address/address.component.ts","../../../projects/ngx-lib/address/address.module.ts","../../../projects/ngx-lib/address/public-api.ts","../../../projects/ngx-lib/address/pepperi-addons-ngx-lib-address.ts"],"sourcesContent":["<ng-container [formGroup]=\"form\">\r\n    <ng-container *ngIf=\"layoutType === LAYOUT_TYPE.PepperiForm\">\r\n        <pep-field-title [label]=\"label\" [required]=\"required\" [disabled]=\"disabled\" class=\"header\">\r\n        </pep-field-title>\r\n        <div [formGroupName]=\"key\" [id]=\"key\" class=\"pepperi-address-container\"\r\n            dir=\"{{ xAlignment === '2' ? 'rtl' : 'ltr' }}\">\r\n            <div [ngSwitch]=\"groupField.controlType\" *ngFor=\"let groupField of groupFields; let i = index\"\r\n                class=\"pepperi-address-field columns-{{ groupField.colSpan }}\">\r\n                <pep-textbox *ngSwitchCase=\"'textbox'\" [layoutType]=\"layoutType\" title=\"{{ groupField.formattedValue }}\"\r\n                    [form]=\"form\" [key]=\"groupField.key\" [value]=\"groupField.value\"\r\n                    [formattedValue]=\"groupField.formattedValue\" [label]=\"groupField.label\"\r\n                    [placeholder]=\"groupField.placeholder\" [type]=\"groupField.type\" [required]=\"groupField.required\"\r\n                    [disabled]=\"groupField.disabled\" [readonly]=\"groupField.readonly\"\r\n                    [xAlignment]=\"groupField.xAlignment\" [rowSpan]=\"groupField.rowSpan\" [parentFieldKey]=\"key\"\r\n                    (valueChanged)=\"onValueChange($event, groupField.key)\">\r\n                </pep-textbox>\r\n\r\n                <pep-select *ngSwitchCase=\"'select'\" [layoutType]=\"layoutType\" title=\"{{ groupField.formattedValue }}\"\r\n                    [form]=\"form\" [key]=\"groupField.key\" [value]=\"groupField.value\"\r\n                    [formattedValue]=\"groupField.formattedValue\" [label]=\"groupField.label\" [type]=\"groupField.type\"\r\n                    [required]=\"groupField.required\" [disabled]=\"groupField.disabled\" [readonly]=\"groupField.readonly\"\r\n                    [xAlignment]=\"groupField.xAlignment\" [rowSpan]=\"groupField.rowSpan\" [options]=\"groupField.options\"\r\n                    [parentFieldKey]=\"key\" (valueChanged)=\"onValueChange($event, groupField.key)\">\r\n                </pep-select>\r\n            </div>\r\n        </div>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"layoutType === LAYOUT_TYPE.PepperiCard\">\r\n        <div class=\"pepperi-card-input \" title=\"{{ label }}&nbsp;{{ formattedValue }}\"\r\n            [ngClass]=\"['text-align-' + xAlignment]\">\r\n            <span *ngIf=\"label != ''\" class=\"body-xs title\">{{ label }}&nbsp;</span>\r\n            <ng-container *ngFor=\"let groupField of groupFields; let i = index\">\r\n                <span *ngIf=\"groupField?.formattedValue != ''\"\r\n                    class=\"body-sm\">{{ groupField.formattedValue }},&nbsp;</span>\r\n            </ng-container>\r\n        </div>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"layoutType === LAYOUT_TYPE.PepperiTable\">\r\n        <div class=\"pepperi-card-input \" title=\"{{ formattedValue }}\" [ngClass]=\"['text-align-' + xAlignment]\">\r\n            <ng-container *ngFor=\"let groupField of groupFields; let i = index\">\r\n                <span *ngIf=\"groupField?.formattedValue != ''\"\r\n                    class=\"body-sm\">{{ groupField.formattedValue }},&nbsp;</span>\r\n            </ng-container>\r\n        </div>\r\n    </ng-container>\r\n</ng-container>\r\n","import { Component, OnInit, OnChanges, Input, Output, EventEmitter, ChangeDetectionStrategy, OnDestroy, Renderer2, ElementRef } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { LAYOUT_TYPE } from '@pepperi-addons/ngx-lib';\r\n\r\n@Component({\r\n    selector: 'pep-address',\r\n    templateUrl: './address.component.html',\r\n    styleUrls: ['./address.component.scss'],\r\n    // host: { 'class': 'pepperi-grouped-field' },\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PepperiAddressComponent implements OnChanges, OnInit, OnDestroy {\r\n    @Input() key = '';\r\n    // @Input() value = '';\r\n    @Input() formattedValue = '';\r\n    @Input() label = '';\r\n    @Input() required = false;\r\n    @Input() disabled = false;\r\n    @Input() readonly = false;\r\n    @Input() xAlignment = '0';\r\n    @Input() rowSpan = 1;\r\n    @Input() groupFields: Array<any>;\r\n\r\n    @Input() form: FormGroup = null;\r\n    @Input() layoutType: LAYOUT_TYPE = LAYOUT_TYPE.PepperiForm;\r\n\r\n    @Output() valueChanged: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    LAYOUT_TYPE = LAYOUT_TYPE;\r\n\r\n    constructor(\r\n        private element: ElementRef,\r\n        private renderer: Renderer2\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        this.renderer.addClass(this.element.nativeElement, 'pep-grouped-field');\r\n    }\r\n\r\n    ngOnChanges(changes): void {\r\n        setTimeout(() => {\r\n            const focusedFieldParent = this.groupFields.filter(groupField => groupField.lastFocusField)[0];\r\n            if (focusedFieldParent) {\r\n                focusedFieldParent.lastFocusField.focus();\r\n            }\r\n        }, 100);\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        if (this.valueChanged) {\r\n            this.valueChanged.unsubscribe();\r\n        }\r\n    }\r\n\r\n    // Not in use for material\r\n    onBlur(e: any, apiName: string): void {\r\n        const value = e.target ? e.target.value : e;\r\n        this.changeValue({ apiName, value }, e.relatedTarget);\r\n    }\r\n\r\n    onValueChange(e: any, apiName: string): void {\r\n        if (e.target) {\r\n            const input = e.target ? e.target.value : e;\r\n            this.changeValue({ apiName, value: input.value });\r\n        } else {\r\n            this.changeValue(e);\r\n        }\r\n    }\r\n\r\n    changeValue(obj: any, lastFocusedField: any = null): void {\r\n        const currentGroupField = this.groupFields.filter(groupField => groupField.key === obj.apiName)[0];\r\n\r\n        if (currentGroupField.value !== obj.value) {\r\n            // Set the value in the form controls\r\n            if (this.form) {\r\n                const formCtrl = this.form.get(this.key);\r\n\r\n                if (formCtrl) {\r\n                    formCtrl.get(obj.apiName).setValue(obj.value);\r\n                }\r\n            }\r\n\r\n            this.valueChanged.emit({ apiName: obj.apiName, value: obj.value, lastFocusedField });\r\n        }\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\n\r\nimport { MatCommonModule } from '@angular/material/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\n\r\nimport { PepperiModule } from '@pepperi-addons/ngx-lib';\r\nimport { PepperiTextboxModule } from '@pepperi-addons/ngx-lib/textbox';\r\nimport { PepperiSelectModule } from '@pepperi-addons/ngx-lib/select';\r\nimport { PepperiFieldTitleModule } from '@pepperi-addons/ngx-lib/field-title';\r\n\r\nimport { PepperiAddressComponent } from './address.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        ReactiveFormsModule,\r\n        FormsModule,\r\n        // Material modules\r\n        MatCommonModule,\r\n        MatFormFieldModule,\r\n        // Pepperi modules\r\n        PepperiModule,\r\n        PepperiTextboxModule,\r\n        PepperiSelectModule,\r\n        PepperiFieldTitleModule\r\n    ],\r\n    exports: [ PepperiAddressComponent ],\r\n    declarations: [ PepperiAddressComponent ],\r\n})\r\nexport class PepperiAddressModule {}\r\n","/*\r\n * Public API Surface of ngx-lib/address\r\n */\r\nexport * from './address.module';\r\nexport * from './address.component';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i0.ɵɵelementStart","i0.ɵɵlistener","i0.ɵɵelementEnd","i0.ɵɵpropertyInterpolate","i0.ɵɵproperty","i0.ɵɵtemplate","i0.ɵɵclassMapInterpolate1","i0.ɵɵadvance","i0.ɵɵelementContainerStart","i0.ɵɵelement","i0.ɵɵelementContainerEnd","i0.ɵɵtext","i0.ɵɵtextInterpolate1","i0.ɵɵpropertyInterpolate2"],"mappings":";;;;;;;;;;;;;IAQgBA,mCAOc;IADVC,sTAAsD;IAC1DC,cAAc;;;;IAPmDC,4DAAuC;IAAjEC,2CAAyB,qBAAA,0BAAA,8BAAA,gDAAA,8BAAA,0CAAA,4BAAA,oCAAA,oCAAA,oCAAA,wCAAA,kCAAA,8BAAA;;;;IAShEJ,kCAMa;IADcC,uTAAsD;IACjFC,cAAa;;;;IANkDC,4DAAuC;IAAjEC,2CAAyB,qBAAA,0BAAA,8BAAA,gDAAA,8BAAA,4BAAA,oCAAA,oCAAA,oCAAA,wCAAA,kCAAA,kCAAA,8BAAA;;;IAXlEJ,2BAEI;IAAAK,2GAOA;IAEAA,yGAMA;IACJH,cAAM;;;IAjBFI,mFAA8D;IAD7DF,iDAAmC;IAEvBG,YAAyB;IAAzBH,qCAAyB;IAS1BG,YAAwB;IAAxBH,oCAAwB;;;IAhBhDI,0BACI;IAAAC,kCACkB;IAClBT,2BAEI;IAAAK,oFAEI;IAiBRH,cAAM;IACVQ,uBAAe;;;IAxBMH,YAAe;IAAfH,iCAAe,6BAAA,6BAAA;IAG5BG,YAA8C;IAA9CJ,uEAA8C;IAD7CC,uCAAqB,kBAAA;IAEmBG,YAAqD;IAArDH,yCAAqD;;;IAyB9FJ,6BAAgD;IAAAW,SAAiB;IAAAT,cAAO;;;IAAxBK,YAAiB;IAAjBK,+CAAiB;;;IAE7DZ,6BACoB;IAAAW,SAAsC;IAAAT,cAAO;;;IAA7CK,YAAsC;IAAtCK,gEAAsC;;;IAF9DJ,0BACI;IAAAH,sGACoB;IACxBK,uBAAe;;;IAFLH,YAAwC;IAAxCH,yFAAwC;;;;IAL1DI,0BACI;IAAAR,4BAEI;IAAAK,uFAAgD;IAChDA,uGACI;IAGRH,cAAM;IACVQ,uBAAe;;;IARsBH,YAA6C;IAA7CM,sFAA6C;IAC1ET,iFAAwC;IAClCG,YAAmB;IAAnBH,sCAAmB;IACXG,YAAqD;IAArDH,yCAAqD;;;IAU/DJ,6BACoB;IAAAW,SAAsC;IAAAT,cAAO;;;IAA7CK,YAAsC;IAAtCK,gEAAsC;;;IAF9DJ,0BACI;IAAAH,sGACoB;IACxBK,uBAAe;;;IAFLH,YAAwC;IAAxCH,yFAAwC;;;IAH1DI,0BACI;IAAAR,4BACI;IAAAK,uGACI;IAGRH,cAAM;IACVQ,uBAAe;;;IANsBH,YAA4B;IAA5BJ,qDAA4B;IAACC,iFAAwC;IACpFG,YAAqD;IAArDH,yCAAqD;;MC9BlE,uBAAuB;IAmBhC,YACY,OAAmB,EACnB,QAAmB;QADnB,YAAO,GAAP,OAAO,CAAY;QACnB,aAAQ,GAAR,QAAQ,CAAW;QApBtB,QAAG,GAAG,EAAE,CAAC;;QAET,mBAAc,GAAG,EAAE,CAAC;QACpB,UAAK,GAAG,EAAE,CAAC;QACX,aAAQ,GAAG,KAAK,CAAC;QACjB,aAAQ,GAAG,KAAK,CAAC;QACjB,aAAQ,GAAG,KAAK,CAAC;QACjB,eAAU,GAAG,GAAG,CAAC;QACjB,YAAO,GAAG,CAAC,CAAC;QAGZ,SAAI,GAAc,IAAI,CAAC;QACvB,eAAU,GAAgB,WAAW,CAAC,WAAW,CAAC;QAEjD,iBAAY,GAAsB,IAAI,YAAY,EAAO,CAAC;QAEpE,gBAAW,GAAG,WAAW,CAAC;KAKrB;IAEL,QAAQ;QACJ,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,mBAAmB,CAAC,CAAC;KAC3E;IAED,WAAW,CAAC,OAAO;QACf,UAAU,CAAC;YACP,MAAM,kBAAkB,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,UAAU,IAAI,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;YAC/F,IAAI,kBAAkB,EAAE;gBACpB,kBAAkB,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;aAC7C;SACJ,EAAE,GAAG,CAAC,CAAC;KACX;IAED,WAAW;QACP,IAAI,IAAI,CAAC,YAAY,EAAE;YACnB,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;SACnC;KACJ;;IAGD,MAAM,CAAC,CAAM,EAAE,OAAe;QAC1B,MAAM,KAAK,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC;QAC5C,IAAI,CAAC,WAAW,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC;KACzD;IAED,aAAa,CAAC,CAAM,EAAE,OAAe;QACjC,IAAI,CAAC,CAAC,MAAM,EAAE;YACV,MAAM,KAAK,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC;YAC5C,IAAI,CAAC,WAAW,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC;SACrD;aAAM;YACH,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;SACvB;KACJ;IAED,WAAW,CAAC,GAAQ,EAAE,mBAAwB,IAAI;QAC9C,MAAM,iBAAiB,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,UAAU,IAAI,UAAU,CAAC,GAAG,KAAK,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;QAEnG,IAAI,iBAAiB,CAAC,KAAK,KAAK,GAAG,CAAC,KAAK,EAAE;;YAEvC,IAAI,IAAI,CAAC,IAAI,EAAE;gBACX,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBAEzC,IAAI,QAAQ,EAAE;oBACV,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;iBACjD;aACJ;YAED,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE,KAAK,EAAE,GAAG,CAAC,KAAK,EAAE,gBAAgB,EAAE,CAAC,CAAC;SACxF;KACJ;;8FAzEQ,uBAAuB;yDAAvB,uBAAuB;QDXpCI,6BACI;QAAAH,uFACI;QA0BJA,uFACI;QAUJA,uFACI;QAORK,uBAAe;;QA/CDN,iCAAkB;QACdG,YAA8C;QAA9CH,kEAA8C;QA2B9CG,YAA8C;QAA9CH,kEAA8C;QAW9CG,YAA+C;QAA/CH,mEAA+C;;+CC5BpD,uBAAuB;cAPnC,SAAS;eAAC;gBACP,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,0BAA0B,CAAC;;gBAEvC,eAAe,EAAE,uBAAuB,CAAC,MAAM;aAClD;+EAEY,GAAG;kBAAX,KAAK;YAEG,cAAc;kBAAtB,KAAK;YACG,KAAK;kBAAb,KAAK;YACG,QAAQ;kBAAhB,KAAK;YACG,QAAQ;kBAAhB,KAAK;YACG,QAAQ;kBAAhB,KAAK;YACG,UAAU;kBAAlB,KAAK;YACG,OAAO;kBAAf,KAAK;YACG,WAAW;kBAAnB,KAAK;YAEG,IAAI;kBAAZ,KAAK;YACG,UAAU;kBAAlB,KAAK;YAEI,YAAY;kBAArB,MAAM;;;MCKE,oBAAoB;;qDAApB,oBAAoB;oHAApB,oBAAoB,kBAhBpB;YACL,YAAY;YACZ,mBAAmB;YACnB,WAAW;;YAEX,eAAe;YACf,kBAAkB;;YAElB,aAAa;YACb,oBAAoB;YACpB,mBAAmB;YACnB,uBAAuB;SAC1B;qFAIQ,oBAAoB,mBAFb,uBAAuB,aAbnC,YAAY;QACZ,mBAAmB;QACnB,WAAW;;QAEX,eAAe;QACf,kBAAkB;;QAElB,aAAa;QACb,oBAAoB;QACpB,mBAAmB;QACnB,uBAAuB,aAEhB,uBAAuB;+CAGzB,oBAAoB;cAjBhC,QAAQ;eAAC;gBACN,OAAO,EAAE;oBACL,YAAY;oBACZ,mBAAmB;oBACnB,WAAW;;oBAEX,eAAe;oBACf,kBAAkB;;oBAElB,aAAa;oBACb,oBAAoB;oBACpB,mBAAmB;oBACnB,uBAAuB;iBAC1B;gBACD,OAAO,EAAE,CAAE,uBAAuB,CAAE;gBACpC,YAAY,EAAE,CAAE,uBAAuB,CAAE;aAC5C;;;AC9BD;;;;ACAA;;;;;;"}