{"version":3,"file":"pepperi-addons-ngx-lib-internal-button.js","sources":["../../../projects/ngx-lib/internal-button/internal-button.component.html","../../../projects/ngx-lib/internal-button/internal-button.component.ts","../../../projects/ngx-lib/internal-button/internal-button.module.ts","../../../projects/ngx-lib/internal-button/public-api.ts","../../../projects/ngx-lib/internal-button/pepperi-addons-ngx-lib-internal-button.ts"],"sourcesContent":["<ng-container [ngSwitch]=\"type\">\r\n    <ng-container *ngSwitchCase=\"'reference'\">\r\n        <ng-container *ngIf=\"layoutType === LAYOUT_TYPE.PepperiForm; then formBlock; else notFormBlock\"></ng-container>\r\n        <ng-template #formBlock>\r\n            <div class=\"pepperi-button-container reference-button\">\r\n                <pep-field-title [label]=\"label\" [required]=\"required\" [disabled]=\"disabled\" [xAlignment]=\"xAlignment\"\r\n                    [showTitle]=\"showTitle\">\r\n                </pep-field-title>\r\n                <ng-container *ngIf=\"createNewReference; then newBlock; else existingBlock\"></ng-container>\r\n                <ng-template #newBlock>\r\n                    <button [id]=\"key\" title=\"{{ formattedValue }}\" mat-button class=\"pepperi-button md regular\"\r\n                        (click)=\"onButtonClicked($event)\" [ngClass]=\"{\r\n                            disabled: disabled,\r\n                            'pull-left': xAlignment == '1' || xAlignment == '0',\r\n                            'pull-right': xAlignment == '2',\r\n                            'center-alignment': xAlignment == '3'\r\n                        }\">\r\n                        <span class=\"pull-left flip\">{{ 'ACTIONS.CREATE_NEW' | translate }}</span>\r\n                        <mat-icon class=\"pull-right flip\" pepRtlClass>\r\n                            <pep-icon name=\"number_plus\" (click)=\"onButtonClicked($event)\">\r\n                            </pep-icon>\r\n                        </mat-icon>\r\n                    </button>\r\n                </ng-template>\r\n                <ng-template #existingBlock>\r\n                    <pep-group-buttons [buttons]=\"referenceButtons\" [buttonsClass]=\"'md regular'\"\r\n                        [buttonsDisabled]=\"false\" [viewType]=\"GROUP_BUTTONS_VIEW_TYPE.Split\">\r\n                    </pep-group-buttons>\r\n                </ng-template>\r\n            </div>\r\n        </ng-template>\r\n        <ng-template #notFormBlock>\r\n            <ng-container *ngTemplateOutlet=\"linkTemplate\"></ng-container>\r\n        </ng-template>\r\n    </ng-container>\r\n\r\n    <ng-container *ngSwitchCase=\"'listofobjects'\">\r\n        <ng-container *ngIf=\"layoutType === LAYOUT_TYPE.PepperiForm; then formBlock; else notFormBlock\"></ng-container>\r\n        <ng-template #formBlock>\r\n            <ng-container *ngTemplateOutlet=\"buttonTemplate; context: {internal: true}\"></ng-container>\r\n        </ng-template>\r\n        <ng-template #notFormBlock>\r\n            <ng-container *ngTemplateOutlet=\"linkTemplate\"></ng-container>\r\n        </ng-template>\r\n    </ng-container>\r\n\r\n    <ng-container *ngSwitchCase=\"'button'\">\r\n        <ng-container [ngSwitch]=\"key\">\r\n            <ng-container *ngSwitchCase=\"'ObjectMenu'\">\r\n                <span (click)=\"onButtonClicked($event)\" title=\"{{ key }}\">\r\n                    <mat-icon>\r\n                        <pep-icon *ngIf=\"key == 'ObjectMenu'\" name=\"system_menu\">\r\n                        </pep-icon>\r\n                    </mat-icon>\r\n                </span>\r\n            </ng-container>\r\n\r\n            <ng-container *ngSwitchCase=\"'Agents' || 'ContactPersons' || 'Buyers'\">\r\n                <ng-container *ngIf=\"layoutType === LAYOUT_TYPE.PepperiTable; then tableBlock; else nonTableBlock\">\r\n                </ng-container>\r\n                <ng-template #nonTableBlock>\r\n                    <ng-container *ngTemplateOutlet=\"buttonTemplate; context: {internal: true}\"></ng-container>\r\n                </ng-template>\r\n                <ng-template #tableBlock>\r\n                    <span [id]=\"key\" title=\"{{ formattedValue }}\"\r\n                        class=\"pepperi-report-input readonly body-sm\">{{ formattedValue }}</span>\r\n                </ng-template>\r\n            </ng-container>\r\n\r\n            <ng-container *ngSwitchDefault>\r\n                <ng-container *ngIf=\"layoutType === LAYOUT_TYPE.PepperiForm; then buttonBlock; else linkBlock\">\r\n                </ng-container>\r\n\r\n                <ng-template #buttonBlock>\r\n                    <ng-container *ngTemplateOutlet=\"buttonTemplate; context: {internal: false}\"></ng-container>\r\n                </ng-template>\r\n                <ng-template #linkBlock>\r\n                    <ng-container *ngTemplateOutlet=\"linkTemplate\"></ng-container>\r\n                </ng-template>\r\n            </ng-container>\r\n        </ng-container>\r\n    </ng-container>\r\n</ng-container>\r\n\r\n<ng-template #buttonTemplate let-internal=\"internal\">\r\n    <div class=\"pepperi-button-container\">\r\n        <pep-field-title [label]=\"label\" [required]=\"required\" [disabled]=\"disabled\" [xAlignment]=\"xAlignment\"\r\n            [showTitle]=\"showTitle\">\r\n        </pep-field-title>\r\n\r\n        <ng-container *ngIf=\"internal; then internalButtonTemplate; else regularButtonTemplate\"></ng-container>\r\n        <ng-template #regularButtonTemplate>\r\n            <button [id]=\"key\" title=\"{{ formattedValue }}\" mat-button class=\"pepperi-button md regular\"\r\n                dir=\"{{ xAlignment == '2' ? 'rtl' : 'ltr' }}\" (click)=\"onButtonClicked($event)\" [disabled]=\"disabled\"\r\n                [ngClass]=\"{disabled: disabled, 'pull-left': xAlignment == '1' || xAlignment == '0', 'pull-right': xAlignment == '2', 'center-alignment': xAlignment == '3'}\">\r\n                {{ formattedValue }}\r\n            </button>\r\n        </ng-template>\r\n\r\n        <ng-template #internalButtonTemplate>\r\n            <button [id]=\"key\" title=\"{{ formattedValue }}\" mat-button class=\"pepperi-button md regular\"\r\n                dir=\"{{ xAlignment == '2' ? 'rtl' : 'ltr' }}\" (click)=\"openReferenceObjectInternal($event)\"\r\n                [disabled]=\"disabled\"\r\n                [ngClass]=\"{disabled: disabled, 'pull-left': xAlignment == '1' || xAlignment == '0', 'pull-right': xAlignment == '2', 'center-alignment': xAlignment == '3'}\">\r\n                <ng-container *ngIf=\"formattedValue == '0' || formattedValue == ''; then newBlock; else existingBlock\">\r\n                </ng-container>\r\n                <ng-template #newBlock>\r\n                    <span class=\"pull-left flip\">{{ 'LIST.SELECT' | translate }}&nbsp;</span>\r\n                    <mat-icon>\r\n                        <pep-icon name=\"number_plus\">\r\n                        </pep-icon>\r\n                    </mat-icon>\r\n                </ng-template>\r\n                <ng-template #existingBlock>\r\n                    <span\r\n                        class=\"pull-left flip\">{{ formattedValue }}&nbsp;{{ 'LIST.SELECTED' | translate }}&nbsp;</span>\r\n                    <mat-icon>\r\n                        <pep-icon name=\"system_edit\">\r\n                        </pep-icon>\r\n                    </mat-icon>\r\n                </ng-template>\r\n            </button>\r\n        </ng-template>\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #linkTemplate>\r\n    <ng-container *ngIf=\"formattedValue?.length > 0; then notEmptyBlock; else emptyBlock\"></ng-container>\r\n    <ng-template #notEmptyBlock>\r\n        <a href=\"{{ value }}\" (mousedown)=\"hrefFunction($event)\" class=\"color-link\">\r\n            <span *ngIf=\"layoutType === LAYOUT_TYPE.PepperiTable\" [id]=\"key\" title=\"{{ formattedValue }}\"\r\n                class=\"body-sm pepperi-report-input readonly\">\r\n                {{ formattedValue }}\r\n            </span>\r\n            <span *ngIf=\"layoutType !== LAYOUT_TYPE.PepperiTable\" [id]=\"key\" title=\"{{ formattedValue }}\"\r\n                class=\"body-sm pepperi-card-input\" style=\"display: block;\">\r\n                {{ formattedValue }}\r\n            </span>\r\n        </a>\r\n    </ng-template>\r\n    <ng-template #emptyBlock>\r\n        <span>&nbsp;</span>\r\n    </ng-template>\r\n</ng-template>","import { Component, OnInit, OnChanges, Input, Output, EventEmitter, ChangeDetectionStrategy, Renderer2, ElementRef, OnDestroy } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { LAYOUT_TYPE, CustomizationService } from '@pepperi-addons/ngx-lib';\r\nimport { GROUP_BUTTONS_VIEW_TYPE, PepperiGroupButton } from '@pepperi-addons/ngx-lib/group-buttons';\r\n\r\n@Component({\r\n    selector: 'pep-internal-button',\r\n    templateUrl: './internal-button.component.html',\r\n    styleUrls: ['./internal-button.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class PepperiInternalButtonComponent implements OnInit, OnChanges, OnDestroy {\r\n    @Input() key = '';\r\n    @Input() value = '';\r\n    @Input() formattedValue = '';\r\n    @Input() label = '';\r\n    @Input() referenceObjectInternalType: any;\r\n    @Input() type = 'button'; // || 'reference' || 'listofobjects' || 'Agents' || 'ContactPersons' || 'Buyers', etc\r\n    @Input() required = false;\r\n    @Input() disabled = false;\r\n    @Input() readonly = false;\r\n    @Input() xAlignment = '0';\r\n    @Input() rowSpan = 1;\r\n\r\n    controlType = 'button';\r\n\r\n    @Input() form: FormGroup = null;\r\n    @Input() showTitle = true;\r\n    @Input() layoutType: LAYOUT_TYPE = LAYOUT_TYPE.PepperiForm;\r\n\r\n    @Output() elementClicked: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() valueChanged: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    LAYOUT_TYPE = LAYOUT_TYPE;\r\n    GROUP_BUTTONS_VIEW_TYPE = GROUP_BUTTONS_VIEW_TYPE;\r\n\r\n    standAlone = false;\r\n    createNewReference = false;\r\n    referenceButtons: Array<PepperiGroupButton> = [\r\n        { Value: '', Class: '', Callback: () => this.onButtonClicked(event), Icon: null },\r\n        { Value: '', Class: 'caution', Callback: () => this.remove(event), Icon: 'system_bin' },\r\n    ];\r\n\r\n    constructor(\r\n        private customizationService: CustomizationService,\r\n        private renderer: Renderer2,\r\n        private element: ElementRef) { }\r\n\r\n    ngOnInit(): void {\r\n        if (this.form === null) {\r\n            this.standAlone = true;\r\n            this.form = this.customizationService.getDefaultFromGroup(this.key, this.value, this.required, this.readonly, this.disabled);\r\n            this.formattedValue = this.formattedValue || this.value;\r\n            this.renderer.addClass(this.element.nativeElement, CustomizationService.STAND_ALONE_FIELD_CLASS_NAME);\r\n        }\r\n    }\r\n\r\n    ngOnChanges(changes: any): void {\r\n        if (this.type === 'reference') {\r\n            this.createNewReference = this.value.length === 0;\r\n            this.referenceButtons[0].Value = this.formattedValue;\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        if (this.elementClicked) {\r\n            this.elementClicked.unsubscribe();\r\n        }\r\n    }\r\n\r\n    onButtonClicked(event): void {\r\n        if (this.type === 'reference') {\r\n            const valueArr = this.value.split('/');\r\n\r\n            this.elementClicked.emit({\r\n                apiName: this.key,\r\n                eventWhich: event.which,\r\n                value: valueArr[valueArr.length - 1], // .replace(/[^a-zA-Z0-9 ]/g, ''),\r\n                referenceObjectInternalType: this.referenceObjectInternalType,\r\n            });\r\n        } else if (this.type === 'button' && true) {\r\n            this.elementClicked.emit({\r\n                apiName: this.key,\r\n                eventWhich: event.which,\r\n                value: this.value // should contain the program name\r\n            });\r\n        }\r\n        else {\r\n            this.elementClicked.emit({ apiName: this.key, eventWhich: event.which });\r\n        }\r\n    }\r\n\r\n    hrefFunction(event): void {\r\n        if (event.which === 1 /*|| event.which === 2*/) {\r\n            this.onButtonClicked(event);\r\n        }\r\n    }\r\n\r\n    openReferenceObjectInternal(event): void {\r\n        this.elementClicked.emit({\r\n            apiName: this.key,\r\n            eventWhich: event.which,\r\n            value: this.value,\r\n            referenceObjectInternalType: this.referenceObjectInternalType\r\n        });\r\n    }\r\n\r\n    remove(event): void {\r\n        this.value = '';\r\n        this.valueChanged.emit({ apiName: this.key, value: this.value });\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { MatCommonModule } from '@angular/material/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\nimport { PepperiModule } from '@pepperi-addons/ngx-lib';\r\nimport {\r\n    PepperiIconModule,\r\n    PepperiIconRegistry,\r\n    pepperiIconSystemEdit,\r\n    pepperiIconSystemMenu,\r\n    pepperiIconNumberPlus\r\n} from '@pepperi-addons/ngx-lib/icon';\r\nimport { PepperiFieldTitleModule } from '@pepperi-addons/ngx-lib/field-title';\r\nimport { PepperiGroupButtonsModule } from '@pepperi-addons/ngx-lib/group-buttons';\r\n\r\nimport { PepperiInternalButtonComponent } from './internal-button.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        // Material modules,\r\n        MatFormFieldModule,\r\n        MatCommonModule,\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        // Pepperi modules\r\n        PepperiModule,\r\n        PepperiIconModule,\r\n        PepperiFieldTitleModule,\r\n        PepperiGroupButtonsModule\r\n    ],\r\n    exports: [ PepperiInternalButtonComponent ],\r\n    declarations: [ PepperiInternalButtonComponent ],\r\n})\r\nexport class PepperiInternalButtonModule {\r\n    constructor(private pepperiIconRegistry: PepperiIconRegistry) {\r\n        this.pepperiIconRegistry.registerIcons([\r\n            pepperiIconSystemEdit,\r\n            pepperiIconSystemMenu,\r\n            pepperiIconNumberPlus\r\n        ]);\r\n    }\r\n}\r\n","/*\r\n * Public API Surface of ngx-lib/internal-button\r\n */\r\nexport * from './internal-button.module';\r\nexport * from './internal-button.component';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i0.ɵɵelementContainer","i0.ɵɵelementStart","i0.ɵɵlistener","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵpropertyInterpolate","i0.ɵɵproperty","i0.ɵɵadvance","i0.ɵɵtextInterpolate","i0.ɵɵelement","i0.ɵɵtemplate","i0.ɵɵelementContainerStart","i0.ɵɵelementContainerEnd","i0.ɵɵtextInterpolate1","i0.ɵɵtextInterpolate2"],"mappings":"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"}