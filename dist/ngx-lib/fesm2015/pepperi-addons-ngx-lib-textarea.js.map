{"version":3,"file":"pepperi-addons-ngx-lib-textarea.js","sources":["../../../projects/ngx-lib/textarea/textarea.component.html","../../../projects/ngx-lib/textarea/textarea.component.ts","../../../projects/ngx-lib/textarea/textarea.module.ts","../../../projects/ngx-lib/textarea/public-api.ts","../../../projects/ngx-lib/textarea/pepperi-addons-ngx-lib-textarea.ts"],"sourcesContent":["<ng-container [formGroup]=\"form\">\r\n    <!-- New code -->\r\n    <ng-template #pepperiTemplate let-isFormView=\"isFormView\">\r\n        <div class=\"pepperi-textarea-container\" [ngClass]=\"{ 'right-alignment': xAlignment == '2', 'one-row': rowSpan === 1, 'stand-alone': standAlone,\r\n            'pepperi-textarea-card-container': layoutType === LAYOUT_TYPE.PepperiCard }\">\r\n            <pep-field-title *ngIf=\"isFormView\" [label]=\"label\" [required]=\"required\" [disabled]=\"disabled\"\r\n                [maxFieldCharacters]=\"maxFieldCharacters\" [xAlignment]=\"xAlignment\" [showTitle]=\"showTitle\"\r\n                [inputLength]=\"input.value?.length\">\r\n            </pep-field-title>\r\n            <mat-form-field appearance=\"outline\" dir=\"{{ xAlignment == '2' ? 'rtl' : 'ltr' }}\"\r\n                [ngClass]=\"{ 'pepperi-table-textarea': layoutType === LAYOUT_TYPE.PepperiTable }\">\r\n                <textarea #input [hidden]=\"readonly\" [id]=\"key\" class=\"body-sm\" matInput (blur)=\"onBlur($event)\"\r\n                    title=\"{{ value }}\" [value]=\"value\"\r\n                    maxlength=\"{{ maxFieldCharacters > 0 ? maxFieldCharacters : 99999 }}\"\r\n                    [ngStyle]=\"{ color: 'textColor', 'text-align': xAlignment == '2' ? 'right' : 'left' }\"\r\n                    [formControlName]=\"key\" [style.height]=\"fieldHeight\" [disabled]=\"disabled\">\r\n                </textarea>\r\n                <div *ngIf=\"readonly\" class=\"body-sm disable-text-div\" title=\"{{ value }}\"\r\n                    [ngStyle]=\"{ color: 'textColor', 'text-align': xAlignment == '2' ? 'right' : 'left' }\"\r\n                    [innerHtml]=\"value | safeHtml\" [style.height]=\"fieldHeight\">\r\n                </div>\r\n                <!-- <pep-textbox-icon *ngIf=\"xAlignment == '2'\" matPrefix [value]=\"value\" [label]=\"label\" [type]=\"controlType\" [disabled]=\"disabled\"\r\n                    [ngClass]=\"{ 'card-one-row-icon': layoutType === LAYOUT_TYPE.PepperiCard && rowSpan === 1 }\" (iconClicked)=\"openDialog()\">\r\n                </pep-textbox-icon> -->\r\n                <pep-textbox-icon matSuffix [value]=\"value\" [label]=\"label\" [type]=\"controlType\" [disabled]=\"disabled\"\r\n                    [ngClass]=\"{ 'card-one-row-icon': layoutType === LAYOUT_TYPE.PepperiCard && rowSpan === 1 }\"\r\n                    (iconClicked)=\"openDialog()\">\r\n                </pep-textbox-icon>\r\n                <mat-error>\r\n                    <span class=\"body-xs\"\r\n                        [title]=\"required && value.length == 0 ? ('MESSAGES.ERROR_IS_REQUIRED' | translate: { field: label }) : ('MESSAGES.ERROR_IS_NOT_VALID' | translate: { field: label })\"\r\n                        [innerText]=\"required && value.length == 0 ? ('MESSAGES.ERROR_IS_REQUIRED' | translate: { field: label }) : ('MESSAGES.ERROR_IS_NOT_VALID' | translate: { field: label })\"></span>\r\n                </mat-error>\r\n            </mat-form-field>\r\n        </div>\r\n    </ng-template>\r\n\r\n    <ng-container *ngIf=\"layoutType === LAYOUT_TYPE.PepperiForm\">\r\n        <ng-container *ngTemplateOutlet=\"pepperiTemplate; context: { isFormView: true }\"></ng-container>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"layoutType === LAYOUT_TYPE.PepperiCard\">\r\n        <ng-container *ngIf=\"isInEditMode; then editBlock; else readOnlyBlock\"></ng-container>\r\n        <ng-template #editBlock>\r\n            <ng-container *ngTemplateOutlet=\"pepperiTemplate; context: { isFormView: false }\"></ng-container>\r\n        </ng-template>\r\n        <ng-template #readOnlyBlock>\r\n            <div class=\"pepperi-textarea-card-container card-flex-container\"\r\n                [ngClass]=\"{'one-row': rowSpan === 1, 'pepperi-button weak': isActive && !disabled }\"\r\n                [ngStyle]=\"{ '-webkit-line-clamp': rowSpan }\" [class]=\"'text-align-' + xAlignment\"\r\n                (click)=\"!disabled ? cardTemplateClicked($event) : ''\" [style.height]=\"fieldHeight\">\r\n                <span *ngIf=\" showTitle && label !=''\" class=\" body-xs title no-shrink\"\r\n                    title=\"{{ label }}\">{{ label }}&nbsp;</span>\r\n                <span [id]=\"key\" title=\"{{ value }}\" class=\"body-sm value wrap\">{{ value }}</span>\r\n                <button *ngIf=\"isActive && !disabled\" class=\"pepperi-button weak card-edit-button self-start\"\r\n                    [ngClass]=\"{'self-end' : value && value !== ''}\" mat-button>\r\n                    <mat-icon>\r\n                        <pep-icon name=\"system_edit\">\r\n                        </pep-icon>\r\n                    </mat-icon>\r\n                </button>\r\n            </div>\r\n        </ng-template>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"layoutType === LAYOUT_TYPE.PepperiTable\">\r\n        <ng-container *ngIf=\"isActive && !disabled; then selectedBlock; else notSelectedBlock\"></ng-container>\r\n        <ng-template #selectedBlock>\r\n            <ng-container *ngTemplateOutlet=\"pepperiTemplate; context: { isFormView: false }\"></ng-container>\r\n        </ng-template>\r\n        <ng-template #notSelectedBlock>\r\n            <ng-container *ngIf=\"value?.length > 0; then notEmptyBlock; else emptyBlock\"></ng-container>\r\n            <ng-template #notEmptyBlock>\r\n                <mat-form-field appearance=\"outline\" dir=\"{{ xAlignment == '2' ? 'rtl' : 'ltr' }}\"\r\n                    class=\"pepperi-report-textarea\" [ngClass]=\"{ readonly: disabled }\">\r\n                    <input matInput [id]=\"key\" class=\"body-sm pepperi-report-input\" [ngClass]=\"{ readonly: disabled }\"\r\n                        [ngStyle]=\"{ color: textColor, 'text-align': xAlignment == '3' ? 'center' : xAlignment == '2' ? 'right' : 'left' }\"\r\n                        title=\"{{ value }}\" [formControlName]=\"key\" type=\"text\" [value]=\"value\" [disabled]=\"true\" />\r\n                    <pep-textbox-icon *ngIf=\"disabled && xAlignment == '2'\" matPrefix [value]=\"value\" [label]=\"label\"\r\n                        [type]=\"controlType\" [disabled]=\"disabled\" (iconClicked)=\"openDialog()\">\r\n                    </pep-textbox-icon>\r\n                    <pep-textbox-icon *ngIf=\"disabled && (xAlignment == '1' || xAlignment == '0')\" matSuffix\r\n                        [value]=\"value\" [label]=\"label\" [type]=\"controlType\" [disabled]=\"disabled\"\r\n                        (iconClicked)=\"openDialog()\">\r\n                    </pep-textbox-icon>\r\n                </mat-form-field>\r\n            </ng-template>\r\n            <ng-template #emptyBlock>\r\n                <span>&nbsp;</span>\r\n            </ng-template>\r\n        </ng-template>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"layoutType === LAYOUT_TYPE.Editmodal\">\r\n        <ng-container *ngTemplateOutlet=\"pepperiTemplate; context: { isFormView: true }\"></ng-container>\r\n    </ng-container>\r\n</ng-container>","import {\r\n    Component, OnInit, OnChanges, Input, Output, EventEmitter,\r\n    ChangeDetectionStrategy, ElementRef, ViewChild, OnDestroy, Renderer2\r\n} from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { LAYOUT_TYPE, CustomizationService } from '@pepperi-addons/ngx-lib';\r\nimport { DialogService, DialogData, DialogDataType } from '@pepperi-addons/ngx-lib/dialog';\r\n\r\n@Component({\r\n    selector: 'pep-textarea',\r\n    templateUrl: './textarea.component.html',\r\n    styleUrls: ['./textarea.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PepperiTextareaComponent implements OnChanges, OnInit, OnDestroy {\r\n    @Input() key = '';\r\n    @Input() value = '';\r\n    @Input() label = '';\r\n    @Input() required = false;\r\n    @Input() disabled = false;\r\n    @Input() readonly = false;\r\n    @Input() maxFieldCharacters: number;\r\n    @Input() textColor = '';\r\n    @Input() xAlignment = '0';\r\n    @Input() rowSpan = 1;\r\n    @Input() lastFocusField: any;\r\n\r\n    controlType = 'textarea';\r\n\r\n    @Input() form: FormGroup = null;\r\n    @Input() isActive = false;\r\n    @Input() showTitle = true;\r\n    @Input() layoutType: LAYOUT_TYPE = LAYOUT_TYPE.PepperiForm;\r\n\r\n    @Output() valueChanged: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    @ViewChild('input') input: ElementRef;\r\n\r\n    LAYOUT_TYPE = LAYOUT_TYPE;\r\n    fieldHeight = '';\r\n    standAlone = false;\r\n    isInEditMode = false;\r\n\r\n    constructor(\r\n        private dialogService: DialogService,\r\n        private customizationService: CustomizationService,\r\n        private renderer: Renderer2,\r\n        private element: ElementRef\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        if (this.form === null) {\r\n            this.standAlone = true;\r\n            this.form = this.customizationService.getDefaultFromGroup(\r\n                this.key, this.value, this.required, this.readonly, this.disabled, this.maxFieldCharacters);\r\n\r\n            this.renderer.addClass(this.element.nativeElement, CustomizationService.STAND_ALONE_FIELD_CLASS_NAME);\r\n        }\r\n\r\n        this.fieldHeight = this.customizationService.calculateFieldHeight(this.layoutType, this.rowSpan, this.standAlone);\r\n    }\r\n\r\n    ngOnChanges(changes: any): void {\r\n        const self = this;\r\n        setTimeout(() => {\r\n            if (self.lastFocusField) {\r\n                self.lastFocusField.focus();\r\n                self.lastFocusField = null;\r\n            }\r\n        }, 100);\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        if (this.valueChanged) {\r\n            this.valueChanged.unsubscribe();\r\n        }\r\n    }\r\n\r\n    onBlur(event: any): void {\r\n        const value = event.target ? event.target.value : event;\r\n        this.changeValue(value, event.relatedTarget);\r\n\r\n        setTimeout(() => {\r\n            if (this.isInEditMode) {\r\n                this.isInEditMode = false;\r\n            }\r\n        }, 0);\r\n    }\r\n\r\n    changeValue(value: any, lastFocusedField: any = null): void {\r\n        if (value !== this.value) {\r\n            this.value = value;\r\n            this.customizationService.updateFormFieldValue(this.form, this.key, value);\r\n            this.valueChanged.emit({ apiName: this.key, value, lastFocusedField });\r\n        }\r\n    }\r\n\r\n    cardTemplateClicked(event: any): void {\r\n        this.openDialog();\r\n    }\r\n\r\n    openDialog(): void {\r\n        // TODO:\r\n        const data = new DialogData({\r\n            title: this.label,\r\n            content: this.value,\r\n            contentType: DialogDataType.TextArea,\r\n            contentData: { key: this.key, disabled: this.disabled },\r\n            showFooter: true\r\n        });\r\n\r\n        const config = this.dialogService.getDialogConfig({\r\n            maxWidth: '90vw',\r\n            maxHeight: '90vh'\r\n        });\r\n\r\n        const dialogRef = this.dialogService.openDefaultDialog(data, config);\r\n\r\n        dialogRef.afterClosed().subscribe(value => {\r\n            if (value !== undefined && value !== null) {\r\n                this.changeValue(value);\r\n            }\r\n        });\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\n\r\nimport { MatCommonModule } from '@angular/material/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\nimport { PepperiModule } from '@pepperi-addons/ngx-lib';\r\nimport { PepperiIconModule, PepperiIconRegistry, pepperiIconSystemEdit } from '@pepperi-addons/ngx-lib/icon';\r\nimport { PepperiTextboxIconModule } from '@pepperi-addons/ngx-lib/textbox-icon';\r\nimport { PepperiFieldTitleModule } from '@pepperi-addons/ngx-lib/field-title';\r\nimport { PepperiDialogModule } from '@pepperi-addons/ngx-lib/dialog';\r\n\r\nimport { PepperiTextareaComponent } from './textarea.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        ReactiveFormsModule,\r\n        FormsModule,\r\n        // Material modules,\r\n        MatCommonModule,\r\n        MatButtonModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        MatIconModule,\r\n        // Pepperi modules\r\n        PepperiModule,\r\n        PepperiIconModule,\r\n        PepperiFieldTitleModule,\r\n        PepperiTextboxIconModule,\r\n        PepperiDialogModule\r\n    ],\r\n    exports: [ PepperiTextareaComponent ],\r\n    declarations: [ PepperiTextareaComponent ],\r\n})\r\nexport class PepperiTextareaModule {\r\n    constructor(private pepperiIconRegistry: PepperiIconRegistry) {\r\n        this.pepperiIconRegistry.registerIcons([\r\n            pepperiIconSystemEdit\r\n        ]);\r\n    }\r\n}\r\n","/*\r\n * Public API Surface of ngx-lib/textarea\r\n */\r\nexport * from './textarea.module';\r\nexport * from './textarea.component';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i0.ɵɵelement","i0.ɵɵproperty","i0.ɵɵstyleProp","i0.ɵɵpropertyInterpolate","i0.ɵɵelementStart","i0.ɵɵtemplate","i0.ɵɵlistener","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵadvance","i0.ɵɵelementContainer","i0.ɵɵelementContainerStart","i0.ɵɵelementContainerEnd","i0.ɵɵtextInterpolate1","i0.ɵɵclassMap","i0.ɵɵtextInterpolate"],"mappings":"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"}