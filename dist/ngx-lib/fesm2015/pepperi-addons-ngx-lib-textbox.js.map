{"version":3,"file":"pepperi-addons-ngx-lib-textbox.js","sources":["../../../projects/ngx-lib/textbox/textbox.component.html","../../../projects/ngx-lib/textbox/textbox.component.ts","../../../projects/ngx-lib/textbox/textbox.module.ts","../../../projects/ngx-lib/textbox/public-api.ts","../../../projects/ngx-lib/textbox/pepperi-addons-ngx-lib-textbox.ts"],"sourcesContent":["<ng-container [formGroup]=\"form\">\r\n    <!-- New code -->\r\n    <ng-template #pepperiTemplate let-isFormView=\"isFormView\" let-hasParent=\"hasParent\">\r\n        <pep-field-title *ngIf=\"isFormView && !hasParent\" [label]=\"label\" [required]=\"required\" [disabled]=\"disabled\"\r\n            [maxFieldCharacters]=\"maxFieldCharacters\" [xAlignment]=\"xAlignment\" [showTitle]=\"showTitle\"\r\n            [inputLength]=\"input.value?.length\">\r\n        </pep-field-title>\r\n        <mat-form-field appearance=\"outline\">\r\n            <input #input [id]=\"key\" [name]=\"key\" class=\" body-sm \" matInput autocomplete=\"off\"\r\n                (keyup)=\"onKeyUp($event)\" (keypress)=\"onKeyPress($event)\"\r\n                maxlength=\"{{ maxFieldCharacters > 0 ? maxFieldCharacters : 99999 }}\"\r\n                [placeholder]=\"hasParent && !disabled ? placeholder : ''\"\r\n                [ngStyle]=\"{ color: textColor, 'text-align': xAlignment == '3' ? 'center' : xAlignment == '2' ? 'right' : 'left' }\"\r\n                title=\"{{ formattedValue }}\" [formControlName]=\"key\" [type]=\"type\"\r\n                [value]=\"type == 'link' ? formattedValue : (isFocus ? value : formattedValue)\" (blur)=\"onBlur($event)\"\r\n                (keyup.enter)=\"$event?.currentTarget?.blur()\" (focus)=\"onFocus($event)\" [disabled]=\"disabled\"\r\n                [ngClass]=\"{'disable-hidden': disabled && formattedValue.length > 0 && (type === 'phone' || type === 'email' || type === 'link')}\" />\r\n\r\n            <span\r\n                *ngIf=\"disabled && formattedValue.length > 0 && (type === 'phone' || type === 'email' || type === 'link')\"\r\n                class=\"dis-grid\">\r\n                <a href=\"javascript:void(0)\" (click)=\"anchorClicked()\" [id]=\"key\" [name]=\"key\"\r\n                    class=\"color-link body-sm \"> {{formattedValue}}</a>\r\n            </span>\r\n            <mat-error>\r\n                <ng-container *ngIf=\"required && input.value.length == 0 then requiredError else otherError\">\r\n                </ng-container>\r\n                <ng-template #requiredError>\r\n                    <span class=\"body-xs\" [title]=\"('MESSAGES.ERROR_IS_REQUIRED' | translate: { field: label })\"\r\n                        [innerText]=\"('MESSAGES.ERROR_IS_REQUIRED' | translate: { field: label })\">\r\n                    </span>\r\n                </ng-template>\r\n                <ng-template #otherError>\r\n                    <span class=\"body-xs\" [title]=\"(input.value | toNumber) > this.maxValue || (input.value | toNumber) < this.minValue ?\r\n                            ('MESSAGES.ERROR_RANGE_IS_NOT_VALID' | translate: { min: minValue, max: maxValue }) :\r\n                            ('MESSAGES.ERROR_IS_NOT_VALID' | translate: { field: label })\" [innerText]=\"(input.value | toNumber) > this.maxValue || (input.value | toNumber) < this.minValue ?\r\n                            ('MESSAGES.ERROR_RANGE_IS_NOT_VALID' | translate: { min: minValue, max: maxValue }) :\r\n                            ('MESSAGES.ERROR_IS_NOT_VALID' | translate: { field: label })\">\r\n                    </span>\r\n                </ng-template>\r\n            </mat-error>\r\n\r\n            <pep-textbox-icon *ngIf=\"isFormView && xAlignment == '2'\" matPrefix [value]=\"value\" [label]=\"label\"\r\n                [type]=\"type\" [disabled]=\"disabled\">\r\n            </pep-textbox-icon>\r\n            <pep-textbox-icon *ngIf=\"isFormView && (xAlignment == '1' || xAlignment == '0')\" matSuffix [value]=\"value\"\r\n                [label]=\"label\" [type]=\"type\" [disabled]=\"disabled\">\r\n            </pep-textbox-icon>\r\n        </mat-form-field>\r\n    </ng-template>\r\n\r\n    <ng-container *ngIf=\"layoutType === LAYOUT_TYPE.PepperiForm\">\r\n        <ng-container *ngIf=\"parentFieldKey; then groupedBlock; else regularBlock\"></ng-container>\r\n        <ng-template #regularBlock>\r\n            <ng-container *ngTemplateOutlet=\"pepperiTemplate; context: { isFormView: true, hasParent: false }\">\r\n            </ng-container>\r\n        </ng-template>\r\n        <ng-template #groupedBlock>\r\n            <ng-container [formGroupName]=\"parentFieldKey\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <input [id]=\"key\" [name]=\"key\" class=\" body-sm \" matInput autocomplete=\"off\"\r\n                        (keyup)=\"onKeyUp($event)\" (keypress)=\"onKeyPress($event)\"\r\n                        [placeholder]=\"!disabled ? placeholder : ''\" title=\"{{ formattedValue }}\"\r\n                        [formControlName]=\"key\" [value]=\"value\" (blur)=\"onBlur($event)\"\r\n                        (keyup.enter)=\"$event?.currentTarget?.blur()\" (focus)=\"onFocus($event)\" [disabled]=\"disabled\" />\r\n                </mat-form-field>\r\n                <!-- <ng-container *ngTemplateOutlet=\"pepperiTemplate; context: { isFormView: true, hasParent: true }\"></ng-container> -->\r\n            </ng-container>\r\n        </ng-template>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"layoutType === LAYOUT_TYPE.PepperiCard\">\r\n        <ng-container *ngIf=\"isInEditMode; then editBlock; else readOnlyBlock\"></ng-container>\r\n        <ng-template #editBlock>\r\n            <div [ngClass]=\"{'one-row': rowSpan === 1}\">\r\n                <ng-container *ngTemplateOutlet=\"pepperiTemplate; context: { isFormView: false, hasParent: false }\">\r\n                </ng-container>\r\n            </div>\r\n        </ng-template>\r\n        <ng-template #readOnlyBlock>\r\n            <div class=\"pepperi-card-input card-flex-container\"\r\n                [ngClass]=\"{'one-row': rowSpan === 1, 'pepperi-button weak': isActive && !disabled}\"\r\n                [class]=\"'text-align-' + xAlignment\" (click)=\"!disabled ? cardTemplateClicked($event) : ''\">\r\n                <span *ngIf=\"showTitle && label != ''\" class=\"body-xs title\"\r\n                    title=\"{{ label }}\">{{ label }}&nbsp;</span>\r\n                <span [id]=\"key\" title=\"{{ formattedValue }}\" class=\"body-sm value\">{{ formattedValue }}</span>\r\n                <button *ngIf=\"isActive && !disabled\" class=\"pepperi-button weak card-edit-button\" mat-button>\r\n                    <mat-icon>\r\n                        <pep-icon name=\"system_edit\">\r\n                        </pep-icon>\r\n                    </mat-icon>\r\n                </button>\r\n            </div>\r\n        </ng-template>\r\n\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"layoutType === LAYOUT_TYPE.PepperiTable\">\r\n        <ng-container *ngIf=\"isActive && !disabled; then selectedBlock; else notSelectedBlock\"></ng-container>\r\n        <ng-template #selectedBlock>\r\n            <ng-container *ngTemplateOutlet=\"pepperiTemplate; context: { isFormView: false, hasParent: false }\">\r\n            </ng-container>\r\n        </ng-template>\r\n        <ng-template #notSelectedBlock>\r\n            <ng-container *ngIf=\"formattedValue?.length > 0; then notEmptyBlock; else emptyBlock\"></ng-container>\r\n            <ng-template #notEmptyBlock>\r\n                <ng-container [ngSwitch]=\"type\">\r\n                    <ng-container *ngSwitchCase=\"'link'\">\r\n                        <a [id]=\"key\" class=\"color-link body-sm pepperi-report-input\"\r\n                            [ngClass]=\"{'disable': (disabled && value === '')}\" *ngIf=\"formattedValue != null\"\r\n                            title=\"{{ formattedValue }}\" target=\"_blank\"\r\n                            href=\"{{ value ? value : formattedValue }}\">{{ formattedValue }}</a>\r\n                    </ng-container>\r\n                    <ng-container *ngSwitchDefault>\r\n                        <span [id]=\"key\" class=\"body-sm pepperi-report-input\" [ngClass]=\"{'readonly': disabled}\"\r\n                            title=\"{{ formattedValue }}\" [ngStyle]=\"{ color: textColor }\">{{ formattedValue }}</span>\r\n                    </ng-container>\r\n                </ng-container>\r\n            </ng-template>\r\n            <ng-template #emptyBlock>\r\n                <span [id]=\"key\">&nbsp;</span>\r\n            </ng-template>\r\n        </ng-template>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"layoutType === LAYOUT_TYPE.Editmodal\">\r\n        <ng-container *ngTemplateOutlet=\"pepperiTemplate; context: { isFormView: true, hasParent: false }\">\r\n        </ng-container>\r\n    </ng-container>\r\n\r\n</ng-container>","import {\r\n    Component, OnInit, OnChanges, Input, Output, EventEmitter,\r\n    ChangeDetectionStrategy, ElementRef, ViewChild, Renderer2, OnDestroy\r\n} from '@angular/core';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { LAYOUT_TYPE, CustomizationService } from '@pepperi-addons/ngx-lib';\r\n\r\n@Component({\r\n    selector: 'pep-textbox',\r\n    templateUrl: './textbox.component.html',\r\n    styleUrls: ['./textbox.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PepperiTextboxComponent implements OnChanges, OnInit, OnDestroy {\r\n    @Input() key = '';\r\n    @Input() value = '';\r\n    @Input() formattedValue = '';\r\n    @Input() label = '';\r\n    @Input() placeholder = '';\r\n    @Input() type = 'text';\r\n    @Input() required = false;\r\n    @Input() disabled = false;\r\n    @Input() readonly = false;\r\n    @Input() maxFieldCharacters: number;\r\n    @Input() textColor = '';\r\n    @Input() xAlignment = '0';\r\n    @Input() rowSpan = 1;\r\n    @Input() lastFocusField: any;\r\n    @Input() minValue = NaN;\r\n    @Input() maxValue = NaN;\r\n\r\n    controlType = 'textbox';\r\n\r\n    @Input() form: FormGroup = null;\r\n    @Input() isActive = false;\r\n    @Input() showTitle = true;\r\n    @Input() layoutType: LAYOUT_TYPE = LAYOUT_TYPE.PepperiForm;\r\n    @Input() parentFieldKey: string = null;\r\n\r\n    @Output() valueChanged: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() formValidationChanged: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n    @ViewChild('input') input: ElementRef;\r\n\r\n    LAYOUT_TYPE = LAYOUT_TYPE;\r\n    standAlone = false;\r\n    isInEditMode = false;\r\n    isFocus = false;\r\n\r\n    constructor(\r\n        public fb: FormBuilder,\r\n        private customizationService: CustomizationService,\r\n        private renderer: Renderer2,\r\n        private element: ElementRef\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        if (this.form === null) {\r\n            this.standAlone = true;\r\n\r\n            this.minValue = isNaN(this.minValue) && !isNaN(this.maxValue) ? 0 : this.minValue;\r\n            this.maxValue = isNaN(this.maxValue) && !isNaN(this.minValue) ? 99999 : this.maxValue;\r\n            this.form = this.customizationService.getDefaultFromGroup(this.key, this.value, this.required, this.readonly, this.disabled,\r\n                this.maxFieldCharacters, this.type, false, true, this.minValue, this.maxValue);\r\n            this.formattedValue = this.formattedValue || this.value;\r\n\r\n            this.renderer.addClass(this.element.nativeElement, CustomizationService.STAND_ALONE_FIELD_CLASS_NAME);\r\n        }\r\n\r\n        this.readonly = this.type === 'duration' ? true : this.readonly; // Hack until we develop Timer UI for editing Duration field\r\n    }\r\n\r\n    ngOnChanges(changes: any): void {\r\n        this.readonly = this.type === 'duration' ? true : this.readonly; // Hack until we develop Timer UI for editing Duration field\r\n\r\n        const self = this;\r\n        setTimeout(() => {\r\n            if (self.lastFocusField) {\r\n                self.lastFocusField.focus();\r\n                self.lastFocusField = null;\r\n            } else {\r\n            }\r\n        }, 100);\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        if (this.valueChanged) {\r\n            this.valueChanged.unsubscribe();\r\n        }\r\n\r\n        if (this.formValidationChanged) {\r\n            this.formValidationChanged.unsubscribe();\r\n        }\r\n    }\r\n\r\n    onFocus(e: any): void {\r\n        this.isFocus = true;\r\n    }\r\n\r\n    onBlur(e: any): void {\r\n        this.isFocus = false;\r\n\r\n        const value = e.target ? e.target.value : e;\r\n        if (value !== this.value) {\r\n            this.formattedValue = this.value = value;\r\n\r\n            // There is formControl.setValue in the onKeyUp so we don't need it here.\r\n            // this.propagateChange(value, e.relatedTarget);\r\n            this.valueChanged.emit({\r\n                apiName: this.key,\r\n                value,\r\n                lastFocusedField: e.relatedTarget\r\n            });\r\n            // return true; // What this is for? Tomer.p comment this in 16.4.\r\n        }\r\n\r\n        if (this.isInEditMode) {\r\n            this.isInEditMode = false;\r\n        }\r\n    }\r\n\r\n    onKeyUp(event: any): void {\r\n        const value = event.target ? event.target.value : event;\r\n        this.customizationService.updateFormFieldValue(this.form, this.key, value, this.parentFieldKey);\r\n        this.formValidationChanged.emit(this.form.valid);\r\n    }\r\n\r\n    onKeyPress(event: any): any {\r\n        let inputChar = String.fromCharCode(event.charCode);\r\n        const e = event as KeyboardEvent;\r\n\r\n        if (\r\n            [8, 9, 13, 27, 190].indexOf(e.which) !== -1 ||\r\n            // Allow: Ctrl+A\r\n            (e.which === 65 && e.ctrlKey === true) ||\r\n            // Allow: Ctrl+C\r\n            (e.which === 67 && e.ctrlKey === true) ||\r\n            // Allow: Ctrl+V\r\n            (e.which === 86 && e.ctrlKey === true) ||\r\n            // Allow: Ctrl+X\r\n            (e.which === 88 && e.ctrlKey === true) /*||\r\n            // Allow: home, end, left, right\r\n            (e.which >= 35 && e.which <= 39)*/\r\n        ) {\r\n            // let it happen, don't do anything\r\n            return true;\r\n        }\r\n\r\n        switch (this.type) {\r\n            case 'int': {\r\n                const pattern = /[0-9\\+\\-\\ ]/;\r\n                if (!pattern.test(inputChar)) {\r\n                    e.preventDefault();\r\n                }\r\n                break;\r\n            }\r\n            case 'currency':\r\n            case 'real': {\r\n                const decPoint = '.';\r\n                const thousandSeparator = ',';\r\n                const pattern = /^\\d+(\\.\\d{1,9})?$/;\r\n                if (e.which === 46) {\r\n                    inputChar = inputChar + '0';\r\n                } else if (e.which === 44) {\r\n                    inputChar = inputChar + '000';\r\n                }\r\n                if (!pattern.test(event.target.value + inputChar)) {\r\n                    e.preventDefault();\r\n                }\r\n                break;\r\n            }\r\n            case 'phone': {\r\n                const pattern = /^[\\d\\.\\-\\+\\(\\)\\*\\#]+$/;\r\n                if (!pattern.test(event.target.value + inputChar)) {\r\n                    e.preventDefault();\r\n                }\r\n                break;\r\n            }\r\n            case 'text': {\r\n                // if (this.maxFieldCharacters !== 0 && event.target.value.length >= this.maxFieldCharacters) {\r\n                //     e.preventDefault();\r\n                // }\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    anchorClicked(): void {\r\n        const currentValue = this.value;\r\n        if (currentValue.trim().length > 0) {\r\n            switch (this.type) {\r\n                case 'email':\r\n                    window.open('mailto:' + currentValue, 'email');\r\n                    break;\r\n                case 'phone':\r\n                    window.open('tel:' + currentValue, 'tel');\r\n                    break;\r\n                case 'link':\r\n                    window.open(currentValue);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    cardTemplateClicked(event: any): void {\r\n        const self = this;\r\n        this.isInEditMode = true;\r\n\r\n        setTimeout(() => {\r\n            self.input.nativeElement.focus();\r\n        }, 0);\r\n    }\r\n}\r\n","\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\n\r\nimport { MatCommonModule } from '@angular/material/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\nimport { PepperiModule } from '@pepperi-addons/ngx-lib';\r\nimport { PepperiIconModule, PepperiIconRegistry, pepperiIconSystemEdit } from '@pepperi-addons/ngx-lib/icon';\r\nimport { PepperiTextboxIconModule } from '@pepperi-addons/ngx-lib/textbox-icon';\r\nimport { PepperiFieldTitleModule } from '@pepperi-addons/ngx-lib/field-title';\r\n\r\nimport { PepperiTextboxComponent} from './textbox.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        ReactiveFormsModule,\r\n        FormsModule,\r\n        // Material modules,\r\n        MatCommonModule,\r\n        MatButtonModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        MatIconModule,\r\n        // Pepperi modules\r\n        PepperiModule,\r\n        PepperiIconModule,\r\n        PepperiFieldTitleModule,\r\n        PepperiTextboxIconModule\r\n    ],\r\n    exports: [PepperiTextboxComponent, ],\r\n    declarations: [PepperiTextboxComponent],\r\n})\r\nexport class PepperiTextboxModule {\r\n    constructor(private pepperiIconRegistry: PepperiIconRegistry) {\r\n        this.pepperiIconRegistry.registerIcons([\r\n            pepperiIconSystemEdit\r\n        ]);\r\n    }\r\n}\r\n","/*\r\n * Public API Surface of ngx-lib/textbox\r\n */\r\nexport * from './textbox.module';\r\nexport * from './textbox.component';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i0.ɵɵelement","i0.ɵɵproperty","i0.ɵɵelementStart","i0.ɵɵlistener","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵadvance","i0.ɵɵtextInterpolate1","i0.ɵɵelementContainer","i0.ɵɵtemplate","i0.ɵɵpropertyInterpolate","i0.ɵɵelementContainerStart","i0.ɵɵelementContainerEnd","i0.ɵɵclassMap","i0.ɵɵtextInterpolate"],"mappings":"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"}