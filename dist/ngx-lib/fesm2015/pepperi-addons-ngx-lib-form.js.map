{"version":3,"file":"pepperi-addons-ngx-lib-form.js","sources":["../../../projects/ngx-lib/form/indicators.component.html","../../../projects/ngx-lib/form/indicators.component.ts","../../../projects/ngx-lib/form/internal-page.service.ts","../../../projects/ngx-lib/form/internal-list.component.html","../../../projects/ngx-lib/form/internal-list.component.ts","../../../projects/ngx-lib/form/internal-page.component.html","../../../projects/ngx-lib/form/internal-page.component.ts","../../../projects/ngx-lib/form/field-generator.component.html","../../../projects/ngx-lib/form/field-generator.component.ts","../../../projects/ngx-lib/form/form.component.html","../../../projects/ngx-lib/form/form.component.ts","../../../projects/ngx-lib/form/form.module.ts","../../../projects/ngx-lib/form/public-api.ts","../../../projects/ngx-lib/form/pepperi-addons-ngx-lib-form.ts"],"sourcesContent":["<div class=\"indicators-container\" [ngClass]=\"{ 'is-inside-table': layoutType === LAYOUT_TYPE.PepperiTable }\">\r\n    <ng-container *ngFor=\"let value of value?.split(';')\">\r\n        <pep-icon name=\"indicator_dot_placeholder\" class=\"pull-left flip\" [fill]=\"value\"></pep-icon>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"key != 'ItemIndicatorsWithoutCampaign' && value?.split(';').length < 4\">\r\n        <pep-icon name=\"indicator_dot_placeholder\" class=\"pull-left flip\"></pep-icon>\r\n    </ng-container>\r\n</div>","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\r\nimport { LAYOUT_TYPE } from '@pepperi-addons/ngx-lib';\r\n\r\n@Component({\r\n    selector: 'pep-indicators',\r\n    templateUrl: './indicators.component.html',\r\n    styleUrls: ['./indicators.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PepperiIndicatorsComponent {\r\n    @Input() key: string;\r\n    @Input() value: string;\r\n\r\n    controlType = 'indicators';\r\n\r\n    @Input() layoutType: LAYOUT_TYPE = LAYOUT_TYPE.PepperiTable;\r\n    LAYOUT_TYPE = LAYOUT_TYPE;\r\n\r\n    constructor() { }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpService } from '@pepperi-addons/ngx-lib';\r\n\r\n@Injectable()\r\nexport class PepperiInternalPageService {\r\n\r\n    private transactionUrl: string;\r\n    private objectId: string;\r\n    private parentId = '0';\r\n    private searchCode: string;\r\n    private viewType: string;\r\n    public additionalApiName = '';\r\n\r\n    constructor(private httpService: HttpService) {\r\n        this.transactionUrl = 'Service1.svc/v1/OrderCenter/Transaction/';\r\n    }\r\n\r\n    getBaseParentUrl(): string {\r\n        const url = `${this.transactionUrl}${this.objectId}/ParentLine/${this.parentId}/`;\r\n        return url;\r\n    }\r\n\r\n    getChildren(callbackFunc: any): void {\r\n        const body = JSON.stringify({\r\n            TransactionUID: this.objectId,\r\n            SearchCode: this.searchCode,\r\n            AdditionalApiName: this.additionalApiName,\r\n            ParentTransactionLineID: this.parentId,\r\n            ViewType: this.viewType\r\n        });\r\n\r\n        // Set the additional api name with view type string.\r\n        const moreParams = this.additionalApiName.length > 0 ?\r\n            `${this.additionalApiName}/${this.viewType}` :\r\n            `''/${this.viewType}`;\r\n\r\n        const url = `${this.getBaseParentUrl()}Items/${moreParams}`;\r\n\r\n        this.httpService.postWapiApiCall(\r\n            url,\r\n            body).subscribe(\r\n                (res) => { callbackFunc(res); },\r\n                (error) => { },\r\n                () => { }\r\n        );\r\n    }\r\n\r\n    initDetails(objectId: string, parentId: string, searchCode: string, callbackFunc: any): void {\r\n        if (!objectId || !parentId) {\r\n            return;\r\n        }\r\n\r\n        this.objectId = objectId;\r\n        this.parentId = parentId;\r\n        this.searchCode = searchCode;\r\n\r\n        this.httpService.getWapiApiCall(\r\n            `${this.getBaseParentUrl()}ViewTypes`).subscribe(\r\n                (res) => { callbackFunc(res); },\r\n                (error) => { },\r\n                () => { }\r\n        );\r\n    }\r\n\r\n    changeChildrenViewType(viewType: string, callbackFunc: any): void {\r\n        this.viewType = viewType;\r\n        this.getChildren(callbackFunc);\r\n    }\r\n\r\n    changeAdditionalApiName(additionalApiName: string, callbackFunc: any): void {\r\n        this.additionalApiName = additionalApiName;\r\n        this.getChildren(callbackFunc);\r\n    }\r\n\r\n    childPlusClick(itemId: string, fieldApiName: string, callbackFunc: any): void {\r\n        const body = JSON.stringify({\r\n            TransactionUID: this.objectId,\r\n            SearchCode: this.searchCode,\r\n            ParentTransactionLineID: this.parentId,\r\n            TransactionLineUID: itemId,\r\n            FieldApiName: fieldApiName,\r\n            ViewType: this.viewType\r\n        });\r\n\r\n        this.httpService.postWapiApiCall(\r\n            `${this.getBaseParentUrl()}IncrementValue`,\r\n            body).subscribe(\r\n                (res) => { callbackFunc(res); },\r\n                (error) => { },\r\n                () => { }\r\n        );\r\n    }\r\n\r\n    childMinusClick(itemId: string, fieldApiName: string, callbackFunc: any): void {\r\n        const body = JSON.stringify({\r\n            TransactionUID: this.objectId,\r\n            SearchCode: this.searchCode,\r\n            ParentTransactionLineID: this.parentId,\r\n            TransactionLineUID: itemId,\r\n            FieldApiName: fieldApiName,\r\n            ViewType: this.viewType\r\n        });\r\n\r\n        this.httpService.postWapiApiCall(\r\n            `${this.getBaseParentUrl()}DecrementValue`,\r\n            body).subscribe(\r\n                (res) => { callbackFunc(res); },\r\n                (error) => { },\r\n                () => { }\r\n        );\r\n    }\r\n\r\n    childValueChanged(itemId: string, fieldApiName: string, value: string, callbackFunc: any): void {\r\n        const body = JSON.stringify({\r\n            TransactionUID: this.objectId,\r\n            SearchCode: this.searchCode,\r\n            ParentTransactionLineID: this.parentId,\r\n            TransactionLineUID: itemId,\r\n            FieldApiName: fieldApiName,\r\n            FieldValue: value,\r\n            ViewType: this.viewType\r\n        });\r\n\r\n        this.httpService.postWapiApiCall(\r\n            `${this.getBaseParentUrl()}SetFieldValue`,\r\n            body).subscribe(\r\n                (res) => { callbackFunc(res); },\r\n                (error) => { },\r\n                () => { }\r\n        );\r\n    }\r\n\r\n}\r\n","<ng-container *ngIf=\"totalRows == 0\">\r\n    <div class=\"no-data\">{{ noDataFoundMsg }}</div>\r\n</ng-container>\r\n<ng-container *ngIf=\"totalRows > 0\">\r\n    <div *ngIf=\"isTable\" #tableHeader class=\"table-header\"\r\n        [ngClass]=\"{ 'below-header-and-top-bar' : parentScroll == null }\" (mouseup)=\"onListResizeEnd($event)\"\r\n        (mouseenter)=\"onListHeaderMouseEnter($event)\" (mouseleave)=\"onListHeaderMouseLeave($event)\"\r\n        (mousemove)=\"onListResize($event)\">\r\n        <fieldset class=\"table-header-fieldset\">\r\n            <fieldset>\r\n                <div *ngFor=\"let field of uiControl?.ControlFields; let j = index\" class=\"header-column pull-left flip\"\r\n                    [ngStyle]=\"{ width: field.calcTitleColumnWidthString }\" [ngClass]=\"{\r\n                            'is-resizing': field.ApiName === pressedColumn,\r\n                            'is-first': j === 0,\r\n                            'is-last': j === uiControl?.ControlFields?.length - 1\r\n                        }\">\r\n                    <label *ngIf=\"field.Title != ''\" id=\"{{ field.ApiName }}\"\r\n                        class=\"header-label body-sm pull-left flip text-align-{{ field.Layout.XAlignment }}\"\r\n                        title=\"{{ field.Title }}\">\r\n                        {{ field.Title }}\r\n                    </label>\r\n                    <label *ngIf=\"field.Title == ''\" id=\"{{ field.ApiName }}\"\r\n                        class=\"header-label body-sm pull-left flip\">&nbsp;</label>\r\n\r\n                    <div *ngIf=\"supportResizing\" class=\"resizeBox pull-right flip\"\r\n                        (mousedown)=\"onListResizeStart($event, field.ApiName)\">\r\n                        <mat-icon>\r\n                            <pep-icon name=\"arrow-up\" class=\"asc\"></pep-icon>\r\n                        </mat-icon>\r\n                    </div>\r\n                </div>\r\n            </fieldset>\r\n        </fieldset>\r\n    </div>\r\n\r\n    <div #noVirtualScrollCont [ngClass]=\"{ 'table-body': isTable, 'cards-body': !isTable }\">\r\n        <ng-container *ngTemplateOutlet=\"listData\"></ng-container>\r\n    </div>\r\n    <ng-container *ngTemplateOutlet=\"listTotals\"></ng-container>\r\n</ng-container>\r\n\r\n<ng-template #listData>\r\n    <ng-container *ngFor=\"let pepperiObjectInput of scrollItems; let index; let isFirst = first; trackBy: trackByFunc\">\r\n        <ng-container *ngIf=\"isTable\">\r\n            <div class=\"table-row\"\r\n                (mouseenter)=\"onTableRowMouseEnter($event, pepperiObjectInput?.Data?.UID, pepperiObjectInput?.Data?.Type)\"\r\n                (mouseleave)=\"onTableRowMouseLeave($event, pepperiObjectInput?.Data?.UID, pepperiObjectInput?.Data?.Type)\"\r\n                [ngClass]=\"{\r\n                        highlighted: pepperiObjectInput?.Data?.UID + SEPARATOR + pepperiObjectInput?.Data?.Type === selectedItemId\r\n                    }\"\r\n                [ngStyle]=\"{ height: calculatedObjectHeight, visibility: showItems || pepperiObjectInput ? 'visible' : 'hidden' }\">\r\n                <fieldset class=\"table-row-fieldset\"\r\n                    [ngStyle]=\"{ 'background-color': pepperiObjectInput?.Data?.BackgroundColor }\">\r\n                    <pep-form [checkForChanges]=\"checkForChanges\" [uiControlHeader]=\"uiControl\"\r\n                        [firstFieldAsLink]=\"firstFieldAsLink\" [pepperiObjectInput]=\"pepperiObjectInput\"\r\n                        [canEditObject]=\"!disabled && pepperiObjectInput?.IsEditable\" [objectId]=\"objectId\"\r\n                        [parentId]=\"parentId\" [searchCode]=\"searchCode\" [lockEvents]=\"disableSelectionItems\"\r\n                        [layoutType]=\"LAYOUT_TYPE.PepperiTable\" [listType]=\"listType\" [isActive]=\"\r\n                                (pepperiObjectInput?.Data?.UID + SEPARATOR + pepperiObjectInput?.Data?.Type === selectedItemId ||\r\n                                pepperiObjectInput?.Data?.UID + SEPARATOR + pepperiObjectInput?.Data?.Type === hoveredItemId) && !isTouchDevice\r\n                            \" (notifyValueChanged)=\"onValueChanged($event)\"\r\n                        (notifyFieldClicked)=\"onCustomizeFieldClick($event)\"\r\n                        (notifyMenuItemClicked)=\"onCustomizeFieldMenuClicked($event)\"\r\n                        (click)=\"itemClicked($event, pepperiObjectInput)\" [pageType]=\"pageType\">\r\n                    </pep-form>\r\n                </fieldset>\r\n            </div>\r\n        </ng-container>\r\n\r\n        <ng-container *ngIf=\"!isTable\">\r\n            <div [class]=\"itemClass\"\r\n                (mouseenter)=\"onCardMouseEnter($event, pepperiObjectInput?.Data?.UID, pepperiObjectInput?.Data?.Type)\"\r\n                (mouseleave)=\"onCardMouseLeave($event, pepperiObjectInput?.Data?.UID, pepperiObjectInput?.Data?.Type)\"\r\n                [ngClass]=\"{\r\n                        highlighted: pepperiObjectInput?.Data?.UID + SEPARATOR + pepperiObjectInput?.Data?.Type === selectedItemId,\r\n                        cardView: isCardView\r\n                    }\" class=\"pull-left flip\"\r\n                [ngStyle]=\"{ height: calculatedObjectHeight, visibility: showItems || pepperiObjectInput ? 'visible' : 'hidden' }\">\r\n                <pep-form [firstFieldAsLink]=\"isCardView ? firstFieldAsLink : false\" [checkForChanges]=\"checkForChanges\"\r\n                    [uiControlHeader]=\"uiControl\" [pepperiObjectInput]=\"pepperiObjectInput\" [isCardView]=\"isCardView\"\r\n                    [canEditObject]=\"!disabled && pepperiObjectInput?.IsEditable\" [objectId]=\"objectId\"\r\n                    [parentId]=\"parentId\" [searchCode]=\"searchCode\" [lockEvents]=\"disableSelectionItems\"\r\n                    [layoutType]=\"getThumbnailsLayout()\" [listType]=\"listType\" [isActive]=\"\r\n                            (pepperiObjectInput?.Data?.UID + SEPARATOR + pepperiObjectInput?.Data?.Type === selectedItemId ||\r\n                                pepperiObjectInput?.Data?.UID + SEPARATOR + pepperiObjectInput?.Data?.Type === hoveredItemId) && !isTouchDevice\r\n                        \" (notifyValueChanged)=\"onValueChanged($event)\"\r\n                    (notifyFieldClicked)=\"onCustomizeFieldClick($event)\"\r\n                    (notifyMenuItemClicked)=\"onCustomizeFieldMenuClicked($event)\"\r\n                    (click)=\"itemClicked($event, pepperiObjectInput)\" [pageType]=\"pageType\">\r\n                </pep-form>\r\n            </div>\r\n        </ng-container>\r\n    </ng-container>\r\n</ng-template>\r\n\r\n<ng-template #listTotals>\r\n    <div *ngIf=\"totalsRow?.length > 0 && totalsRow.length <= uiControl?.ControlFields.length\" class=\"table-total\">\r\n        <fieldset class=\"table-header-fieldset\">\r\n            <div *ngFor=\"let field of uiControl?.ControlFields; let j = index\" class=\"total-column pull-left flip\"\r\n                [ngStyle]=\"{ width: field.calcTitleColumnWidthString }\">\r\n                <label class=\"total-label body-sm text-align-{{ field.Layout.XAlignment }}\">\r\n                    {{ totalsRow[j] }}\r\n                </label>\r\n            </div>\r\n        </fieldset>\r\n    </div>\r\n</ng-template>","import {\r\n    Component, Input, Output, EventEmitter, OnInit, Renderer2, ViewChild, ElementRef,\r\n    ChangeDetectorRef, OnDestroy, OnChanges\r\n} from '@angular/core';\r\nimport { delay } from 'rxjs/operators';\r\nimport {\r\n    LAYOUT_TYPE, LayoutService, ObjectSingleData, UIControl, UIControlField,\r\n    FIELD_TYPE, ObjectsDataRow, SCREEN_SIZE, PepperiObjectChangedData, PepperiFieldClickedData\r\n} from '@pepperi-addons/ngx-lib';\r\n\r\nexport enum VIEW_TYPE {\r\n    Card,\r\n    Line,\r\n    Table\r\n}\r\n\r\n@Component({\r\n    selector: 'pep-internal-list',\r\n    templateUrl: './internal-list.component.html',\r\n    styleUrls: ['./internal-list.component.scss'],\r\n    host: {\r\n        '(window:resize)': 'winResize($event)'\r\n    }\r\n})\r\nexport class PepperiInternalListComponent implements OnInit, OnChanges, OnDestroy {\r\n    @Input() currentListTypeTranslation = '';\r\n    @Input() noDataFoundMsg = 'Items not found';\r\n    @Input() hideAllSelectionInMulti = false;\r\n\r\n    @Input() top = -1;\r\n    @Input() listType = '';\r\n    @Input() objectId = '0';\r\n    @Input() parentId = '0';\r\n    @Input() searchCode = '0';\r\n    // @Input() showTopBorder = false;\r\n    @Input() firstFieldAsLink = false;\r\n    @Input() supportResizing = true;\r\n    @Input() parentScroll: Element | Window = null;\r\n    @Input() disabled = false;\r\n    @Input() isPrinting = false;\r\n    @Input() disableSelectionItems = false;\r\n    @Input() layoutType: LAYOUT_TYPE = null;\r\n    @Input() pageType = '';\r\n    @Input() totalsRow = [];\r\n    @Input() isTouchDevice = false;\r\n\r\n    @Output() notifyThumbnailClicked: EventEmitter<ObjectSingleData> = new EventEmitter<ObjectSingleData>();\r\n    @Output() notifyFieldClicked: EventEmitter<any> = new EventEmitter<PepperiFieldClickedData>();\r\n    @Output() notifyMenuItemClicked: EventEmitter<any> = new EventEmitter<PepperiFieldClickedData>();\r\n    @Output() notifyValueChanged: EventEmitter<PepperiObjectChangedData> = new EventEmitter<PepperiObjectChangedData>();\r\n    @Output() notifySelectAllSingleActionClicked: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() notifySingleActionClicked: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    @Output() notifyListLoad: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    @ViewChild('noVirtualScrollCont') noVirtualScrollCont: ElementRef;\r\n    @ViewChild('tableHeader') tableHeader: ElementRef;\r\n    @ViewChild('selectAllCB') selectAllCB: any;\r\n\r\n    LAYOUT_TYPE = LAYOUT_TYPE;\r\n\r\n    public uiControl: UIControl = null;\r\n    public totalRows = -1;\r\n    itemClass: string;\r\n    isTable = false;\r\n    private hasColumnWidthOfTypePercentage = true;\r\n    public items: Array<ObjectSingleData> = null;\r\n    isCardView = false;\r\n    private itemsCounter = 0;\r\n    showItems = true;\r\n    scrollItems: Array<ObjectSingleData>;\r\n\r\n    public SEPARATOR = ',';\r\n\r\n    nativeWindow: any = null;\r\n\r\n    selectedItemId = '';\r\n    hoveredItemId = '';\r\n\r\n    private lockEvents = false;\r\n    private containerWidth = 0;\r\n\r\n    screenSize: SCREEN_SIZE;\r\n\r\n    // headerIsInFocus = false;\r\n\r\n    // For resize\r\n    pressedColumn = '';\r\n    startX = 0;\r\n    startWidth = 0;\r\n    tableStartWidth = 0;\r\n\r\n    isUserSelected = false;\r\n    checkForChanges: any = null;\r\n    useVirtualScroll = true;\r\n    calculatedObjectHeight: string;\r\n\r\n    constructor(\r\n        private element: ElementRef,\r\n        private layoutService: LayoutService,\r\n        private cd: ChangeDetectorRef,\r\n        private renderer: Renderer2,\r\n    ) {\r\n        this.layoutService.onResize$\r\n            .pipe(delay(0))\r\n            .subscribe(size => {\r\n                this.screenSize = size;\r\n            });\r\n        this.nativeWindow = window;\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.containerWidth = 0;\r\n    }\r\n\r\n    ngOnChanges(changes): void {\r\n        if (this.containerWidth <= 0) {\r\n            this.setContainerWidth();\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        if (this.notifyValueChanged) {\r\n            this.notifyValueChanged.unsubscribe();\r\n        }\r\n\r\n        if (this.notifyFieldClicked) {\r\n            this.notifyFieldClicked.unsubscribe();\r\n        }\r\n\r\n        if (this.notifyMenuItemClicked) {\r\n            this.notifyMenuItemClicked.unsubscribe();\r\n        }\r\n\r\n        if (this.notifyThumbnailClicked) {\r\n            this.notifyThumbnailClicked.unsubscribe();\r\n        }\r\n    }\r\n\r\n    setContainerWidth(): void {\r\n        const selectionCheckBoxWidth = 0;\r\n\r\n        const rowHeight = 40; // the table row height (2.5rem * 16font-size).\r\n        const style = window.getComputedStyle(this.element.nativeElement.parentElement);\r\n        // The container-fluid class padding left + right + border\r\n        const containerFluidSpacing = parseInt(style.paddingLeft, 10) + parseInt(style.paddingRight, 10);\r\n\r\n        const parentContainer = this.element.nativeElement.parentElement.parentElement > 0 ?\r\n            this.element.nativeElement.parentElement.parentElement : this.element.nativeElement.parentElement;\r\n\r\n        // Calculate if vertical scroll should appear, if so set the scroll width. (this.totalRows + 1) + 1 is for the header row.\r\n        const scrollWidth = parentContainer.clientHeight < rowHeight * (this.totalRows + 1) ? 18 : 0; // 18 is the default scroll width.\r\n\r\n        // The selectionCheckBoxWidth width + containerFluidSpacing + scrollWidth.\r\n        const rowHeaderWidthToSub = containerFluidSpacing + selectionCheckBoxWidth + scrollWidth;\r\n        this.containerWidth = parentContainer.offsetWidth - rowHeaderWidthToSub;\r\n    }\r\n\r\n    removeTable(): void {\r\n        this.cleanItems();\r\n        this.uiControl = null;\r\n    }\r\n\r\n    private toggleItems(isVisible: boolean): void {\r\n        this.showItems = isVisible;\r\n        this.lockEvents = !isVisible;\r\n    }\r\n\r\n    private updateScrollItems(startIndex, endIndex, loadInChunks = true): void {\r\n        this.scrollItems = this.items.slice(startIndex, endIndex);\r\n    }\r\n\r\n    getUniqItemId(itemId: string, itemType: string = ''): string {\r\n        return itemId + this.SEPARATOR + itemType;\r\n    }\r\n\r\n    setLayout(): void {\r\n        const self = this;\r\n        if (this.totalRows === 0 ||\r\n            !this.uiControl ||\r\n            !this.uiControl.ControlFields ||\r\n            this.uiControl.ControlFields.length === 0) {\r\n            return;\r\n        }\r\n\r\n        this.uiControl.ControlFields.forEach((cf) => {\r\n            if (cf.ColumnWidth === 0) {\r\n                cf.ColumnWidth = 10;\r\n            }\r\n\r\n            if (self.isTable &&\r\n                (cf.FieldType === FIELD_TYPE.Image ||\r\n                    // cf.FieldType === FIELD_TYPE.Indicators || ???\r\n                    cf.FieldType === FIELD_TYPE.Signature ||\r\n                    cf.FieldType === FIELD_TYPE.NumberIntegerQuantitySelector ||\r\n                    cf.FieldType === FIELD_TYPE.NumberRealQuantitySelector ||\r\n                    cf.FieldType === FIELD_TYPE.NumberIntegerForMatrix ||\r\n                    cf.FieldType === FIELD_TYPE.NumberRealForMatrix ||\r\n                    cf.FieldType === FIELD_TYPE.Package ||\r\n                    cf.ApiName === 'UnitsQuantity' ||\r\n                    cf.ApiName === 'QuantitySelector')\r\n            ) {\r\n                cf.Layout.XAlignment = 3;\r\n            }\r\n        });\r\n\r\n        if (!this.cd['destroyed']) {\r\n            this.cd.detectChanges();\r\n        }\r\n\r\n        // Set the columns width.\r\n        if (this.containerWidth <= 0) {\r\n            this.setContainerWidth();\r\n        }\r\n\r\n        this.calcColumnsWidth();\r\n        this.checkForChanges = new Date().getTime();\r\n    }\r\n\r\n    private calcColumnsWidth(): void {\r\n        const fixedMultiple = 3.78; // for converting em to pixel.\r\n        const length = this.uiControl.ControlFields.length;\r\n        const selectionCheckBoxWidth = 0;\r\n\r\n        // Is table AND there is at least one column of width type of percentage.\r\n        if (this.isTable) {\r\n            if (this.uiControl && this.uiControl.ControlFields) {\r\n                this.hasColumnWidthOfTypePercentage = this.uiControl.ControlFields.filter(cf => cf.ColumnWidthType === 1).length === 0;\r\n            }\r\n        }\r\n\r\n        // If the columns size is fixed and the total is small then the container change it to percentage.\r\n        if (!this.hasColumnWidthOfTypePercentage) {\r\n            const totalFixedColsWidth = this.uiControl.ControlFields\r\n                .map(cf => cf.ColumnWidth * fixedMultiple)\r\n                .reduce((sum, current) => sum + current);\r\n\r\n            if (window.innerWidth > totalFixedColsWidth) {\r\n                this.hasColumnWidthOfTypePercentage = true;\r\n            }\r\n        }\r\n\r\n        let totalCalcColsWidth = 0;\r\n\r\n        // Calc by percentage\r\n        if (this.hasColumnWidthOfTypePercentage) {\r\n            const totalColsWidth: number = this.uiControl.ControlFields.map(cf => cf.ColumnWidth).reduce((sum, current) => sum + current);\r\n\r\n            for (let index = 0; index < length; index++) {\r\n                const uiControlField: UIControlField = this.uiControl.ControlFields[index];\r\n                const calcColumnWidthPercentage = (100 / totalColsWidth) * uiControlField.ColumnWidth;\r\n\r\n                uiControlField.calcColumnWidth = Math.floor((this.containerWidth * calcColumnWidthPercentage) / 100);\r\n\r\n                if (index === length - 1) {\r\n                    uiControlField.calcTitleColumnWidthString = uiControlField.calcColumnWidthString =\r\n                        'calc(100% - ' + totalCalcColsWidth + 'px)'; // For 100%\r\n                } else {\r\n                    uiControlField.calcTitleColumnWidthString = uiControlField.calcColumnWidthString =\r\n                        uiControlField.calcColumnWidth + 'px';\r\n                    totalCalcColsWidth += uiControlField.calcColumnWidth;\r\n                }\r\n            }\r\n\r\n            this.renderer.setStyle(this.element.nativeElement, 'width', 'inherit');\r\n        } else {\r\n            for (let index = 0; index < length; index++) {\r\n                const uiControlField: UIControlField = this.uiControl.ControlFields[index];\r\n                const currentFixedWidth = Math.floor(uiControlField.ColumnWidth * fixedMultiple);\r\n\r\n                if (index === length - 1) {\r\n                    uiControlField.calcTitleColumnWidthString = currentFixedWidth + 'px';\r\n                    uiControlField.calcColumnWidthString = currentFixedWidth - 4 + 'px'; // -4 for the row padding.\r\n                } else {\r\n                    uiControlField.calcTitleColumnWidthString = uiControlField.calcColumnWidthString =\r\n                        currentFixedWidth + 'px';\r\n                }\r\n\r\n                totalCalcColsWidth += currentFixedWidth;\r\n            }\r\n\r\n            this.renderer.setStyle(this.element.nativeElement, 'width', totalCalcColsWidth + selectionCheckBoxWidth + 'px');\r\n        }\r\n    }\r\n\r\n    private initResizeData(): void {\r\n        this.startX = 0;\r\n        this.startWidth = 0;\r\n        this.tableStartWidth = 0;\r\n        this.pressedColumn = '';\r\n    }\r\n\r\n    onListResizeStart(event, apiName): void {\r\n        this.pressedColumn = apiName;\r\n        this.startX = event.x;\r\n        this.startWidth = event.target.closest('.header-column').offsetWidth;\r\n        // Set the tableStartWidth to the container offsetWidth\r\n        this.tableStartWidth = this.noVirtualScrollCont.nativeElement.offsetWidth;\r\n    }\r\n\r\n    onListResize(event): void {\r\n        if (this.pressedColumn.length > 0) {\r\n            const widthToAdd = this.layoutService.isRtl() ? this.startX - event.x : event.x - this.startX;\r\n\r\n            // Set the width of the column and the container of the whole columns.\r\n            if (this.startWidth + widthToAdd >= 48 || widthToAdd > 0) {\r\n                const length = this.uiControl.ControlFields.length;\r\n                let totalCalcColsWidth = 0;\r\n\r\n                for (let index = 0; index < length; index++) {\r\n                    const uiControlField: UIControlField = this.uiControl.ControlFields[index];\r\n\r\n                    if (index === length - 1) {\r\n                        // Calc the last column only in percentage type.\r\n                        if (this.hasColumnWidthOfTypePercentage) {\r\n                            uiControlField.calcTitleColumnWidthString = uiControlField.calcColumnWidthString =\r\n                                'calc(100% - ' + totalCalcColsWidth + 'px)'; // For 100%\r\n                        } else {\r\n                            if (uiControlField.ApiName === this.pressedColumn) {\r\n                                uiControlField.calcColumnWidth = this.startWidth + widthToAdd;\r\n                                uiControlField.calcTitleColumnWidthString = uiControlField.calcColumnWidth + 'px';\r\n                                uiControlField.calcColumnWidthString = uiControlField.calcColumnWidth - 4 + 'px';\r\n                            }\r\n                        }\r\n                    } else if (uiControlField.ApiName === this.pressedColumn) {\r\n                        uiControlField.calcColumnWidth = this.startWidth + widthToAdd;\r\n                        uiControlField.calcTitleColumnWidthString = uiControlField.calcColumnWidthString =\r\n                            uiControlField.calcColumnWidth + 'px';\r\n                    }\r\n\r\n                    totalCalcColsWidth += uiControlField.calcColumnWidth;\r\n                }\r\n\r\n                this.renderer.setStyle(this.element.nativeElement, 'width', this.tableStartWidth + widthToAdd + 'px');\r\n            }\r\n\r\n            this.checkForChanges = new Date().getTime();\r\n        }\r\n    }\r\n\r\n    onListResizeEnd(event): void {\r\n        if (this.pressedColumn.length > 0) {\r\n            if (event && $(event.srcElement).parents('.resizeBox').length > 0) {\r\n                this.initResizeData();\r\n            } else {\r\n                const self = this;\r\n                setTimeout(() => {\r\n                    self.initResizeData();\r\n                }, 0);\r\n            }\r\n        }\r\n    }\r\n\r\n    onListHeaderMouseEnter(event): void {\r\n        // this.headerIsInFocus = true;\r\n    }\r\n\r\n    onListHeaderMouseLeave(event): void {\r\n        // this.headerIsInFocus = false;\r\n        this.onListResizeEnd(event);\r\n        this.initResizeData();\r\n    }\r\n\r\n    onListChange(event: any): void {\r\n        if (this.isPrinting) {\r\n            return;\r\n        }\r\n\r\n        // For other events do nothing.\r\n        if (typeof event.start === 'undefined' || typeof event.end === 'undefined') {\r\n            return;\r\n        }\r\n\r\n        this.calculatedObjectHeight = event.calculatedChildHeight + 'px';\r\n\r\n        if (!this.lockEvents) {\r\n            this.toggleItems(false);\r\n            this.updateScrollItems(event.start, event.end, false);\r\n            this.toggleItems(true);\r\n        }\r\n    }\r\n\r\n    onListLoad(event: any): void {\r\n        this.notifyListLoad.emit(event);\r\n    }\r\n\r\n    getParentContainer(): Element | Window {\r\n        return this.parentScroll ? this.parentScroll : window;\r\n    }\r\n\r\n    onValueChanged(valueChanged: any): void {\r\n        if (this.disabled) {\r\n            return;\r\n        }\r\n\r\n        this.notifyValueChanged.emit(valueChanged);\r\n    }\r\n\r\n    onCustomizeFieldClick(customizeFieldClickedData: PepperiFieldClickedData): void {\r\n        if (this.disabled) {\r\n            return;\r\n        }\r\n\r\n        this.notifyFieldClicked.emit(customizeFieldClickedData);\r\n    }\r\n\r\n    onCustomizeFieldMenuClicked(customizeFieldClickedData: PepperiFieldClickedData): void {\r\n        if (this.disabled) {\r\n            return;\r\n        }\r\n\r\n        this.notifyMenuItemClicked.emit(customizeFieldClickedData);\r\n    }\r\n\r\n    getIsDisabled(pepperiObjectInput: ObjectSingleData): boolean {\r\n        if (this.disableSelectionItems) {\r\n            return true;\r\n        } else {\r\n            const IsNotSelectableForActions = pepperiObjectInput?.Data && !pepperiObjectInput.Data.IsSelectableForActions;\r\n            return IsNotSelectableForActions;\r\n        }\r\n    }\r\n\r\n    itemClicked(e: any, objectSingleData: ObjectSingleData): void {\r\n        // Set seleted item\r\n        const itemId = objectSingleData.Data.UID.toString();\r\n        const itemType = objectSingleData.Data.Type.toString();\r\n        let isChecked = false;\r\n\r\n        if (objectSingleData && objectSingleData.Data && objectSingleData.Data.IsSelectableForActions) {\r\n            this.selectedItemId = this.getUniqItemId(itemId, itemType);\r\n            isChecked = true;\r\n        }\r\n\r\n        if (!this.isTable) {\r\n            if (this.disabled) {\r\n                return;\r\n            }\r\n\r\n            this.notifyThumbnailClicked.emit(objectSingleData);\r\n        }\r\n    }\r\n\r\n    onTableRowMouseEnter(event: any, itemId: string, itemType: string): void {\r\n        if (this.isTouchDevice) {\r\n            return;\r\n        }\r\n\r\n        const uniqItemId = this.getUniqItemId(itemId, itemType);\r\n        this.hoveredItemId = uniqItemId;\r\n    }\r\n\r\n    onTableRowMouseLeave(event: any, itemId: string, itemType: string): void {\r\n        this.hoveredItemId = '';\r\n    }\r\n\r\n    onCardMouseEnter(event: any, itemId: string, itemType: string): void {\r\n        if (this.isTouchDevice) {\r\n            return;\r\n        }\r\n\r\n        const uniqItemId = this.getUniqItemId(itemId, itemType);\r\n        this.hoveredItemId = uniqItemId;\r\n    }\r\n\r\n    onCardMouseLeave(event: any, itemId: string, itemType: string): void {\r\n        this.hoveredItemId = '';\r\n    }\r\n\r\n    getThumbnailsLayout(): LAYOUT_TYPE {\r\n        return this.layoutType == null ? LAYOUT_TYPE.PepperiCard : this.layoutType;\r\n    }\r\n\r\n    // call this function after resize + animation end\r\n    winResize(e): void {\r\n        this.containerWidth = 0;\r\n        this.setLayout();\r\n    }\r\n\r\n    trackByFunc(index: number, item: ObjectSingleData): any {\r\n        return item && item.Data && item.Data.UID ? item.Data.UID : index;\r\n    }\r\n\r\n    cleanItems(): void {\r\n        this.itemsCounter = 0;\r\n        this.items = this.totalRows > 0 ? Array<ObjectSingleData>(this.totalRows) : [];\r\n        this.scrollItems = [];\r\n        this.calculatedObjectHeight = '';\r\n    }\r\n\r\n    getUIControl(): UIControl {\r\n        return this.uiControl;\r\n    }\r\n\r\n    initListData(uiControl: UIControl, totalRows: number, items: ObjectSingleData[], viewType: VIEW_TYPE = VIEW_TYPE.Table,\r\n                 itemClass: string = ''): void {\r\n        this.isCardView = viewType === VIEW_TYPE.Card;\r\n        this.uiControl = uiControl;\r\n        this.itemClass = itemClass;\r\n        this.selectedItemId = '';\r\n        this.isTable = viewType === VIEW_TYPE.Table;\r\n        this.totalRows = totalRows;\r\n\r\n        // fix bug for the scrollTo that doesn't work on edge div , not window\r\n        const scrollingElement = this.getParentContainer();\r\n        scrollingElement.scrollTo(0, 0);\r\n\r\n        this.cleanItems();\r\n\r\n        this.updateListItems(items, null);\r\n        this.onListLoad(null);\r\n\r\n        this.setLayout();\r\n    }\r\n\r\n    updateListItems(items: ObjectSingleData[], event: any): void {\r\n        this.scrollItems = this.items = items;\r\n        this.itemsCounter = items.length;\r\n    }\r\n\r\n    updateListItem(data: any): void {\r\n        let index = 0;\r\n\r\n        // Update items list\r\n        index = this.items.findIndex(i => i && i.Data && i.Data.UID === data.UID);\r\n        if (index >= 0 && index < this.items.length) {\r\n            this.items[index].Data = data;\r\n        }\r\n        // Update scrollItems list\r\n        index = this.scrollItems.findIndex(i => i && i.Data && i.Data.UID === data.UID);\r\n        if (index >= 0 && index < this.scrollItems.length) {\r\n            this.scrollItems[index].Data = data;\r\n            this.checkForChanges = new Date().getTime();\r\n        }\r\n    }\r\n\r\n    getIsItemEditable(uid: string): boolean {\r\n        const item = this.items.filter(x => x.Data.UID.toString() === uid);\r\n        if (item.length > 0) {\r\n            return item[0].Data.IsEditable;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    getItemDataByID(uid: string): ObjectsDataRow {\r\n        return this.items.find(item => item.Data.UID.toString() === uid)?.Data;\r\n    }\r\n}\r\n","<ng-template #matrixTemplate>\r\n    <div class=\"matrix-title-container pepperi-border-bottom align-{{ field.xAlignment }}\" title=\"{{ field.label }}\">\r\n        <span class=\"block-with-text body-md\">{{ field.label }}</span>\r\n\r\n        <div class=\"buttons-container spacing-element-negative pull-right flip\">\r\n            <ng-container\r\n                *ngIf=\"currentViewType?.Key == 'OrderCenterMatrix' && additionalApiNames && additionalApiNames.length > 0\">\r\n                <button class=\"spacing-element pepperi-button icon-button sm weak\" mat-button [matMenuTriggerFor]=\"menu\"\r\n                    menu-blur>\r\n                    <span class=\"pull-left flip\"\r\n                        *ngIf=\"currentAdditionalApiName\">&nbsp;{{ currentAdditionalApiName?.Value }}&nbsp;</span>\r\n\r\n                    <mat-icon [ngClass]=\"{ 'pull-left flip': currentAdditionalApiName}\">\r\n                        <pep-icon name=\"system_info\"></pep-icon>\r\n                    </mat-icon>\r\n                </button>\r\n                <mat-menu #menu=\"matMenu\" xPosition=\"before\">\r\n                    <button mat-menu-item [ngClass]=\"{ selected: currentAdditionalApiName === null }\"\r\n                        (click)=\"changeAdditionalApiName(null)\">\r\n                        <span>{{ 'LIST.NONE' | translate }}</span>\r\n                    </button>\r\n                    <button mat-menu-item\r\n                        [ngClass]=\"{ selected: currentAdditionalApiName?.Key == additionalApiName?.Key }\"\r\n                        *ngFor=\"let additionalApiName of additionalApiNames\"\r\n                        (click)=\"changeAdditionalApiName(additionalApiName)\">\r\n                        <span>{{ additionalApiName.Value }}</span>\r\n                    </button>\r\n                </mat-menu>\r\n            </ng-container>\r\n            <ng-container *ngIf=\"childViewTypes && childViewTypes.length > 1\">\r\n                <button class=\"spacing-element pepperi-button icon-button sm weak\" mat-button\r\n                    [matMenuTriggerFor]=\"viewsMenu\" menu-blur>\r\n                    <mat-icon>\r\n                        <pep-icon name=\"view_card_md\"></pep-icon>\r\n                    </mat-icon>\r\n                </button>\r\n\r\n                <mat-menu #viewsMenu=\"matMenu\" xPosition=\"before\">\r\n                    <button mat-menu-item [ngClass]=\"{ selected: currentViewType?.Key == viewType?.Key }\"\r\n                        *ngFor=\"let viewType of childViewTypes\" (click)=\"changeChildrenViewType(viewType?.Key)\">\r\n                        <mat-icon [ngSwitch]=\"viewType?.Key\">\r\n                            <pep-icon *ngSwitchCase=\"'OrderCenterMatrix'\" name=\"view_matrix\"></pep-icon>\r\n                            <pep-icon *ngSwitchCase=\"'OrderCenterFlatMatrixGrid'\" name=\"view_table\"></pep-icon>\r\n                            <pep-icon *ngSwitchCase=\"'OrderCenterFlatMatrixLine'\" name=\"view_line\"></pep-icon>\r\n                        </mat-icon>\r\n                        <span>{{ viewType?.Value }}</span>\r\n                    </button>\r\n                </mat-menu>\r\n            </ng-container>\r\n        </div>\r\n    </div>\r\n\r\n    <pep-internal-list (notifyValueChanged)=\"onCustomizeObjectChanged($event)\"\r\n        (notifyFieldClicked)=\"onCustomizeFieldClick($event)\" [totalsRow]=\"totalsRow\"></pep-internal-list>\r\n</ng-template>\r\n\r\n<div id=\"mainViewCont\" [ngStyle]=\"{ 'max-width': viewWidth, 'max-height': viewHeight }\">\r\n    <div id=\"my1_mm\" style=\"height:1mm;width:1mm;display:none;\"></div>\r\n    <div *ngIf=\"coverChildTable && uiControl != null\" class=\"table-cover\"></div>\r\n    <button *ngIf=\"coverChildTable && uiControl != null\" (click)=\"showMatrixDialog()\"\r\n        class=\"pepperi-button strong sm table-cover-button\">{{ 'INTERNAL_PAGE.CLICK_TO_ORDER' | translate }}</button>\r\n\r\n    <ng-container #orgCont></ng-container>\r\n</div>\r\n\r\n<!-- <div id=\"childGridModal\" bsModal (onShown)=\"onShown()\" (onHidden)=\"onHidden()\" #childModal=\"bs-modal\" class=\"modal\"\r\n    tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"gridModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body matrix-dialog-body\">\r\n                <ng-container #modalCont></ng-container>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div> -->","import {\r\n    Component,\r\n    OnInit,\r\n    OnDestroy,\r\n    Input,\r\n    Output,\r\n    EventEmitter,\r\n    ViewChild,\r\n    ElementRef,\r\n    ViewContainerRef,\r\n    TemplateRef,\r\n    ChangeDetectionStrategy,\r\n    ChangeDetectorRef\r\n} from '@angular/core';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { PepperiInternalPageService } from './internal-page.service';\r\n\r\nimport { LAYOUT_TYPE, UIControl, KeyValuePair, CustomizationService, ObjectSingleData,\r\n    UIControlField, ObjectsData, FIELD_TYPE, PepperiFieldClickedData, PepperiObjectChangedData } from '@pepperi-addons/ngx-lib';\r\nimport { PepperiInternalListComponent, VIEW_TYPE } from './internal-list.component';\r\n\r\nimport * as $ from 'jquery';\r\n\r\n@Component({\r\n    selector: 'pep-internal-page',\r\n    templateUrl: './internal-page.component.html',\r\n    styleUrls: ['./internal-page.component.scss'],\r\n    providers: [PepperiInternalPageService],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class PepperiInternalPageComponent implements OnInit, OnDestroy {\r\n    static CURRENT_ADDITIONAL_API_NAME = 'item_details_currentAdditionalApiName';\r\n\r\n    controlType = 'internalPage';\r\n\r\n    @Input() field: any;\r\n    @Input() hasHeightLimit = false;\r\n    @Input() layoutType = LAYOUT_TYPE.PepperiForm;\r\n    @Output() childChanged: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() childClicked: EventEmitter<PepperiFieldClickedData> = new EventEmitter<PepperiFieldClickedData>();\r\n\r\n    // TODO: Implement\r\n    // @ViewChild('childModal') public childModal: ModalDirective;\r\n    childModal = { isShown: false };\r\n\r\n    @ViewChild('orgCont', {read: ViewContainerRef}) orgCont: ViewContainerRef;\r\n    @ViewChild('modalCont', {read: ViewContainerRef}) modalCont: ViewContainerRef;\r\n    @ViewChild('matrixTemplate') matrixTemplate: TemplateRef<any>;\r\n\r\n    @ViewChild(PepperiInternalListComponent) customList: PepperiInternalListComponent;\r\n    LAYOUT_TYPE = LAYOUT_TYPE;\r\n\r\n    resize: any;\r\n    checkForChanges: any = null;\r\n\r\n    childData: any = null;\r\n\r\n    emptyForm: FormGroup;\r\n    uiControl: UIControl;\r\n    rows: any;\r\n    lineViewRows: any;\r\n    totalsRow: any = [];\r\n    additionalApiNames: any = null;\r\n    currentAdditionalApiName: any = null;\r\n    focusedQS = false;\r\n    fieldIdWithFocus = '';\r\n    columnWidth = 100;\r\n    coverChildTable = false;\r\n    childViewTypes: Array<KeyValuePair<string>>;\r\n    currentViewType: KeyValuePair<string> = null;\r\n    currentViewTypeTitle: string;\r\n    sumOfMinColWidth = 0;\r\n    totalRowsWidth = 0;\r\n    viewWidth = '100%';\r\n    viewHeight = 'auto';\r\n    displayQSbtns = true;\r\n    selectedApiName = '';\r\n    showSort = false;\r\n    defaultRowSpan = -1;\r\n\r\n    constructor(\r\n        protected fb: FormBuilder,\r\n        private pepperiInternalPageService: PepperiInternalPageService,\r\n        public customizationService: CustomizationService,\r\n        private elementRef: ElementRef,\r\n        private changeDetectorRef: ChangeDetectorRef\r\n    ) {}\r\n\r\n    private fillData(): void {\r\n        const view = this.matrixTemplate.createEmbeddedView(null);\r\n\r\n        if (this.childModal.isShown) {\r\n            this.orgCont.clear();\r\n            this.modalCont.clear();\r\n            this.modalCont.insert(view);\r\n        } else {\r\n            this.modalCont.clear();\r\n            this.orgCont.clear();\r\n            this.orgCont.insert(view);\r\n        }\r\n\r\n        setTimeout(() => {\r\n            const buffer = [];\r\n\r\n            if (this.childData.Rows) {\r\n                // for (let i = 0; i < this.childData.Rows.length; i++) {\r\n                for (const childDataRow of this.childData.Rows) {\r\n                    const osd = new ObjectSingleData(this.uiControl, childDataRow);\r\n                    osd.IsEditable = true;\r\n                    buffer.push(osd);\r\n                }\r\n            }\r\n\r\n            const viewType: VIEW_TYPE = this.isTableView() ? VIEW_TYPE.Table : VIEW_TYPE.Line;\r\n            this.customList.initListData(this.uiControl, this.childData.TotalRows, buffer, viewType, this.getItemClass());\r\n            this.setTotalsRow();\r\n\r\n            if (!this.childModal.isShown) {\r\n                const childrenCount = this.childData.Rows ? this.childData.Rows.length : 0;\r\n                const isEven = childrenCount % 2 === 0;\r\n                // 3 for matrix & flat matrix because the header + total is 2 more rows.\r\n                const rowsToAdd = this.isMatrixView() || this.isFlatMatrixView() ? 3 : 1;\r\n\r\n                const formRowHeight = this.customizationService.calculateFormFieldHeight() * 16; // convert rem to pixel\r\n\r\n                // Set the default only if not set yet.\r\n                if (this.defaultRowSpan === -1) {\r\n                    this.defaultRowSpan = this.field.rowSpan;\r\n                }\r\n\r\n                // For line view Add the height of the line (form height).\r\n                if (this.currentViewType.Key === 'OrderCenterFlatMatrixLine') {\r\n                    const maxRow = Math.max.apply(\r\n                        Math,\r\n                        this.uiControl.ControlFields.map((f) => {\r\n                            return f.Layout.Y + f.Layout.Height;\r\n                        })\r\n                    );\r\n\r\n                    // * 16 convert rem to pixel\r\n                    const cardRowsHeight = this.customizationService.calculateCardRowsHeight(maxRow) * 16;\r\n\r\n                    // maxRow * 24 + 60 - 24 for each row in card + 60 for the padding of each card.\r\n                    // const rowSpanToAdd = Math.floor(childrenCount * ((cardRowsHeight + 56) / formRowHeight) + rowsToAdd);\r\n                    // + 16 is the 1rem margin outside card.\r\n                    const rowSpanToAdd = (childrenCount * (cardRowsHeight + 16)) / formRowHeight + rowsToAdd;\r\n                    this.field.rowSpan = rowSpanToAdd;\r\n                } else {\r\n                    // const tableRowsHeight = this.customizationService.calculateTableRowsHeight(childrenCount) * 16;\r\n                    // this.field.rowSpan = Math.ceil((tableRowsHeight + (rowsToAdd * 40)) / formRowHeight);\r\n                    // * 16 convert rem to pixel\r\n                    const rowsToAddHeight = this.customizationService.calculateTableRowsHeight(rowsToAdd, false) * 16;\r\n                    const tableRowsHeight = this.customizationService.calculateTableRowsHeight(childrenCount) * 16;\r\n                    this.field.rowSpan = (rowsToAddHeight + tableRowsHeight) / formRowHeight;\r\n                }\r\n\r\n                const self = this;\r\n                self.sumOfMinColWidth = 0;\r\n                self.totalRowsWidth = 0;\r\n\r\n                this.childData.UIControl.ControlFields.forEach((uiControlField: UIControlField) => {\r\n                    self.totalRowsWidth += uiControlField.ColumnWidth;\r\n                    uiControlField.minFieldWidth = self.mmToPx(12); // NEED TO GET THIS PARAM FROM CUSTOMIZATION;\r\n                    self.sumOfMinColWidth += 12;\r\n                });\r\n\r\n                setTimeout(() => {\r\n                    self.setViewCover(this.childData.Rows);\r\n                }, 0);\r\n            }\r\n        }, 150);\r\n\r\n        this.changeDetectorRef.markForCheck();\r\n    }\r\n\r\n    private fillChildData(res: any): void {\r\n        // TODO: ??\r\n        // this.userService.setOptionalValuesDic(res.Rows);\r\n        this.childData = res;\r\n        this.uiControl = res.UIControl;\r\n        this.additionalApiNames = res.AdditionalApiNames;\r\n\r\n        this.fillData();\r\n    }\r\n\r\n    mmToPx(mm): number {\r\n        return Math.floor(mm * $('#my1_mm').height()); // JQuery returns sizes in PX\r\n    }\r\n\r\n    private isMatrixView(): boolean {\r\n        return this.currentViewType && this.currentViewType.Key === 'OrderCenterMatrix';\r\n    }\r\n\r\n    private isFlatMatrixView(): boolean {\r\n        return this.currentViewType && this.currentViewType.Key === 'OrderCenterFlatMatrixGrid';\r\n    }\r\n\r\n    isTableView(): boolean {\r\n        return this.isMatrixView() || this.isFlatMatrixView();\r\n    }\r\n\r\n    private getItemClass(): string {\r\n        let res = '';\r\n\r\n        if (!this.isTableView()) {\r\n            res = 'line-view';\r\n        }\r\n\r\n        return res;\r\n    }\r\n\r\n    changeChildrenViewType(viewTypeKey: string): void {\r\n        const self = this;\r\n        this.rows = [];\r\n        this.uiControl = null;\r\n\r\n        for (const vt of this.childViewTypes) {\r\n            if (vt.Key === viewTypeKey) {\r\n                this.currentViewType = vt;\r\n                break;\r\n            }\r\n        }\r\n        // check if view type changed\r\n        // if (this.currentViewType.Key != viewTypeKey) {\r\n        $('body').scrollTop(0);\r\n        this.currentViewTypeTitle = this.currentViewType.Value;\r\n\r\n        this.pepperiInternalPageService.changeChildrenViewType(this.currentViewType.Key, (res: ObjectsData) => {\r\n            if (res.Rows) {\r\n                self.fillChildData(res);\r\n            }\r\n        });\r\n    }\r\n\r\n    setViewCover(rows): void {\r\n        if (!rows) { return; }\r\n\r\n        const numofrows = rows.length;\r\n\r\n        const matrixCont = $('#mainViewCont');\r\n        const viewWidth = matrixCont.parents('mat-grid-tile').css('width');\r\n        const viewHeight = matrixCont.parents('mat-grid-tile').css('height');\r\n\r\n        this.viewWidth = viewWidth ? viewWidth.toString() : '100%';\r\n        this.viewHeight = this.hasHeightLimit ? viewHeight.toString() : 'auto';\r\n\r\n        // if the matrix located on the bottom / there is nothing under the matrix we dont need to check the height\r\n\r\n        if (parseInt(viewWidth, 10) < this.mmToPx(this.sumOfMinColWidth) ||\r\n            (this.hasHeightLimit && parseInt(viewHeight, 10) < numofrows * 41 + 72)) {\r\n            this.coverChildTable = true;\r\n        } else {\r\n            this.coverChildTable = false;\r\n        }\r\n\r\n        this.changeDetectorRef.markForCheck();\r\n    }\r\n\r\n    showMatrixDialog(): void {\r\n        // this.childModal.config.ignoreBackdropClick = true;\r\n        // TODO: Show modal\r\n        // this.childModal.show();\r\n    }\r\n\r\n    // TODO:\r\n    // onShown() {\r\n    //     this.fillData();\r\n    // }\r\n\r\n    // TODO:\r\n    // onHidden() {\r\n    //     this.fillData();\r\n    // }\r\n\r\n    ngOnInit(): void {\r\n        const self = this;\r\n        // let field = this.field as PepperiInternalPageField;\r\n\r\n        this.pepperiInternalPageService.initDetails(this.field.objectId, this.field.parentId,\r\n            this.field.searchCode, (resViewTypes: any) => {\r\n            // my code DI-7134\r\n            resViewTypes.Rows = resViewTypes.Rows.filter((item) => item.Key !== 'OrderCenterView1');\r\n\r\n            if (resViewTypes.Rows && resViewTypes.Rows.length > 0) {\r\n                if (!resViewTypes.Default) {\r\n                    resViewTypes.Default = resViewTypes.Rows[0].Key;\r\n                }\r\n                self.childViewTypes = resViewTypes.Rows;\r\n                self.currentViewType = resViewTypes.Rows[0];\r\n\r\n                // for (var i = 0; i < resViewTypes.Rows.length; i++) {\r\n                for (const viewTypeRow of resViewTypes.Rows) {\r\n                    if (viewTypeRow.Value === resViewTypes.Default) {\r\n                        self.currentViewType = viewTypeRow;\r\n                    }\r\n                }\r\n\r\n                self.loadLastAdditionalApiName();\r\n                self.changeChildrenViewType(self.currentViewType.Key);\r\n            }\r\n        });\r\n\r\n        // TODO:\r\n        // this.resize = Observable.fromEvent(window, 'resize')\r\n        //     .debounceTime(10)\r\n        //     .subscribe((event) => {\r\n        //         self.setViewCover(self.rows);\r\n        //     });\r\n    }\r\n\r\n    loadLastAdditionalApiName(): void {\r\n        const daa = sessionStorage.getItem(PepperiInternalPageComponent.CURRENT_ADDITIONAL_API_NAME);\r\n        if (daa && daa.length > 0) {\r\n            const additionalApiName = JSON.parse(daa);\r\n            this.currentAdditionalApiName = additionalApiName;\r\n            this.pepperiInternalPageService.additionalApiName = additionalApiName.Key;\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        if (this.childChanged) { this.childChanged.unsubscribe(); }\r\n\r\n        if (this.childClicked) { this.childClicked.unsubscribe(); }\r\n\r\n        if (this.resize) { this.resize.unsubscribe(); }\r\n    }\r\n\r\n    changeAdditionalApiName(additionalApiName): void {\r\n        const self = this;\r\n        this.pepperiInternalPageService.changeAdditionalApiName(additionalApiName ? additionalApiName.Key : '',\r\n            (res: any) => {\r\n                // for (let index = 0; index < res.Rows.length; index++) {\r\n                for (const row of res.Rows) {\r\n                        self.updateChanges(row);\r\n                }\r\n\r\n                self.changeDetectorRef.markForCheck();\r\n            }\r\n        );\r\n\r\n        sessionStorage.setItem(PepperiInternalPageComponent.CURRENT_ADDITIONAL_API_NAME, JSON.stringify(additionalApiName));\r\n\r\n        setTimeout(() => {\r\n            this.currentAdditionalApiName = additionalApiName;\r\n        }, 0);\r\n    }\r\n\r\n    setTotalsRow(): void {\r\n        this.totalsRow = [];\r\n\r\n        if (this.isMatrixView() || this.isFlatMatrixView()) {\r\n            let totalCol = 0;\r\n\r\n            if (this.customList.items) {\r\n                for (let col = 0; col < this.customList.items[0].Data.Fields.length; col++) {\r\n                    const field = this.customList.items[0].Data.Fields[col];\r\n                    if (\r\n                        field.FieldType === FIELD_TYPE.NumberIntegerForMatrix ||\r\n                        field.FieldType === FIELD_TYPE.NumberIntegerQuantitySelector ||\r\n                        field.FieldType === FIELD_TYPE.NumberRealForMatrix ||\r\n                        field.FieldType === FIELD_TYPE.NumberRealQuantitySelector ||\r\n                        field.FieldType === FIELD_TYPE.CalculatedInt ||\r\n                        field.FieldType === FIELD_TYPE.NumberInteger ||\r\n                        field.FieldType === FIELD_TYPE.CalculatedReal ||\r\n                        field.FieldType === FIELD_TYPE.NumberReal\r\n                    ) {\r\n                        totalCol = 0;\r\n                        // for (var i = 0; i < this.customList.items.length; i++) {\r\n                        for (const listItem of this.customList.items) {\r\n\r\n                            if (listItem.Data.Fields[col] && listItem.Data.Fields[col].Value) {\r\n                                const num = parseFloat(listItem.Data.Fields[col].Value);\r\n                                totalCol += isNaN(num) ? 0 : num;\r\n                            }\r\n                        }\r\n                        this.totalsRow.push(totalCol);\r\n                    } else {\r\n                        this.totalsRow.push('');\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    updateChanges(elementToUpdate: any): void {\r\n        this.customList.updateListItem(elementToUpdate);\r\n\r\n        // Update memory data\r\n        for (let index = 0; index < this.childData.Rows.length; index++) {\r\n            if (this.childData.Rows[index].UID === elementToUpdate.UID) {\r\n                this.childData.Rows[index] = elementToUpdate;\r\n            }\r\n        }\r\n    }\r\n\r\n    setValueCallback(id: any, res: any): void {\r\n        if (res.Rows.length === 1) {\r\n            this.updateChanges(res.Rows[0]);\r\n        }\r\n\r\n        this.setTotalsRow();\r\n        this.checkForChanges = new Date();\r\n\r\n        // DI-15985\r\n        this.childChanged.emit(res);\r\n\r\n        this.changeDetectorRef.markForCheck();\r\n    }\r\n\r\n    onCustomizeObjectChanged(customizeObjectChangedData: PepperiObjectChangedData): void {\r\n        let handledEvent = false;\r\n        const boundSetValueCallback = this.setValueCallback.bind(this); // .bind() to have this in the bound function.\r\n\r\n        // For the new custom form, the plus and minus events transform in the PepperiObjectChangedData\r\n        if (customizeObjectChangedData.ControlType === 'qs') {\r\n            if (customizeObjectChangedData.Value === '+') {\r\n                handledEvent = true;\r\n                this.pepperiInternalPageService.childPlusClick(customizeObjectChangedData.Id, customizeObjectChangedData.ApiName,\r\n                    (res: any) => {\r\n                        boundSetValueCallback(customizeObjectChangedData.Id, res);\r\n                    }\r\n                );\r\n            } else if (customizeObjectChangedData.Value === '-') {\r\n                handledEvent = true;\r\n                this.pepperiInternalPageService.childMinusClick(customizeObjectChangedData.Id, customizeObjectChangedData.ApiName,\r\n                    (res: any) => {\r\n                        boundSetValueCallback(customizeObjectChangedData.Id, res);\r\n                    }\r\n                );\r\n            }\r\n        }\r\n\r\n        if (!handledEvent) {\r\n            this.pepperiInternalPageService.childValueChanged(customizeObjectChangedData.Id, customizeObjectChangedData.ApiName,\r\n                customizeObjectChangedData.Value, (res: any) => {\r\n                    boundSetValueCallback(customizeObjectChangedData.Id, res);\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    onCustomizeFieldClick(fieldClickEvent: any): void {\r\n        this.childClicked.emit(fieldClickEvent);\r\n    }\r\n}\r\n","<ng-container [ngSwitch]=\"field.controlType\" [formGroup]=\"form\">\r\n\r\n    <pep-address *ngSwitchCase=\"'address'\" [form]=\"form\" [key]=\"field.key\" [formattedValue]=\"field.formattedValue\"\r\n        [label]=\"field.label\" [required]=\"field.required\" [disabled]=\"field.disabled\" [readonly]=\"field.readonly\"\r\n        [xAlignment]=\"field.xAlignment\" [rowSpan]=\"field.rowSpan\" [groupFields]=\"field.groupFields\"\r\n        [layoutType]=\"layoutType\" (valueChanged)=\"onValueChanged($event)\">\r\n    </pep-address>\r\n\r\n    <pep-attachment *ngSwitchCase=\"'attachment'\" [form]=\"form\" [key]=\"field.key\" [src]=\"field.value\"\r\n        [label]=\"field.label\" [required]=\"field.required\" [disabled]=\"field.disabled\" [readonly]=\"field.readonly\"\r\n        [xAlignment]=\"field.xAlignment\" [rowSpan]=\"field.rowSpan\" [isActive]=\"isActive\" [showTitle]=\"showTitle\"\r\n        [layoutType]=\"layoutType\" (elementClicked)=\"onClick($event)\" (valueChanged)=\"onValueChanged($event)\">\r\n    </pep-attachment>\r\n\r\n    <pep-checkbox *ngSwitchCase=\"'checkbox'\" [form]=\"form\" [key]=\"field.key\" [value]=\"field.value\" [label]=\"field.label\"\r\n        [type]=\"field.type\" [required]=\"field.required\" [disabled]=\"field.disabled\" [readonly]=\"field.readonly\"\r\n        [xAlignment]=\"field.xAlignment\" [rowSpan]=\"field.rowSpan\" [additionalValue]=\"field.additionalValue\"\r\n        [showTitle]=\"showTitle\" [layoutType]=\"layoutType\" (valueChanged)=\"onValueChanged($event)\" [isActive]=\"isActive\">\r\n    </pep-checkbox>\r\n\r\n    <pep-date *ngSwitchCase=\"'date'\" [form]=\"form\" [key]=\"field.key\" [value]=\"field.value\"\r\n        [formattedValue]=\"field.formattedValue\" [label]=\"field.label\" [type]=\"field.type\" [required]=\"field.required\"\r\n        [disabled]=\"field.disabled\" [readonly]=\"field.readonly\" [textColor]=\"field.textColor\"\r\n        [xAlignment]=\"field.xAlignment\" [rowSpan]=\"field.rowSpan\" [minValue]=\"field.minValue\"\r\n        [maxValue]=\"field.maxValue\" [showTitle]=\"showTitle\" [layoutType]=\"layoutType\"\r\n        (valueChanged)=\"onValueChanged($event)\" [isActive]=\"isActive\">\r\n    </pep-date>\r\n\r\n    <pep-images-filmstrip *ngSwitchCase=\"'images'\" [objectId]=\"objectId\" [form]=\"form\" [key]=\"field.key\"\r\n        [label]=\"field.label\" [showTitle]=\"showTitle\" [value]=\"field.value\" [layoutType]=\"layoutType\">\r\n    </pep-images-filmstrip>\r\n\r\n    <pep-image *ngSwitchCase=\"'image'\" [objectId]=\"objectId\" [form]=\"form\" [key]=\"field.key\"\r\n        [src]=\"field.formattedValue\" [srcLarge]=\"field.value\" [options]=\"field.options\" [label]=\"field.label\"\r\n        [type]=\"field.type\" [required]=\"field.required\" [disabled]=\"field.disabled\" [readonly]=\"field.readonly\"\r\n        [xAlignment]=\"field.xAlignment\" [rowSpan]=\"field.rowSpan\" [indicatorsField]=\"field.indicatorsField\"\r\n        [menuField]=\"field.menuField\" [hasCampaignField]=\"field.hasCampaignField\" [sizeLimitMB]=\"field.sizeLimitMB\"\r\n        [isActive]=\"isActive\" [layoutType]=\"layoutType\" (elementClicked)=\"onClick($event)\"\r\n        (valueChanged)=\"onValueChanged($event)\">\r\n    </pep-image>\r\n\r\n    <pep-internal-button *ngSwitchCase=\"'button'\" [form]=\"form\" [key]=\"field.key\" [value]=\"field.value\"\r\n        [formattedValue]=\"field.formattedValue\" [label]=\"field.label\"\r\n        [referenceObjectInternalType]=\"field.referenceObjectInternalType\" [type]=\"field.type\"\r\n        [disabled]=\"field.disabled\" [readonly]=\"field.readonly\" [xAlignment]=\"field.xAlignment\"\r\n        [layoutType]=\"layoutType\" (elementClicked)=\"onClick($event)\" (valueChanged)=\"onValueChanged($event)\">\r\n    </pep-internal-button>\r\n\r\n    <!-- [hasSubMenu]=\"field.hasSubMenu\" -->\r\n    <pep-menu *ngSwitchCase=\"'menu'\" [key]=\"field.key\" [label]=\"field.label\" [disabled]=\"field.disabled\"\r\n        [xAlignment]=\"field.xAlignment\" [options]=\"field.options\" [layoutType]=\"layoutType\"\r\n        (elementClicked)=\"onClick($event)\" (notifyMenuItemClicked)=\"onMenuItemClicked($event)\">\r\n    </pep-menu>\r\n\r\n    <pep-quantity-selector *ngSwitchCase=\"'qs'\" [form]=\"form\" [key]=\"field.key\" [value]=\"field.value\"\r\n        [formattedValue]=\"field.formattedValue\" [label]=\"field.label\" [type]=\"field.type\" [required]=\"field.required\"\r\n        [disabled]=\"field.disabled\" [readonly]=\"field.readonly\" [textColor]=\"field.textColor\"\r\n        [xAlignment]=\"field.xAlignment\" [rowSpan]=\"field.rowSpan\" [lastFocusField]=\"field.lastFocusField\"\r\n        [alowDecimal]=\"field.alowDecimal\" [additionalValue]=\"field.additionalValue\"\r\n        [notificationInfo]=\"field.notificationInfo\" [isActive]=\"isActive\" [layoutType]=\"layoutType\"\r\n        [showTitle]=\"showTitle\" (valueChanged)=\"onValueChanged($event)\"\r\n        (formValidationChanged)=\"onFormValidationChanged($event)\" (elementClicked)=\"onClick($event)\">\r\n    </pep-quantity-selector>\r\n\r\n    <pep-rich-html-textarea *ngSwitchCase=\"'richhtmltextarea'\" [form]=\"form\" [key]=\"field.key\" [value]=\"field.value\"\r\n        [label]=\"field.label\" [required]=\"field.required\" [disabled]=\"field.disabled\" [readonly]=\"field.readonly\"\r\n        [maxFieldCharacters]=\"field.maxFieldCharacters\" [xAlignment]=\"field.xAlignment\" [rowSpan]=\"field.rowSpan\"\r\n        [showTitle]=\"showTitle\" [layoutType]=\"layoutType\" (valueChanged)=\"onValueChanged($event)\" [isActive]=\"isActive\">\r\n    </pep-rich-html-textarea>\r\n\r\n    <pep-select *ngSwitchCase=\"'select'\" [form]=\"form\" [key]=\"field.key\" [value]=\"field.value\"\r\n        [formattedValue]=\"field.formattedValue\" [label]=\"field.label\" [type]=\"field.type\" [required]=\"field.required\"\r\n        [disabled]=\"field.disabled\" [readonly]=\"field.readonly\" [xAlignment]=\"field.xAlignment\"\r\n        [rowSpan]=\"field.rowSpan\" [options]=\"field.options\" [showTitle]=\"showTitle\" [layoutType]=\"layoutType\"\r\n        (valueChanged)=\"onValueChanged($event)\" (formValidationChanged)=\"onFormValidationChanged($event)\"\r\n        [isActive]=\"isActive\">\r\n    </pep-select>\r\n\r\n    <pep-separator *ngSwitchCase=\"'separator'\" [form]=\"form\" [key]=\"field.key\" [label]=\"field.label\"\r\n        [xAlignment]=\"field.xAlignment\" [layoutType]=\"layoutType\">\r\n    </pep-separator>\r\n\r\n    <pep-signature *ngSwitchCase=\"'signature'\" [form]=\"form\" [key]=\"field.key\" [src]=\"field.value\" [label]=\"field.label\"\r\n        [required]=\"field.required\" [disabled]=\"field.disabled\" [readonly]=\"field.readonly\"\r\n        [xAlignment]=\"field.xAlignment\" [rowSpan]=\"field.rowSpan\" [isActive]=\"isActive\" [layoutType]=\"layoutType\"\r\n        (valueChanged)=\"onValueChanged($event)\">\r\n    </pep-signature>\r\n\r\n    <pep-textarea *ngSwitchCase=\"'textarea'\" [form]=\"form\" [key]=\"field.key\" [value]=\"field.value\" [label]=\"field.label\"\r\n        [required]=\"field.required\" [disabled]=\"field.disabled\" [readonly]=\"field.readonly\"\r\n        [maxFieldCharacters]=\"field.maxFieldCharacters\" [textColor]=\"field.textColor\" [xAlignment]=\"field.xAlignment\"\r\n        [rowSpan]=\"field.rowSpan\" [lastFocusField]=\"field.lastFocusField\" [showTitle]=\"showTitle\"\r\n        [layoutType]=\"layoutType\" (valueChanged)=\"onValueChanged($event)\" [isActive]=\"isActive\">\r\n    </pep-textarea>\r\n\r\n    <pep-textbox *ngSwitchCase=\"'textbox'\" [form]=\"form\" [key]=\"field.key\" [value]=\"field.value\"\r\n        [formattedValue]=\"field.formattedValue\" [label]=\"field.label\" [placeholder]=\"field.placeholder\"\r\n        [type]=\"field.type\" [required]=\"field.required\" [disabled]=\"field.disabled\" [readonly]=\"field.readonly\"\r\n        [maxFieldCharacters]=\"field.maxFieldCharacters\" [textColor]=\"field.textColor\" [xAlignment]=\"field.xAlignment\"\r\n        [rowSpan]=\"field.rowSpan\" [lastFocusField]=\"field.lastFocusField\" [showTitle]=\"showTitle\"\r\n        [layoutType]=\"layoutType\" (valueChanged)=\"onValueChanged($event)\"\r\n        (formValidationChanged)=\"onFormValidationChanged($event)\" [isActive]=\"isActive\">\r\n    </pep-textbox>\r\n\r\n    <pep-indicators *ngSwitchCase=\"'indicators'\" [key]=\"field.key\" [value]=\"field.value\" [layoutType]=\"layoutType\">\r\n    </pep-indicators>\r\n    <pep-internal-page *ngSwitchCase=\"'internalPage'\" [hasHeightLimit]=\"hasHeightLimit\" [field]=\"field\"\r\n        [layoutType]=\"layoutType\" (childClicked)=\"onChildClick($event)\" (childChanged)=\"onChildChanged($event)\">\r\n    </pep-internal-page>\r\n\r\n    <ng-container *ngSwitchCase=\"'placeholder'\">\r\n    </ng-container>\r\n</ng-container>","import {\r\n    Component, OnChanges, Input, Output, EventEmitter,\r\n    ViewEncapsulation, ChangeDetectionStrategy, OnDestroy\r\n} from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { LAYOUT_TYPE } from '@pepperi-addons/ngx-lib';\r\n\r\n@Component({\r\n    selector: 'pep-field-generator',\r\n    templateUrl: './field-generator.component.html',\r\n    styleUrls: ['./field-generator.component.scss'],\r\n    encapsulation: ViewEncapsulation.Emulated,\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PepperiFieldGeneratorComponent implements OnChanges, OnDestroy {\r\n    @Input() field: any;\r\n    @Input() hasHeightLimit = false;\r\n    @Input() isActive = false;\r\n    @Input() objectId: any = null;\r\n    @Input() form: FormGroup;\r\n    @Input() layoutType: LAYOUT_TYPE = LAYOUT_TYPE.PepperiForm;\r\n    @Input() showTitle = true;\r\n\r\n    @Input() checkForChanges: any = null;\r\n    @Output() valueChanged: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() childChanged: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() formValidationChanged: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n    @Output() elementClicked: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() notifyMenuItemClicked: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() notifyChildClicked: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    get isValid(): boolean {\r\n        if (this.field.readonly || this.field.disabled) {\r\n            return true;\r\n        } else {\r\n            const formControl = this.form && this.form.get(this.field.key);\r\n\r\n            if (formControl) {\r\n                return formControl.valid;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n\r\n    get isTouched(): boolean {\r\n        const formControl = this.form && this.form.get(this.field.key);\r\n        return formControl ? formControl.touched : false;\r\n    }\r\n\r\n    get isDirty(): boolean {\r\n        const formControl = this.form && this.form.get(this.field.key);\r\n        return formControl ? formControl.dirty : false;\r\n    }\r\n\r\n    constructor() { }\r\n\r\n    ngOnDestroy(): void {\r\n        if (this.valueChanged) { this.valueChanged.unsubscribe(); }\r\n\r\n        if (this.formValidationChanged) { this.formValidationChanged.unsubscribe(); }\r\n\r\n        if (this.childChanged) { this.childChanged.unsubscribe(); }\r\n\r\n        if (this.elementClicked) { this.elementClicked.unsubscribe(); }\r\n\r\n        if (this.notifyMenuItemClicked) { this.notifyMenuItemClicked.unsubscribe(); }\r\n\r\n        if (this.notifyChildClicked) { this.notifyChildClicked.unsubscribe(); }\r\n    }\r\n\r\n    onValueChanged(valueChanged: any): void {\r\n        this.valueChanged.emit(valueChanged);\r\n    }\r\n\r\n    onChildChanged(childChanged: any): void {\r\n        this.childChanged.emit(childChanged);\r\n    }\r\n\r\n    onFormValidationChanged(formValidationChanged: any): void {\r\n        this.formValidationChanged.emit(formValidationChanged);\r\n    }\r\n\r\n    onClick(fieldClicked: any): void {\r\n        this.elementClicked.emit(fieldClicked);\r\n    }\r\n\r\n    onMenuItemClicked(fieldToEdit: any): void {\r\n        this.notifyMenuItemClicked.emit(fieldToEdit);\r\n    }\r\n\r\n    onChildClick(childClicked: any): void {\r\n        this.notifyChildClicked.emit(childClicked);\r\n    }\r\n\r\n    ngOnChanges(changes: any): void {\r\n        // debugger;\r\n        // TODO: Remove it only for testing.\r\n        // this.field.disabled = this.field.readonly = false;\r\n    }\r\n}\r\n","<fieldset *ngIf=\"form\" [formGroup]=\"form\" [disabled]=\"isLocked\" class=\"pepperi-form\"\r\n    [ngStyle]=\"{ 'background-color': layoutType == LAYOUT_TYPE.PepperiCard && pepperiObjectInput?.Data?.BackgroundColor }\"\r\n    [ngClass]=\"{\r\n        'material-form': layoutType == LAYOUT_TYPE.PepperiForm,\r\n        cardView: isCardView == true\r\n    }\">\r\n    <!-- New Form -->\r\n    <mat-grid-list *ngIf=\"layoutType == LAYOUT_TYPE.PepperiForm\" [cols]=\"columns\" [rowHeight]=\"rowHeight + 'rem'\"\r\n        [gutterSize]=\"formGutterSize\">\r\n        <mat-grid-tile *ngFor=\"let field of fields\" [rowspan]=\"field.rowSpan\" [colspan]=\"field.colSpan\">\r\n            <pep-field-generator *ngIf=\"field.controlType != 'placeholder'\" [form]=\"form\" [layoutType]=\"layoutType\"\r\n                [checkForChanges]=\"checkForChanges\" [objectId]=\"pepperiObjectInput.Data.UID\"\r\n                [hasHeightLimit]=\"!matrixIsLast\" [field]=\"field\" [showTitle]=\"showTitle\"\r\n                (valueChanged)=\"onValueChanged($event)\" (notifyChildClicked)=\"onChildClicked($event)\"\r\n                (childChanged)=\"onChildChanged($event)\" (elementClicked)=\"onClick($event)\"\r\n                (notifyMenuItemClicked)=\"onMenuItemClicked($event)\"\r\n                (formValidationChanged)=\"onFormValidationChanged($event)\">\r\n            </pep-field-generator>\r\n        </mat-grid-tile>\r\n    </mat-grid-list>\r\n\r\n    <!-- Thumbnails -->\r\n    <mat-grid-list *ngIf=\"layoutType == LAYOUT_TYPE.PepperiCard\" [cols]=\"columns\" [rowHeight]=\"rowHeight + 'rem'\"\r\n        [gutterSize]=\"cardGutterSize\" class=\"card-spacing\" [ngClass]=\"{ 'lock-events': lockEvents }\">\r\n        <mat-grid-tile *ngFor=\"let field of fields\" [rowspan]=\"field.rowSpan\" [colspan]=\"field.colSpan\"\r\n            [ngStyle]=\"{ overflow: field.type == 'qs' ? 'unset' : 'hidden' }\">\r\n            <pep-field-generator *ngIf=\"field.controlType != 'placeholder'\" [form]=\"form\" [layoutType]=\"layoutType\"\r\n                [isActive]=\"isActive\" [checkForChanges]=\"checkForChanges\" [objectId]=\"pepperiObjectInput.Data.UID\"\r\n                [hasHeightLimit]=\"!matrixIsLast\" [field]=\"field\" [showTitle]=\"showTitle\"\r\n                (valueChanged)=\"onValueChanged($event)\" (notifyChildClicked)=\"onChildClicked($event)\"\r\n                (childChanged)=\"onChildChanged($event)\" (elementClicked)=\"onClick($event)\"\r\n                (notifyMenuItemClicked)=\"onMenuItemClicked($event)\">\r\n            </pep-field-generator>\r\n        </mat-grid-tile>\r\n    </mat-grid-list>\r\n\r\n    <ng-container *ngIf=\"layoutType == LAYOUT_TYPE.PepperiTable\">\r\n        <ng-container *ngIf=\"isReport; then reportBlock; else notReportBlock\"></ng-container>\r\n        <ng-template #reportBlock>\r\n            <ng-container *ngTemplateOutlet=\"report\"></ng-container>\r\n        </ng-template>\r\n        <ng-template #notReportBlock>\r\n            <div *ngFor=\"let field of fields; let j = index\" class=\"pull-left flip table-cell \"\r\n                [ngClass]=\"['text-align-' + field.xAlignment]\" style=\"height: 100%\"\r\n                [ngStyle]=\"{ width: (uiControlHeader?.ControlFields)[j]?.calcColumnWidthString}\">\r\n                <pep-field-generator *ngIf=\"field.controlType != 'placeholder'\" [checkForChanges]=\"checkForChanges\"\r\n                    [objectId]=\"pepperiObjectInput.Data.UID\" [field]=\"field\" (valueChanged)=\"onValueChanged($event)\"\r\n                    (elementClicked)=\"onClick($event)\" (notifyMenuItemClicked)=\"onMenuItemClicked($event)\" [form]=\"form\"\r\n                    [layoutType]=\"layoutType\" [showTitle]=\"false\" [isActive]=\"isActive\">\r\n                </pep-field-generator>\r\n            </div>\r\n        </ng-template>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"layoutType == LAYOUT_TYPE.Editmodal\">\r\n        <div *ngFor=\"let field of fields; let j = index\" class=\"pull-left flip\" style=\"width:100%;\">\r\n            <pep-field-generator *ngIf=\"field.controlType != 'placeholder'\" [checkForChanges]=\"checkForChanges\"\r\n                [objectId]=\"pepperiObjectInput.Data.UID\" [field]=\"field\" (valueChanged)=\"onValueChanged($event)\"\r\n                (elementClicked)=\"onClick($event)\" [form]=\"form\" [layoutType]=\"layoutType\" [showTitle]=\"false\"\r\n                [isActive]=\"isActive\">\r\n            </pep-field-generator>\r\n        </div>\r\n    </ng-container>\r\n\r\n    <!------- For testing ------------\r\n    {{ form.value | json }}\r\n    {{ form.valid }}\r\n    ---------------------------------->\r\n</fieldset>\r\n\r\n<ng-template #report>\r\n    <div *ngFor=\"let field of fields; let j = index\" class=\"pull-left flip pepperi-report-fields\"\r\n        [ngStyle]=\"{ width: (uiControlHeader?.ControlFields)[j]?.calcColumnWidthString }\"\r\n        [ngClass]=\"['text-align-' + field.xAlignment]\">\r\n        <ng-container [ngSwitch]=\"field.controlType\">\r\n            <pep-image *ngSwitchCase=\"'image'\" [objectId]=\"objectId\" [form]=\"form\" [key]=\"field.key\"\r\n                [src]=\"field.formattedValue\" [srcLarge]=\"field.value\" [options]=\"field.options\" [label]=\"field.label\"\r\n                [type]=\"field.type\" [required]=\"field.required\" [disabled]=\"field.disabled\" [readonly]=\"field.readonly\"\r\n                [xAlignment]=\"field.xAlignment\" [rowSpan]=\"field.rowSpan\" [layoutType]=\"layoutType\"\r\n                (elementClicked)=\"onClick($event)\">\r\n            </pep-image>\r\n\r\n            <pep-signature *ngSwitchCase=\"'signature'\" [form]=\"form\" [key]=\"field.key\" [src]=\"field.value\"\r\n                [label]=\"field.label\" [required]=\"field.required\" [disabled]=\"field.disabled\"\r\n                [readonly]=\"field.readonly\" [xAlignment]=\"field.xAlignment\" [rowSpan]=\"field.rowSpan\"\r\n                [layoutType]=\"layoutType\">\r\n            </pep-signature>\r\n\r\n            <pep-checkbox *ngSwitchCase=\"'checkbox'\" [form]=\"form\" [key]=\"field.key\" [value]=\"field.value\"\r\n                [label]=\"field.label\" [type]=\"field.type\" [required]=\"field.required\" [disabled]=\"field.disabled\"\r\n                [readonly]=\"field.readonly\" [xAlignment]=\"field.xAlignment\" [rowSpan]=\"field.rowSpan\"\r\n                [additionalValue]=\"field.additionalValue\" [layoutType]=\"layoutType\">\r\n            </pep-checkbox>\r\n\r\n            <pep-internal-button *ngSwitchCase=\"'button'\" [form]=\"form\" [key]=\"field.key\" [value]=\"field.value\"\r\n                [formattedValue]=\"field.formattedValue\" [label]=\"field.label\" [type]=\"field.type\"\r\n                [disabled]=\"field.disabled\" [readonly]=\"field.readonly\" [xAlignment]=\"field.xAlignment\"\r\n                [layoutType]=\"layoutType\" (elementClicked)=\"onClick($event)\">\r\n            </pep-internal-button>\r\n\r\n            <pep-textarea *ngSwitchCase=\"'textarea'\" [form]=\"form\" [key]=\"field.key\" [value]=\"field.value\"\r\n                [label]=\"field.label\" [required]=\"field.required\" [disabled]=\"field.disabled\"\r\n                [readonly]=\"field.readonly\" [maxFieldCharacters]=\"field.maxFieldCharacters\"\r\n                [textColor]=\"field.textColor\" [xAlignment]=\"field.xAlignment\" [rowSpan]=\"field.rowSpan\"\r\n                [layoutType]=\"layoutType\">\r\n            </pep-textarea>\r\n\r\n            <pep-quantity-selector *ngSwitchCase=\"'qs'\" [id]=\"field.key\" [form]=\"form\" [key]=\"field.key\"\r\n                [value]=\"field.value\" [formattedValue]=\"field.formattedValue\" [label]=\"field.label\" [type]=\"field.type\"\r\n                [required]=\"field.required\" [disabled]=\"field.disabled\" [readonly]=\"field.readonly\"\r\n                [textColor]=\"field.textColor\" [xAlignment]=\"field.xAlignment\" [rowSpan]=\"field.rowSpan\"\r\n                [layoutType]=\"layoutType\" (valueChanged)=\"onValueChanged($event)\" (elementClicked)=\"onClick($event)\">\r\n            </pep-quantity-selector>\r\n\r\n            <ng-container *ngSwitchDefault>\r\n                <ng-container *ngIf=\"field.formattedValue?.length > 0; then notEmptyBlock; else emptyBlock\">\r\n                </ng-container>\r\n                <ng-template #notEmptyBlock>\r\n                    <ng-container\r\n                        *ngIf=\"field.type === 'attachment' || field.type === 'link'; then linkBlock; else notLinkBlock\">\r\n                    </ng-container>\r\n                    <ng-template #linkBlock>\r\n                        <a [id]=\"field.key\" class=\"color-link body-sm pepperi-report-input readonly\"\r\n                            *ngIf=\"field.formattedValue != null\" title=\"{{ field.formattedValue }}\" target=\"_blank\"\r\n                            href=\"{{ field.value }}\">{{ field.formattedValue }}</a>\r\n                    </ng-template>\r\n                    <ng-template #notLinkBlock>\r\n                        <span [id]=\"field.key\" class=\"body-sm pepperi-report-input readonly\"\r\n                            title=\"{{ field.formattedValue }}\"\r\n                            [ngStyle]=\"{ color: field.textColor }\">{{ field.formattedValue }}</span>\r\n                    </ng-template>\r\n                </ng-template>\r\n                <ng-template #emptyBlock>\r\n                    <span>&nbsp;</span>\r\n                </ng-template>\r\n            </ng-container>\r\n        </ng-container>\r\n    </div>\r\n</ng-template>","import {\r\n    Component, ChangeDetectionStrategy, OnInit, OnDestroy,\r\n    Input, KeyValueDiffers, Output, EventEmitter, OnChanges, DoCheck\r\n} from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, AbstractControl } from '@angular/forms';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { DialogService, DialogData, DialogDataType } from '@pepperi-addons/ngx-lib/dialog';\r\nimport { Subscription } from 'rxjs';\r\nimport {\r\n    PepperiFieldClickedData,\r\n    PepperiObjectChangedData,\r\n    LAYOUT_TYPE,\r\n    FIELD_TYPE,\r\n    CustomizationService,\r\n    UIControl,\r\n    UIControlField,\r\n    ObjectSingleData,\r\n    ObjectsDataRowCell,\r\n    PepperiFieldBase,\r\n    PepperiTextboxField,\r\n    PepperiSelectField,\r\n    PepperiMenuField,\r\n    PepperiQuantitySelectorField,\r\n    PepperiAddressField,\r\n    PepperiIndicatorsField,\r\n    PepperiInternalPageField,\r\n    PepperiButtonField,\r\n    PepperiAttachmentField,\r\n    PepperiSignatureField,\r\n    PepperiImageField,\r\n    PepperiImagesField,\r\n    PepperiTextareaField,\r\n    PepperiRichHtmlTextareaField,\r\n    PepperiDateField,\r\n    PepperiCheckboxField,\r\n    PepperiSeparatorField,\r\n    PepperiPlaceholderField,\r\n} from '@pepperi-addons/ngx-lib';\r\n\r\n// tslint:disable-next-line: no-conflicting-lifecycle\r\n@Component({\r\n    selector: 'pep-form',\r\n    templateUrl: './form.component.html',\r\n    styleUrls: ['./form.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PepperiFormComponent implements OnInit, DoCheck, OnChanges, OnDestroy {\r\n    @Input() isReport = false;\r\n    @Input() uiControlHeader: UIControl;\r\n    @Input() lockEvents = false;\r\n    @Input() canEditObject = true;\r\n    @Input() pepperiObjectInput: ObjectSingleData;\r\n    @Input() isActive = false;\r\n    @Input() layoutType: LAYOUT_TYPE = LAYOUT_TYPE.PepperiForm;\r\n    @Input() listType = '';\r\n    @Input() objectId = '0';\r\n    @Input() parentId = '0';\r\n    @Input() searchCode = '0';\r\n    @Input() showTitle = true;\r\n    @Input() firstFieldAsLink = false;\r\n    @Input() isCardView = false;\r\n    @Input() checkForChanges: any = null;\r\n    @Input() pageType = '';\r\n\r\n    @Output() notifyValueChanged: EventEmitter<PepperiObjectChangedData> = new EventEmitter<PepperiObjectChangedData>();\r\n    @Output() formValidationChanged: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n    @Output() childClicked: EventEmitter<void> = new EventEmitter<void>();\r\n    @Output() childChanged: EventEmitter<void> = new EventEmitter<void>();\r\n    @Output() notifyFieldClicked: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() notifyMenuItemClicked: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    LAYOUT_TYPE = LAYOUT_TYPE;\r\n    isLocked = false;\r\n    formGutterSize;\r\n    cardGutterSize;\r\n    rowHeight;\r\n    lastFocusedField: any;\r\n    matrixIsLast = false;\r\n    // lastUpdatedFieldApiName: string = '';\r\n    form: FormGroup;\r\n    differ: any;\r\n\r\n    // payLoad = '';\r\n    rows: Array<PepperiFieldBase[]> = [];\r\n    fields: PepperiFieldBase[] = [];\r\n    columns = 1;\r\n\r\n    hasMenuFloatingOnOtherField = false;\r\n    menuField: any;\r\n    menuDataField: any;\r\n    hasCampaignField: any;\r\n    hasCampaignDataField: any;\r\n    indicatorsField: any;\r\n    indicatorsDataField: any = null;\r\n\r\n    shouldReloadForm = false;\r\n    eventServiceSub: Subscription;\r\n\r\n    public jsonLib = JSON;\r\n\r\n    static convertAddressFields(controlField: any, addressFields: Array<ObjectsDataRowCell>, canEditObject: boolean): PepperiFieldBase[] {\r\n        const fields: PepperiFieldBase[] = [];\r\n\r\n        addressFields.forEach(field => {\r\n            let customField: PepperiFieldBase;\r\n            const placeholder = field.ApiName;\r\n\r\n            if (field.ApiName.toLowerCase().indexOf('street') >= 0) {\r\n                customField = new PepperiTextboxField({\r\n                    key: field.ApiName,\r\n                    label: field.ApiName,\r\n                    type: 'text',\r\n                    placeholder,\r\n                    readonly: !canEditObject,\r\n                    disabled: !field.Enabled || !canEditObject,\r\n                    hidden: false,\r\n                    required: false,\r\n                    value: field.Value,\r\n                    formattedValue: field.FormattedValue,\r\n                    row: 0,\r\n                    rowSpan: 1,\r\n                    col: 0,\r\n                    colSpan: 2,\r\n                    xAlignment: controlField.Layout.XAlignment,\r\n                    yAlignment: controlField.Layout.YAlignment,\r\n                    order: 0\r\n                });\r\n            } else if (field.ApiName.toLowerCase().indexOf('city') >= 0) {\r\n                customField = new PepperiTextboxField({\r\n                    key: field.ApiName,\r\n                    label: field.ApiName,\r\n                    type: 'text',\r\n                    placeholder,\r\n                    readonly: !canEditObject,\r\n                    disabled: !field.Enabled || !canEditObject,\r\n                    hidden: false,\r\n                    required: false,\r\n                    value: field.Value,\r\n                    formattedValue: field.FormattedValue,\r\n                    row: 0,\r\n                    rowSpan: 1,\r\n                    col: 2,\r\n                    colSpan: 1,\r\n                    xAlignment: controlField.Layout.XAlignment,\r\n                    yAlignment: controlField.Layout.YAlignment,\r\n                    order: 1\r\n                });\r\n            } else if (field.ApiName.toLowerCase().indexOf('state') >= 0) {\r\n                customField = new PepperiSelectField({\r\n                    key: field.ApiName,\r\n                    label: field.ApiName,\r\n                    placeholder,\r\n                    options: field.OptionalValues,\r\n                    readonly: !canEditObject,\r\n                    disabled: !field.Enabled || !canEditObject,\r\n                    hidden: false,\r\n                    required: false,\r\n                    value: field.Value,\r\n                    formattedValue: field.FormattedValue,\r\n                    row: 1,\r\n                    rowSpan: 1,\r\n                    col: 0,\r\n                    colSpan: 1,\r\n                    xAlignment: controlField.Layout.XAlignment,\r\n                    yAlignment: controlField.Layout.YAlignment,\r\n                    order: 2\r\n                });\r\n            } else if (field.ApiName.toLowerCase().indexOf('zipcode') >= 0) {\r\n                customField = new PepperiTextboxField({\r\n                    key: field.ApiName,\r\n                    label: field.ApiName,\r\n                    type: 'text',\r\n                    placeholder,\r\n                    readonly: !canEditObject,\r\n                    disabled: !field.Enabled || !canEditObject,\r\n                    hidden: false,\r\n                    required: false,\r\n                    value: field.Value,\r\n                    formattedValue: field.FormattedValue,\r\n                    row: 1,\r\n                    rowSpan: 1,\r\n                    col: 1,\r\n                    colSpan: 1,\r\n                    xAlignment: controlField.Layout.XAlignment,\r\n                    yAlignment: controlField.Layout.YAlignment,\r\n                    order: 3\r\n                });\r\n            } else if (field.ApiName.toLowerCase().indexOf('country') >= 0) {\r\n                customField = new PepperiSelectField({\r\n                    key: field.ApiName,\r\n                    label: field.ApiName,\r\n                    placeholder,\r\n                    options: field.OptionalValues,\r\n                    readonly: !canEditObject,\r\n                    disabled: !field.Enabled || !canEditObject,\r\n                    hidden: false,\r\n                    required: false,\r\n                    value: field.Value,\r\n                    formattedValue: field.FormattedValue,\r\n                    row: 2,\r\n                    rowSpan: 1,\r\n                    col: 2,\r\n                    colSpan: 1,\r\n                    xAlignment: controlField.Layout.XAlignment,\r\n                    yAlignment: controlField.Layout.YAlignment,\r\n                    order: 4\r\n                });\r\n            }\r\n\r\n            fields.push(customField);\r\n        });\r\n\r\n        return fields.sort((n1, n2) => (n1.order > n2.order ? 1 : n1.order < n2.order ? -1 : 0));\r\n    }\r\n\r\n    static isMatrixField(apiNameToCheck: string): boolean {\r\n        return apiNameToCheck.indexOf('Matrix') >= 0;\r\n    }\r\n\r\n    public static doesFieldHavaFloatingField(controlField: any, floatingField: any): boolean {\r\n        let hasFloatingField = false;\r\n        if (\r\n            floatingField.Layout.Y >= controlField.Layout.Y &&\r\n            floatingField.Layout.Y < controlField.Layout.Y + controlField.Layout.Height &&\r\n            floatingField.Layout.X >= controlField.Layout.X &&\r\n            floatingField.Layout.X < controlField.Layout.X + controlField.Layout.Width\r\n        ) {\r\n            hasFloatingField = true;\r\n        }\r\n\r\n        return hasFloatingField;\r\n    }\r\n\r\n    public static getOptionsForCustomField(controlField: any, dataField: any, canEditObject: boolean): any {\r\n        if (!controlField || !dataField) { return; }\r\n\r\n        const placeholder = controlField.ReadOnly || !canEditObject ? '' : controlField.Title;\r\n\r\n        return {\r\n            key: controlField.ApiName,\r\n            label: controlField.Title,\r\n            type: 'text',\r\n            accessory: dataField.Accessory,\r\n            placeholder,\r\n            readonly: controlField.ReadOnly || !canEditObject,\r\n            disabled: !dataField.Enabled || !canEditObject,\r\n            hidden: controlField.Hidden,\r\n            required: controlField.Mandatory,\r\n            value: dataField.Value,\r\n            formattedValue: dataField.FormattedValue,\r\n            additionalValue: dataField.AdditionalValue,\r\n            row: controlField.Layout.Y,\r\n            rowSpan: controlField.Layout.Height,\r\n            col: controlField.Layout.X,\r\n            colSpan: controlField.Layout.Width,\r\n            xAlignment: controlField.Layout.XAlignment,\r\n            yAlignment: controlField.Layout.YAlignment,\r\n            options: dataField.OptionalValues,\r\n            groupFields: undefined,\r\n            maxFieldCharacters: controlField.MaxFieldCharacters,\r\n            minValue: controlField.MinValue,\r\n            maxValue: controlField.MaxValue,\r\n            // hasMenu: hasMenu,\r\n            // hasCampaign: hasCampaign,\r\n            // hasIndicators: hasIndicators,\r\n            textColor: dataField.TextColor,\r\n            notificationInfo: dataField.NotificationInfo\r\n        };\r\n    }\r\n\r\n    public static convertToCustomField(controlField: any, dataField: any, canEditObject: boolean,\r\n        menuField: any, hasCampaignField: any, indicatorsField: any,\r\n        objectId: any, parentId: any, searchCode: any): PepperiFieldBase {\r\n        let customField: PepperiFieldBase;\r\n        const options = PepperiFormComponent.getOptionsForCustomField(controlField, dataField, canEditObject);\r\n\r\n        if (controlField.ApiName === 'ObjectMenu') {\r\n            options.type = 'menu';\r\n\r\n            if (dataField.TransactionItemType === 1 && dataField.OptionalValues.length > 0) {\r\n                const subMenuOptions = [{ Key: 'EditPackage', Value: 'Edit' }, { Key: 'DeletePackage', Value: 'Delete' }];\r\n                options.options = subMenuOptions.filter(option => option && dataField.OptionalValues.includes(option.Key));\r\n            }\r\n            else {\r\n                options.options = null;\r\n            }\r\n\r\n            customField = new PepperiMenuField(options);\r\n        } else if (controlField.ApiName === 'QuantitySelector' ||\r\n            controlField.ApiName === 'UnitsQuantity' ||\r\n            controlField.ApiName.indexOf('size_') === 0) {\r\n            if (dataField.FieldType === FIELD_TYPE.InternalLink) {\r\n                options.type = 'button';\r\n            } else if (dataField.FieldType === FIELD_TYPE.Package) {\r\n                options.type = 'packageButton';\r\n            } else if (dataField.FieldType === FIELD_TYPE.NumberRealQuantitySelector ||\r\n                dataField.FieldType === FIELD_TYPE.NumberReal) {\r\n                options.type = 'qs';\r\n                options.alowDecimal = true;\r\n            } else if (dataField.FieldType === FIELD_TYPE.NumberIntegerQuantitySelector ||\r\n                dataField.FieldType === FIELD_TYPE.NumberInteger) {\r\n                options.type = 'qs';\r\n                options.alowDecimal = false;\r\n            } else if (dataField.FieldType === FIELD_TYPE.NumberIntegerForMatrix) {\r\n                options.type = 'qsForMatrix';\r\n                options.alowDecimal = false;\r\n            } else if (dataField.FieldType === FIELD_TYPE.NumberRealForMatrix) {\r\n                options.type = 'qsForMatrix';\r\n                options.alowDecimal = true;\r\n            }\r\n\r\n            customField = new PepperiQuantitySelectorField(options);\r\n        } else {\r\n            // Hack need to remove this..\r\n            if (dataField.FieldType === FIELD_TYPE.Indicators && PepperiFormComponent.isMatrixField(dataField.ApiName)) {\r\n                dataField.FieldType = FIELD_TYPE.InternalPage;\r\n            }\r\n\r\n            switch (dataField.FieldType) {\r\n                case FIELD_TYPE.Address: {\r\n                    const canEditGroupObject = controlField.ReadOnly ? false : canEditObject;\r\n                    options.groupFields = PepperiFormComponent.convertAddressFields(controlField,\r\n                        dataField.GroupFields, canEditGroupObject);\r\n                    customField = new PepperiAddressField(options);\r\n                    break;\r\n                }\r\n                case FIELD_TYPE.Indicators: {\r\n                    // options['type'] = 'indicators'; // Not needed this is PepperiIndicatorsField.\r\n                    customField = new PepperiIndicatorsField(options);\r\n                    break;\r\n                }\r\n                case FIELD_TYPE.InternalPage: {\r\n                    if (PepperiFormComponent.isMatrixField(controlField.ApiName)) {\r\n                        options.rowSpan = controlField.Layout.Height;\r\n                        options.objectId = objectId;\r\n                        options.parentId = parentId;\r\n                        options.searchCode = searchCode;\r\n\r\n                        customField = new PepperiInternalPageField(options);\r\n                    } else {\r\n                        // Not supported\r\n                    }\r\n                    break;\r\n                }\r\n                case FIELD_TYPE.Link: {\r\n                    options.type = 'link';\r\n                    customField = new PepperiTextboxField(options);\r\n\r\n                    // DI-11292 - add changes for link field for the \"Read Only display value\" prop\r\n                    customField.formattedValue = customField.disabled && customField.formattedValue !== '' &&\r\n                        customField.value !== '' ? customField.formattedValue : customField.value;\r\n\r\n                    break;\r\n                }\r\n                case FIELD_TYPE.InternalLink:\r\n                case FIELD_TYPE.Button: {\r\n                    options.type = 'button';\r\n                    customField = new PepperiButtonField(options);\r\n                    break;\r\n                }\r\n                case FIELD_TYPE.Attachment: {\r\n                    options.type = 'attachment';\r\n                    customField = new PepperiAttachmentField(options);\r\n                    break;\r\n                }\r\n                case FIELD_TYPE.Signature: {\r\n                    options.type = 'signature';\r\n                    customField = new PepperiSignatureField(options);\r\n                    break;\r\n                }\r\n                case FIELD_TYPE.Image:\r\n                case FIELD_TYPE.ImageURL: {\r\n                    options.type = 'image';\r\n                    options.menuField = menuField && this.doesFieldHavaFloatingField(controlField, menuField) ? menuField : null;\r\n                    options.hasCampaignField = hasCampaignField &&\r\n                        this.doesFieldHavaFloatingField(controlField, hasCampaignField) ? hasCampaignField : null;\r\n                    options.indicatorsField = indicatorsField &&\r\n                        this.doesFieldHavaFloatingField(controlField, indicatorsField) ? indicatorsField : null;\r\n\r\n                    customField = new PepperiImageField(options);\r\n                    break;\r\n                }\r\n                case FIELD_TYPE.Images: {\r\n                    options.type = 'images';\r\n                    customField = new PepperiImagesField(options);\r\n                    break;\r\n                }\r\n                case FIELD_TYPE.Email: {\r\n                    options.type = 'email';\r\n                    customField = new PepperiTextboxField(options);\r\n                    break;\r\n                }\r\n                case FIELD_TYPE.Phone: {\r\n                    options.type = 'phone';\r\n                    customField = new PepperiTextboxField(options);\r\n                    break;\r\n                }\r\n                case FIELD_TYPE.Duration: {\r\n                    options.type = 'duration';\r\n                    customField = new PepperiTextboxField(options);\r\n                    break;\r\n                }\r\n                case FIELD_TYPE.Default:\r\n                case FIELD_TYPE.TextBox:\r\n                case FIELD_TYPE.LimitedLengthTextBox:\r\n                case FIELD_TYPE.TextHeader:\r\n                case FIELD_TYPE.CalculatedString:\r\n                case FIELD_TYPE.MapDataString: {\r\n                    customField = new PepperiTextboxField(options);\r\n                    break;\r\n                }\r\n                case FIELD_TYPE.TextArea: {\r\n                    customField = new PepperiTextareaField(options);\r\n                    break;\r\n                }\r\n\r\n                case FIELD_TYPE.RichTextHTML: {\r\n                    customField = new PepperiRichHtmlTextareaField(options);\r\n                    break;\r\n                }\r\n                case FIELD_TYPE.Date:\r\n                case FIELD_TYPE.LimitedDate:\r\n                case FIELD_TYPE.CalculatedDate:\r\n                case FIELD_TYPE.DateAndTime: {\r\n                    options.type = dataField.FieldType === FIELD_TYPE.DateAndTime ? 'datetime' : 'date';\r\n                    customField = new PepperiDateField(options);\r\n                    break;\r\n                }\r\n                case FIELD_TYPE.NumberInteger:\r\n                case FIELD_TYPE.CalculatedInt:\r\n                case FIELD_TYPE.MapDataInt: {\r\n                    options.type = 'int';\r\n                    customField = new PepperiTextboxField(options);\r\n                    break;\r\n                }\r\n                case FIELD_TYPE.Percentage: {\r\n                    options.type = 'percentage';\r\n                    customField = new PepperiTextboxField(options);\r\n                    break;\r\n                }\r\n                case FIELD_TYPE.Currency: {\r\n                    options.type = 'currency';\r\n                    customField = new PepperiTextboxField(options);\r\n                    break;\r\n                }\r\n                case FIELD_TYPE.NumberReal:\r\n                case FIELD_TYPE.CalculatedReal:\r\n                case FIELD_TYPE.MapDataReal:\r\n                case FIELD_TYPE.Sum:\r\n                case FIELD_TYPE.Totals: {\r\n                    options.type = 'real';\r\n                    customField = new PepperiTextboxField(options);\r\n                    break;\r\n                }\r\n                case FIELD_TYPE.Boolean:\r\n                case FIELD_TYPE.CalculatedBool: {\r\n                    customField = new PepperiCheckboxField(options);\r\n                    break;\r\n                }\r\n                case FIELD_TYPE.BooleanText: {\r\n                    options.type = 'booleanText';\r\n                    customField = new PepperiCheckboxField(options);\r\n                    break;\r\n                }\r\n                case FIELD_TYPE.ComboBox:\r\n                case FIELD_TYPE.EmptyComboBox:\r\n                case FIELD_TYPE.MapDataDropDown: {\r\n                    // options.type = 'select';\r\n                    customField = new PepperiSelectField(options);\r\n                    break;\r\n                }\r\n                case FIELD_TYPE.MultiTickBox:\r\n                case FIELD_TYPE.MultiTickBoxToComboBox:\r\n                case FIELD_TYPE.EmptyMultiTickBox: {\r\n                    options.type = 'multi';\r\n                    customField = new PepperiSelectField(options);\r\n                    break;\r\n                }\r\n                case FIELD_TYPE.GuidReferenceType: {\r\n                    options.type = 'reference';\r\n                    options.referenceObjectType = dataField.ReferenceObjectType;\r\n                    options.referenceObjectSubType = dataField.ReferenceObjectSubType;\r\n                    options.referenceObjectInternalType = dataField.ReferenceObjectInternalType;\r\n                    customField = new PepperiButtonField(options);\r\n                    break;\r\n                }\r\n                case FIELD_TYPE.ListOfObjects: {\r\n                    options.type = 'listofobjects';\r\n                    customField = new PepperiButtonField(options);\r\n                    break;\r\n                }\r\n                case FIELD_TYPE.Separator: {\r\n                    customField = new PepperiSeparatorField(options);\r\n                    break;\r\n                }\r\n                /*\r\n                    case FIELD_TYPE.Images: return that.field(value);\r\n                */\r\n                case FIELD_TYPE.NumberRealQuantitySelector:\r\n                case FIELD_TYPE.NumberIntegerQuantitySelector: {\r\n                    options.type = 'qs';\r\n                    options.alowDecimal = dataField.FieldType === FIELD_TYPE.NumberRealQuantitySelector;\r\n\r\n                    customField = new PepperiQuantitySelectorField(options);\r\n                    break;\r\n                }\r\n                case FIELD_TYPE.Package: {\r\n                    options.type = 'packageButton';\r\n\r\n                    customField = new PepperiQuantitySelectorField(options);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!customField) {\r\n            options.label = controlField.ApiName + ' is not supported!!!';\r\n            customField = new PepperiSeparatorField(options);\r\n        }\r\n\r\n        return customField;\r\n    }\r\n\r\n    public static getFieldFormattedValue(field: PepperiFieldBase): string {\r\n        let fieldFormattedValue = field.formattedValue;\r\n\r\n        // Fix for the custom check box component.\r\n        if (field.controlType === 'checkbox') {\r\n            fieldFormattedValue = fieldFormattedValue === 'true';\r\n        }\r\n\r\n        // Fix for the custom button component.\r\n        if (field.controlType === 'button') {\r\n            fieldFormattedValue = fieldFormattedValue === '0' ? '' : fieldFormattedValue;\r\n        }\r\n\r\n        return fieldFormattedValue;\r\n    }\r\n\r\n    private static toControlGroup(fields: PepperiFieldBase[], fb: FormBuilder,\r\n        customizationService: CustomizationService): FormGroup {\r\n        const group = {};\r\n        if (fields && fields.length > 0) {\r\n            fields.forEach(field => {\r\n                if (field.groupFields && field.groupFields.length > 0) {\r\n                    const subGroup = {};\r\n\r\n                    field.groupFields.forEach(groupField => {\r\n                        if (groupField.required && (!field.readonly && !field.disabled)) {\r\n                            subGroup[groupField.key] = [{\r\n                                value: groupField.formattedValue || '',\r\n                                disabled: field.readonly || field.disabled || groupField.disabled\r\n                            }, [Validators.required]];\r\n                        } else {\r\n                            subGroup[groupField.key] = [{\r\n                                value: groupField.formattedValue || '',\r\n                                disabled: field.readonly || field.disabled || groupField.disabled\r\n                            }, [Validators.nullValidator]];\r\n                        }\r\n                    });\r\n\r\n                    group[field.key] = fb.group(subGroup);\r\n                } else {\r\n                    const validators = customizationService.getValidatorsForField(field.required, field.readonly,\r\n                        field.disabled, field.maxFieldCharacters, field.type, field.controlType === 'checkbox');\r\n                    const fieldFormattedValue = PepperiFormComponent.getFieldFormattedValue(field);\r\n                    group[field.key] = [{ value: fieldFormattedValue || '', disabled: field.disabled }, validators];\r\n                }\r\n            });\r\n        }\r\n\r\n        return fb.group(group);\r\n    }\r\n\r\n    constructor(\r\n        private dialogService: DialogService,\r\n        private customizationService: CustomizationService,\r\n        private translate: TranslateService,\r\n        public fb: FormBuilder,\r\n        differs: KeyValueDiffers\r\n    ) {\r\n        // store the initial value to compare with\r\n        this.differ = differs.find({}).create();\r\n    }\r\n\r\n    public showFormValidationMessage(): void {\r\n        const fields: PepperiFieldBase[] = this.fields;\r\n        let emptyMandatoryFieldsMsg = '';\r\n        let notValidFieldsMsg = '';\r\n\r\n        // for (let i: number = 0; i < fields.length; i++) {\r\n        //     let field = fields[i];\r\n        for (const field of fields) {\r\n            const formControl = this.form && this.form.get(field.key);\r\n\r\n            if (formControl) {\r\n                // Mandatory is empty.\r\n                if (field.required && formControl.value.toString().trim().length === 0) {\r\n                    emptyMandatoryFieldsMsg += '<li><small>' + field.label + '</small></li>';\r\n                } else if (!field.disabled && !formControl.valid) {\r\n                    notValidFieldsMsg += '<li><small>' + field.label + '</small></li>';\r\n                }\r\n            }\r\n        }\r\n\r\n        // Add the header message of the empty mandatory fields\r\n        if (emptyMandatoryFieldsMsg.length > 0) {\r\n            emptyMandatoryFieldsMsg = '<div>' + this.translate.instant('MESSAGES.ERROR_MANDATORY_FIELDS') +\r\n                '</div><ul style=\\'padding: 0 20px;\\'>' + emptyMandatoryFieldsMsg + '</ul><br/>';\r\n        }\r\n\r\n        // Add the header message of the empty mandatory fields\r\n        if (notValidFieldsMsg.length > 0) {\r\n            notValidFieldsMsg = '<div>' + this.translate.instant('MESSAGES.ERROR_INVALID_FIELDS') +\r\n                '</div><ul style=\\'padding: 0 20px;\\'>' + notValidFieldsMsg + '</ul>';\r\n        }\r\n\r\n        const title = this.translate.instant('MESSAGES.TITLE_NOTICE');\r\n        const data = new DialogData({\r\n            title,\r\n            content: emptyMandatoryFieldsMsg + notValidFieldsMsg,\r\n            contentType: DialogDataType.Html\r\n        });\r\n        this.dialogService.openDefaultDialog(data);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        const themeVars = this.customizationService.getThemeVariables();\r\n        // convert rem to pixel\r\n        const RemToPixel = 16;\r\n        this.formGutterSize = this.customizationService.getNumberThemeVariable(themeVars,\r\n            CustomizationService.FORM_SPACEING_KEY) * RemToPixel;\r\n        this.cardGutterSize = this.customizationService.getNumberThemeVariable(themeVars,\r\n            CustomizationService.CARD_SPACEING_KEY) * RemToPixel;\r\n    }\r\n\r\n    ngDoCheck(): void {\r\n        const changes = this.differ.diff(this.pepperiObjectInput); // check for changes\r\n\r\n        if (changes) {\r\n            this.updateForm(true);\r\n        }\r\n    }\r\n\r\n    ngOnChanges(changes): void {\r\n        if (changes.pepperiObjectInput && changes.pepperiObjectInput.currentValue) {\r\n            // Load changes\r\n            if (!this.shouldReloadForm && changes.pepperiObjectInput.previousValue) {\r\n                this.pepperiObjectInput = changes.pepperiObjectInput.currentValue;\r\n                this.updateForm();\r\n            } else {\r\n                this.shouldReloadForm = false;\r\n                this.initForm(changes);\r\n            }\r\n        }\r\n\r\n        this.checkForChanges = new Date();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        if (this.notifyValueChanged) { this.notifyValueChanged.unsubscribe(); }\r\n\r\n        if (this.formValidationChanged) { this.formValidationChanged.unsubscribe(); }\r\n\r\n        if (this.childClicked) { this.childClicked.unsubscribe(); }\r\n\r\n        if (this.childChanged) { this.childChanged.unsubscribe(); }\r\n\r\n        if (this.notifyFieldClicked) { this.notifyFieldClicked.unsubscribe(); }\r\n\r\n        if (this.notifyMenuItemClicked) { this.notifyMenuItemClicked.unsubscribe(); }\r\n    }\r\n\r\n    getUiControlFields(): Array<UIControlField> {\r\n        return this.uiControlHeader ?\r\n            this.uiControlHeader.ControlFields :\r\n            this.pepperiObjectInput.UIControl.ControlFields;\r\n    }\r\n\r\n    initFieldsStructure(fields: PepperiFieldBase[], maxRow: number): void {\r\n        const themeVars = this.customizationService.getThemeVariables();\r\n\r\n        // Set form row height.\r\n        if (this.layoutType === LAYOUT_TYPE.PepperiCard) {\r\n            const cardFieldHeight = this.customizationService.getNumberThemeVariable(themeVars,\r\n                CustomizationService.CARD_FIELD_HEIGHT_KEY);\r\n            this.rowHeight = cardFieldHeight;\r\n        } else {\r\n            const rowFieldHeight = this.customizationService.getNumberThemeVariable(themeVars,\r\n                CustomizationService.FORM_FIELD_HEIGHT_KEY);\r\n            const rowFieldTitleHeight = this.customizationService.getNumberThemeVariable(themeVars,\r\n                CustomizationService.FORM_FIELD_TITLE_HEIGHT_KEY);\r\n            this.rowHeight = rowFieldHeight + rowFieldTitleHeight;\r\n        }\r\n\r\n        // Create the fields structure (the fields must be sorted!!!).\r\n        if (fields.length > 0) {\r\n            // Init the layout.\r\n            if (\r\n                // this.layoutType === LAYOUT_TYPE.PepperiForm ||\r\n                this.layoutType === LAYOUT_TYPE.PepperiTable ||\r\n                this.layoutType === LAYOUT_TYPE.Editmodal\r\n            ) {\r\n                this.fields = fields;\r\n                this.rows = [];\r\n\r\n                for (let i = 0; i <= maxRow; i++) {\r\n                    this.rows[i] = [];\r\n                }\r\n\r\n                // for (let i = 0; i < fields.length; i++) {\r\n                // const field = fields[i]\r\n                for (const field of fields) {\r\n                    this.rows[field.row].push(field);\r\n                }\r\n            } else {\r\n                const doesfieldExistIn: boolean[][] = new Array(maxRow);\r\n\r\n                for (let i = 0; i < doesfieldExistIn.length; i++) {\r\n                    doesfieldExistIn[i] = new Array(this.columns);\r\n\r\n                    for (let j = 0; j < doesfieldExistIn[i].length; j++) {\r\n                        doesfieldExistIn[i][j] = false;\r\n                    }\r\n                }\r\n\r\n                // Run in squere (row - colspan, col - rowspan) and put true where it should.\r\n                // for (let index = 0; index < fields.length; index++) {\r\n                //     const currentField = fields[index];\r\n                for (const currentField of fields) {\r\n                    if (currentField.rowSpan > 1) {\r\n                        for (let row: number = currentField.row; row < currentField.row + currentField.rowSpan; row++) {\r\n                            if (currentField.colSpan > 1) {\r\n                                for (let col: number = currentField.col; col < currentField.col + currentField.colSpan; col++) {\r\n                                    if (doesfieldExistIn.length > row && doesfieldExistIn[0].length > col) {\r\n                                        doesfieldExistIn[row][col] = true;\r\n                                    }\r\n                                }\r\n                            } else {\r\n                                if (doesfieldExistIn.length > row && doesfieldExistIn[0].length > currentField.col) {\r\n                                    doesfieldExistIn[row][currentField.col] = true;\r\n                                }\r\n                            }\r\n                        }\r\n                    } else if (currentField.colSpan > 1) {\r\n                        for (let col: number = currentField.col; col < currentField.col + currentField.colSpan; col++) {\r\n                            if (doesfieldExistIn.length > currentField.row && doesfieldExistIn[0].length > col) {\r\n                                doesfieldExistIn[currentField.row][col] = true;\r\n                            }\r\n                        }\r\n                    } else {\r\n                        if (doesfieldExistIn.length > currentField.row && doesfieldExistIn[0].length > currentField.col) {\r\n                            doesfieldExistIn[currentField.row][currentField.col] = true;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Create empty fields where doesfieldExistIn is false (For the md-grid-list UI Component).\r\n                for (let i = 0; i < doesfieldExistIn.length; i++) {\r\n                    for (let j = 0; j < doesfieldExistIn[i].length; j++) {\r\n                        if (!doesfieldExistIn[i][j]) {\r\n                            // Create empty field and add it to the fields list.\r\n                            fields.push(\r\n                                new PepperiPlaceholderField({\r\n                                    key: i + '_' + j,\r\n                                    label: '',\r\n                                    type: 'text',\r\n                                    placeholder: '',\r\n                                    readonly: false,\r\n                                    disabled: false,\r\n                                    hidden: false,\r\n                                    required: false,\r\n                                    value: '',\r\n                                    formattedValue: '',\r\n                                    row: i,\r\n                                    rowSpan: 1,\r\n                                    col: j,\r\n                                    colSpan: 1,\r\n                                    order: 1\r\n                                })\r\n                            );\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Sort the fields again.\r\n                this.fields = fields.sort((f1, f2) => (f1.row > f2.row ?\r\n                    1 : f1.row < f2.row ?\r\n                        -1 : f1.col > f2.col ?\r\n                            1 : f1.col < f2.col ? -1 : 0));\r\n            }\r\n        }\r\n    }\r\n\r\n    setForm(isForUpdate = false): void {\r\n        let allFieldsAreReadOnly = true;\r\n\r\n        if (!isForUpdate) {\r\n            const fields = [];\r\n            // for (let i = 0; i < this.fields.length; i++) {\r\n            // const currentField = this.fields[i];\r\n            for (const currentField of this.fields) {\r\n                // Add all fields except 'internalPage' type (for children).\r\n                if (currentField.controlType !== 'internalPage') {\r\n                    fields.push(currentField);\r\n                }\r\n\r\n                if (!currentField.readonly) {\r\n                    allFieldsAreReadOnly = false;\r\n                }\r\n            }\r\n\r\n            this.form = PepperiFormComponent.toControlGroup(fields, this.fb, this.customizationService);\r\n        }\r\n        else {\r\n            // Update form values if changed by calculated fields.\r\n            // for (let i = 0; i < this.fields.length; i++) {\r\n            // const currentField = this.fields[i];\r\n            for (const currentField of this.fields) {\r\n\r\n                if (currentField.controlType !== 'internalPage') {\r\n                    if (currentField.groupFields && currentField.groupFields.length > 0) {\r\n                        // for (let j = 0; j < currentField.groupFields.length; j++) {\r\n                        //     let currentGroupField = currentField.groupFields[j];\r\n                        for (const currentGroupField of currentField.groupFields) {\r\n                            const fieldFormattedValue = PepperiFormComponent.getFieldFormattedValue(currentGroupField);\r\n                            this.customizationService.updateFormField(this.form, currentGroupField,\r\n                                fieldFormattedValue, currentField);\r\n\r\n                        }\r\n                    } else {\r\n                        const fieldFormattedValue = PepperiFormComponent.getFieldFormattedValue(currentField);\r\n                        // this.form.controls[currentField.key].setValue(fieldFormattedValue);\r\n                        this.customizationService.updateFormField(this.form, currentField, fieldFormattedValue);\r\n                    }\r\n                }\r\n\r\n                if (!currentField.readonly) {\r\n                    allFieldsAreReadOnly = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        let isFormValid = this.form.valid;\r\n\r\n        // Change validation to true if all fields are read only. (By Amir.L request).\r\n        if (!isFormValid && allFieldsAreReadOnly) {\r\n            isFormValid = true;\r\n        }\r\n\r\n        this.onFormValidationChanged(isFormValid);\r\n\r\n        // Set it to false to enable all fields.\r\n        this.isLocked = false;\r\n    }\r\n\r\n    initForm(changes): void {\r\n        if (this.pepperiObjectInput.Data && this.pepperiObjectInput.Data.Fields) {\r\n            const fields: PepperiFieldBase[] = this.convertCustomFields(\r\n                this.getUiControlFields(), this.pepperiObjectInput.Data.Fields);\r\n\r\n            const maxRow = Math.max.apply(\r\n                Math,\r\n                fields.map((f) => {\r\n                    return f.row + f.rowSpan;\r\n                })\r\n            );\r\n            this.columns = Math.max.apply(\r\n                Math,\r\n                fields.map((f) => {\r\n                    return f.col + f.colSpan;\r\n                })\r\n            );\r\n\r\n            this.initFieldsStructure(fields, maxRow);\r\n            this.setForm();\r\n        }\r\n    }\r\n\r\n    updateForm(cleanLastFocusedField: boolean = false): void {\r\n        if (this.pepperiObjectInput.Data && this.pepperiObjectInput.Data.Fields) {\r\n            // for (let i = 0; i < this.pepperiObjectInput.Data.Fields.length; i++) {\r\n            // let currentField = this.pepperiObjectInput.Data.Fields[i];\r\n            for (const currentField of this.pepperiObjectInput.Data.Fields) {\r\n                const customField = this.fields.filter(f => f.key === currentField.ApiName)[0];\r\n                // Update all fields except 'internalPage' type (for children).\r\n                if (customField && customField.controlType !== 'internalPage') {\r\n                    const hasFocus = this.lastFocusedField && this.lastFocusedField.id === customField.key;\r\n                    customField.updateField(currentField, this.canEditObject, hasFocus ? this.lastFocusedField : null);\r\n\r\n                    // Update the group fields.\r\n                    if (customField.controlType === 'address' && currentField.GroupFields) {\r\n                        // for (let j = 0; j < currentField.GroupFields.length; j++) {\r\n                        // let currentGroupField = currentField.GroupFields[j];\r\n                        for (const currentGroupField of currentField.GroupFields) {\r\n                            currentGroupField.Enabled = !currentField.Enabled ? false : currentGroupField.Enabled;\r\n\r\n                            const customGroupField = customField.groupFields.filter(f => f.key === currentGroupField.ApiName)[0];\r\n                            const hasGroupFocus = this.lastFocusedField && this.lastFocusedField.id === customGroupField.key;\r\n\r\n                            customGroupField.updateField(currentGroupField, this.canEditObject,\r\n                                hasGroupFocus ? this.lastFocusedField : null);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            this.setForm(true);\r\n\r\n            if (cleanLastFocusedField) {\r\n                // Clean the last focused field.\r\n                this.lastFocusedField = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    public ReloadForm(): void {\r\n        this.shouldReloadForm = true;\r\n    }\r\n\r\n    // onSubmit() {\r\n    //     if (this.form.valid) {\r\n    //         this.payLoad = JSON.stringify(this.form.value);\r\n    //         //this.submitted.emit(this.form.value);\r\n    //     }\r\n    // }\r\n\r\n    private getFormControlById(key: string): AbstractControl | null {\r\n        const self = this;\r\n        let formControl = null;\r\n\r\n        this.fields.forEach((field) => {\r\n            if (field.key === key) {\r\n                formControl = self.form.get(field.key);\r\n                return;\r\n            } else if (field.groupFields && field.groupFields.length > 0) {\r\n                field.groupFields.forEach((groupField) => {\r\n                    if (groupField.key === key) {\r\n                        formControl = self.form.get(field.key + '.' + groupField.key);\r\n                        return;\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n        return formControl;\r\n    }\r\n\r\n    private setSpecialFields(controlFields: Array<any>, dataFields: Array<any>): void {\r\n        // let cf;\r\n        // for (let index = 0; index < controlFields.length; index++) {\r\n        //     cf = controlFields[index];\r\n        for (const cf of controlFields) {\r\n            if (cf.ApiName === 'ObjectMenu') {\r\n                this.menuField = cf;\r\n            } else if (cf.ApiName === 'ItemHasActiveCampaign') {\r\n                this.hasCampaignField = cf;\r\n            } else if (cf.ApiName === 'ItemIndicatorsWithoutCampaign') {\r\n                this.indicatorsField = cf;\r\n            }\r\n        }\r\n\r\n        // let df;\r\n        // for (let index = 0; index < dataFields.length; index++) {\r\n        //     df = dataFields[index];\r\n        for (const df of dataFields) {\r\n            if (df.ApiName === 'ObjectMenu') {\r\n                this.menuDataField = df;\r\n            } else if (df.ApiName === 'ItemHasActiveCampaign') {\r\n                this.hasCampaignDataField = df;\r\n            } else if (df.ApiName === 'ItemIndicatorsWithoutCampaign') {\r\n                this.indicatorsDataField = df;\r\n            }\r\n        }\r\n\r\n        if (this.menuField && this.menuDataField) {\r\n            this.menuDataField.Layout = this.menuField.Layout;\r\n        }\r\n\r\n        if (this.hasCampaignField && this.hasCampaignDataField) {\r\n            this.hasCampaignDataField.Layout = this.hasCampaignField.Layout;\r\n        }\r\n\r\n        if (this.indicatorsField && this.indicatorsDataField) {\r\n            this.indicatorsDataField.Layout = this.indicatorsField.Layout;\r\n        }\r\n\r\n        // Check if menu is floating on other field.\r\n        // for (let index = 0; index < controlFields.length; index++) {\r\n        //     cf = controlFields[index];\r\n        for (const cf of controlFields) {\r\n            if (this.menuField && cf.ApiName !== 'ObjectMenu') {\r\n                this.hasMenuFloatingOnOtherField = PepperiFormComponent.doesFieldHavaFloatingField(cf, this.menuField);\r\n\r\n                if (this.hasMenuFloatingOnOtherField) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    convertCustomFields(controlFields: Array<any>, dataFields: Array<any>): PepperiFieldBase[] {\r\n        const self = this;\r\n\r\n        if (this.layoutType !== LAYOUT_TYPE.PepperiTable) {\r\n            this.setSpecialFields(controlFields, dataFields);\r\n        } else {\r\n            // Hack: convert to center alignment if table view & special fields)\r\n            controlFields.forEach((field, index) => {\r\n                if (\r\n                    field.ApiName === 'UnitsQuantity' ||\r\n                    field.ApiName === 'QuantitySelector' ||\r\n                    field.ApiName === 'ObjectMenu' ||\r\n                    field.FieldType === FIELD_TYPE.Image ||\r\n                    field.FieldType === FIELD_TYPE.ImageURL ||\r\n                    field.FieldType === FIELD_TYPE.Indicators ||\r\n                    field.FieldType === FIELD_TYPE.Boolean ||\r\n                    field.FieldType === FIELD_TYPE.CalculatedBool ||\r\n                    field.FieldType === FIELD_TYPE.Signature ||\r\n                    field.FieldType === FIELD_TYPE.NumberIntegerQuantitySelector ||\r\n                    field.FieldType === FIELD_TYPE.NumberRealQuantitySelector ||\r\n                    field.FieldType === FIELD_TYPE.Package ||\r\n                    field.FieldType === FIELD_TYPE.NumberIntegerForMatrix ||\r\n                    field.FieldType === FIELD_TYPE.NumberRealForMatrix\r\n                ) {\r\n                    field.Layout.XAlignment = 3;\r\n                }\r\n            });\r\n        }\r\n\r\n        const fields: PepperiFieldBase[] = [];\r\n\r\n        const matrixFields = controlFields.filter(cf => PepperiFormComponent.isMatrixField(cf.ApiName)).length;\r\n        let matrixAlreadyPlaced = false;\r\n\r\n        controlFields.forEach((field, index) => {\r\n            const dataField = dataFields.filter(df => df.ApiName === field.ApiName)[0];\r\n\r\n            if (!dataField) { return; }\r\n\r\n            // If current view is not table view and those fields are special.\r\n            if (\r\n                this.layoutType !== LAYOUT_TYPE.PepperiTable &&\r\n                ((this.hasMenuFloatingOnOtherField && this.menuField && this.menuField.ApiName === field.ApiName) ||\r\n                    (this.indicatorsField && this.indicatorsField.ApiName === field.ApiName) ||\r\n                    (this.hasCampaignField && this.hasCampaignField.ApiName === field.ApiName))\r\n            ) {\r\n                return;\r\n            }\r\n\r\n            // Remove this. (fix two matrix into one)\r\n            if (matrixFields > 0 && PepperiFormComponent.isMatrixField(field.ApiName)) {\r\n                if (matrixFields > 1 && matrixAlreadyPlaced) {\r\n                    return;\r\n                }\r\n\r\n                matrixAlreadyPlaced = true;\r\n\r\n                if (matrixFields > 1) {\r\n                    self.matrixIsLast = controlFields.length >= 2 ?\r\n                        controlFields[controlFields.length - 2].ApiName === field.ApiName : false;\r\n                } else {\r\n                    self.matrixIsLast = controlFields[controlFields.length - 1].ApiName === field.ApiName;\r\n                }\r\n            }\r\n\r\n            // Set type to link\r\n            if (this.firstFieldAsLink && index === 0) {\r\n                dataField.FieldType = FIELD_TYPE.InternalLink;\r\n                dataField.Value = this.getInternalLinkHref();\r\n            } else if (dataField.Value.length > 0 &&\r\n                (field.FieldType === FIELD_TYPE.ReferenceType || field.FieldType === FIELD_TYPE.GuidReferenceType)) {\r\n                const transactionUrl = this.pepperiObjectInput.Data.MainAction === '2' ? 'transactions/scope_items/' : 'transactions/cart/';\r\n                dataField.Value = transactionUrl + dataField.Value;\r\n            }\r\n\r\n            if (field.ApiName === 'ObjectMenu') {\r\n                const data: any = this.pepperiObjectInput.Data;\r\n                // HACK : Until \"Enabled\" returns from the server, we set PepperiMenu to be\r\n                //        Disabled in cart on regular items and not campign items.\r\n                dataField.Enabled = this.pageType !== 'cart';\r\n                dataField.OptionalValues = data.TransactionItemCustomMenu;\r\n                dataField.TransactionItemType = data.TransactionItemType;\r\n            }\r\n            const customField: PepperiFieldBase = PepperiFormComponent.convertToCustomField(\r\n                field,\r\n                dataField,\r\n                this.canEditObject,\r\n                this.menuDataField,\r\n                this.hasCampaignDataField,\r\n                this.indicatorsDataField,\r\n                this.objectId,\r\n                this.parentId,\r\n                this.searchCode\r\n            );\r\n\r\n            fields.push(customField);\r\n        });\r\n\r\n        return fields.sort((f1, f2) => (f1.row > f2.row ?\r\n            1 : f1.row < f2.row ?\r\n                -1 : f1.col > f2.col ?\r\n                    1 : f1.col < f2.col ? -1 : 0));\r\n    }\r\n\r\n    onValueChanged(valueChanged: any, isEditModal: boolean = false): void {\r\n        // This was comment by Tomer cause the address has stop working because this change.\r\n        // let clickedUiControlField = this.pepperiObjectInput.Data.Fields.filter(f => f.ApiName === valueChanged.apiName)[0];\r\n        // if (clickedUiControlField) {\r\n        this.onFormValidationChanged(this.form.valid);\r\n\r\n        const formControl = this.getFormControlById(valueChanged.apiName);\r\n\r\n        const isValid = formControl ? formControl.valid : true;\r\n        // const isValid = true;\r\n\r\n        if (isValid) {\r\n            // Set it to false to disable all fields.\r\n            if (this.layoutType === LAYOUT_TYPE.PepperiForm) {\r\n                this.isLocked = true;\r\n            }\r\n\r\n            this.lastFocusedField = valueChanged.lastFocusedField;\r\n            const customizeObjectChangedData = new PepperiObjectChangedData(this.pepperiObjectInput.Data.UID.toString(),\r\n                valueChanged.apiName, valueChanged.value, valueChanged.controlType);\r\n            this.notifyValueChanged.emit(customizeObjectChangedData);\r\n        }\r\n        // }\r\n\r\n    }\r\n\r\n    onChildClicked(childClicked: any): void {\r\n        this.childClicked.emit(childClicked);\r\n    }\r\n\r\n    onChildChanged(childChanged: any): void {\r\n        this.childChanged.emit(childChanged);\r\n    }\r\n\r\n    onFormValidationChanged(formValidationChanged: any): void {\r\n        if (this.layoutType === LAYOUT_TYPE.PepperiForm || this.layoutType === LAYOUT_TYPE.PepperiCard) {\r\n            this.formValidationChanged.emit(formValidationChanged);\r\n        }\r\n    }\r\n\r\n    onClick(fieldClickEvent: any): void {\r\n        const clickedUiControlField = this.pepperiObjectInput.Data.Fields.filter(f => f.ApiName === fieldClickEvent.apiName)[0];\r\n        // let clickedField = this.fields.filter(f => f.key === fieldClickEvent.apiName)[0];\r\n\r\n        if (clickedUiControlField) {\r\n            if (clickedUiControlField.FieldType === FIELD_TYPE.GuidReferenceType) {\r\n                const customizeFieldClickedData = new PepperiFieldClickedData(\r\n                    this.pepperiObjectInput.Data.UID.toString(),\r\n                    fieldClickEvent.apiName,\r\n                    this.pepperiObjectInput.Data.Type,\r\n                    fieldClickEvent.eventWhich,\r\n                    fieldClickEvent.value,\r\n                    clickedUiControlField.FieldType,\r\n                    fieldClickEvent.referenceObjectInternalType\r\n                );\r\n                this.notifyFieldClicked.emit(customizeFieldClickedData);\r\n            } else if (clickedUiControlField.FieldType === FIELD_TYPE.ListOfObjects) {\r\n                const customizeFieldClickedData = new PepperiFieldClickedData(\r\n                    this.pepperiObjectInput.Data.UID.toString(),\r\n                    fieldClickEvent.apiName,\r\n                    this.pepperiObjectInput.Data.Type,\r\n                    fieldClickEvent.eventWhich,\r\n                    fieldClickEvent.value,\r\n                    clickedUiControlField.FieldType,\r\n                    fieldClickEvent.otherData\r\n                );\r\n                this.notifyFieldClicked.emit(customizeFieldClickedData);\r\n            } else {\r\n                const customizeFieldClickedData = new PepperiFieldClickedData(\r\n                    this.pepperiObjectInput.Data.UID.toString(),\r\n                    fieldClickEvent.apiName,\r\n                    this.pepperiObjectInput.Data.Type,\r\n                    fieldClickEvent.eventWhich,\r\n                    fieldClickEvent.value,\r\n                    clickedUiControlField.FieldType,\r\n                    fieldClickEvent.otherData\r\n                );\r\n                this.notifyFieldClicked.emit(customizeFieldClickedData);\r\n            }\r\n        } else {\r\n            // For other api names (like enter children etc).\r\n            const customizeFieldClickedData = new PepperiFieldClickedData(\r\n                this.pepperiObjectInput.Data.UID.toString(),\r\n                fieldClickEvent.apiName,\r\n                this.pepperiObjectInput.Data.Type,\r\n                fieldClickEvent.eventWhich,\r\n                fieldClickEvent.value,\r\n                null,\r\n                fieldClickEvent.otherData\r\n            );\r\n            this.notifyFieldClicked.emit(customizeFieldClickedData);\r\n        }\r\n    }\r\n\r\n    onMenuItemClicked(fieldClickEvent: any): void {\r\n        const clickedUiControlField = this.pepperiObjectInput.Data.Fields.filter(f => f.ApiName === fieldClickEvent.apiName)[0];\r\n        const dataField: any = this.pepperiObjectInput.Data;\r\n        const fieldType = typeof clickedUiControlField !== 'undefined' ? clickedUiControlField.FieldType : FIELD_TYPE.Package;\r\n        const customizeFieldClickedData = new PepperiFieldClickedData(dataField.UID.toString(), fieldClickEvent.apiName,\r\n            dataField.Type, fieldClickEvent.eventWhich, fieldClickEvent.value, fieldType, {\r\n            ExtraInfo: dataField.ExtraInfo,\r\n            ItemType: dataField.TransactionItemType\r\n        });\r\n        this.notifyMenuItemClicked.emit(customizeFieldClickedData);\r\n    }\r\n\r\n    getInternalLinkHref(): string {\r\n        let hrefStr = '';\r\n        const uid = this.pepperiObjectInput.Data.UID;\r\n        const transactionUrl = this.pepperiObjectInput.Data.MainAction === '2' ? 'transactions/scope_items/' : 'transactions/cart/';\r\n        // let isBuyer = sessionStorage.getItem('userRole') == 'Buyer' ? true : false;\r\n\r\n        if (this.listType === 'all_activities') {\r\n            hrefStr = this.pepperiObjectInput.Data.Type === 0 ? transactionUrl + uid : 'activities/details/' + uid;\r\n        } else if (this.listType === 'accounts') {\r\n            hrefStr = 'accounts/home_page/' + uid;\r\n        }\r\n\r\n        return hrefStr;\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\n\r\nimport { MatCommonModule } from '@angular/material/core';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\n\r\nimport { SignaturePadModule } from 'angular2-signaturepad';\r\n\r\nimport { PepperiModule } from '@pepperi-addons/ngx-lib';\r\nimport {\r\n    PepperiIconModule,\r\n    PepperiIconRegistry,\r\n    pepperiIconIndicatorDotPlaceholder } from '@pepperi-addons/ngx-lib/icon';\r\n\r\nimport { PepperiDialogModule } from '@pepperi-addons/ngx-lib/dialog';\r\n\r\nimport { PepperiAddressModule } from '@pepperi-addons/ngx-lib/address';\r\nimport { PepperiAttachmentModule } from '@pepperi-addons/ngx-lib/attachment';\r\nimport { PepperiCheckboxModule } from '@pepperi-addons/ngx-lib/checkbox';\r\nimport { PepperiDateModule } from '@pepperi-addons/ngx-lib/date';\r\nimport { PepperiImageModule } from '@pepperi-addons/ngx-lib/image';\r\nimport { PepperiImagesFilmstripModule } from '@pepperi-addons/ngx-lib/images-filmstrip';\r\nimport { PepperiInternalButtonModule } from '@pepperi-addons/ngx-lib/internal-button';\r\n// import { PepperiInternalPageModule } from '@pepperi-addons/ngx-lib/internal-page';\r\nimport { PepperiMenuModule } from '@pepperi-addons/ngx-lib/menu';\r\nimport { PepperiQuantitySelectorModule } from '@pepperi-addons/ngx-lib/quantity-selector';\r\nimport { PepperiRichHtmlTextareaModule } from '@pepperi-addons/ngx-lib/rich-html-textarea';\r\nimport { PepperiSelectModule } from '@pepperi-addons/ngx-lib/select';\r\nimport { PepperiSeparatorModule } from '@pepperi-addons/ngx-lib/separator';\r\nimport { PepperiSignatureModule } from '@pepperi-addons/ngx-lib/signature';\r\nimport { PepperiTextareaModule } from '@pepperi-addons/ngx-lib/textarea';\r\nimport { PepperiTextboxModule } from '@pepperi-addons/ngx-lib/textbox';\r\n\r\nconst pepperiComponentsModules = [\r\n    PepperiAddressModule,\r\n    PepperiAttachmentModule,\r\n    PepperiCheckboxModule,\r\n    PepperiDateModule,\r\n    PepperiImageModule,\r\n    PepperiImagesFilmstripModule,\r\n    PepperiInternalButtonModule,\r\n    // PepperiInternalPageModule,\r\n    PepperiMenuModule,\r\n    PepperiQuantitySelectorModule,\r\n    PepperiRichHtmlTextareaModule,\r\n    PepperiSelectModule,\r\n    PepperiSeparatorModule,\r\n    PepperiSignatureModule,\r\n    PepperiTextareaModule,\r\n    PepperiTextboxModule,\r\n];\r\n\r\nimport { PepperiFormComponent } from './form.component';\r\nimport { PepperiFieldGeneratorComponent } from './field-generator.component';\r\nimport { PepperiIndicatorsComponent } from './indicators.component';\r\nimport { PepperiInternalPageComponent } from './internal-page.component';\r\nimport { PepperiInternalListComponent } from './internal-list.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        ReactiveFormsModule,\r\n        FormsModule,\r\n        // Material modules,\r\n        MatCommonModule,\r\n        MatGridListModule,\r\n        MatIconModule,\r\n        MatMenuModule,\r\n        // External modules\r\n        SignaturePadModule,\r\n        // Pepperi modules\r\n        PepperiModule,\r\n        PepperiDialogModule,\r\n        PepperiIconModule,\r\n        pepperiComponentsModules,\r\n    ],\r\n    exports: [PepperiFormComponent],\r\n    declarations: [\r\n        PepperiFormComponent,\r\n        PepperiFieldGeneratorComponent,\r\n        PepperiIndicatorsComponent,\r\n        PepperiInternalPageComponent,\r\n        PepperiInternalListComponent\r\n    ],\r\n})\r\nexport class PepperiFormModule {\r\n    constructor(private pepperiIconRegistry: PepperiIconRegistry) {\r\n        this.pepperiIconRegistry.registerIcons([\r\n            pepperiIconIndicatorDotPlaceholder\r\n        ]);\r\n    }\r\n}\r\n","/*\r\n * Public API Surface of ngx-lib/form\r\n */\r\nexport * from './form.module';\r\nexport * from './form.component';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i0.ɵɵelementContainerStart","i0.ɵɵelement","i0.ɵɵelementContainerEnd","i0.ɵɵadvance","i0.ɵɵproperty","i0.ɵɵelementStart","i0.ɵɵtemplate","i0.ɵɵelementEnd","i0.ɵɵtext","i0.ɵɵtextInterpolate","i0.ɵɵclassMapInterpolate1","i0.ɵɵpropertyInterpolate","i0.ɵɵtextInterpolate1","i0.ɵɵlistener","i0.ɵɵelementContainer","i0.ɵɵclassMap","$"],"mappings":"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"}