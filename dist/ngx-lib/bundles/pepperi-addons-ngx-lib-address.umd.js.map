{"version":3,"file":"pepperi-addons-ngx-lib-address.umd.js","sources":["../../../projects/ngx-lib/address/address.component.html","../../../projects/ngx-lib/address/address.component.ts","../../../projects/ngx-lib/address/address.module.ts","../../../projects/ngx-lib/address/public-api.ts","../../../projects/ngx-lib/address/pepperi-addons-ngx-lib-address.ts"],"sourcesContent":["<ng-container [formGroup]=\"form\">\r\n    <ng-container *ngIf=\"layoutType === LAYOUT_TYPE.PepperiForm\">\r\n        <pep-field-title [label]=\"label\" [required]=\"required\" [disabled]=\"disabled\" class=\"header\">\r\n        </pep-field-title>\r\n        <div [formGroupName]=\"key\" [id]=\"key\" class=\"pepperi-address-container\"\r\n            dir=\"{{ xAlignment === '2' ? 'rtl' : 'ltr' }}\">\r\n            <div [ngSwitch]=\"groupField.controlType\" *ngFor=\"let groupField of groupFields; let i = index\"\r\n                class=\"pepperi-address-field columns-{{ groupField.colSpan }}\">\r\n                <pep-textbox *ngSwitchCase=\"'textbox'\" [layoutType]=\"layoutType\" title=\"{{ groupField.formattedValue }}\"\r\n                    [form]=\"form\" [key]=\"groupField.key\" [value]=\"groupField.value\"\r\n                    [formattedValue]=\"groupField.formattedValue\" [label]=\"groupField.label\"\r\n                    [placeholder]=\"groupField.placeholder\" [type]=\"groupField.type\" [required]=\"groupField.required\"\r\n                    [disabled]=\"groupField.disabled\" [readonly]=\"groupField.readonly\"\r\n                    [xAlignment]=\"groupField.xAlignment\" [rowSpan]=\"groupField.rowSpan\" [parentFieldKey]=\"key\"\r\n                    (valueChanged)=\"onValueChange($event, groupField.key)\">\r\n                </pep-textbox>\r\n\r\n                <pep-select *ngSwitchCase=\"'select'\" [layoutType]=\"layoutType\" title=\"{{ groupField.formattedValue }}\"\r\n                    [form]=\"form\" [key]=\"groupField.key\" [value]=\"groupField.value\"\r\n                    [formattedValue]=\"groupField.formattedValue\" [label]=\"groupField.label\" [type]=\"groupField.type\"\r\n                    [required]=\"groupField.required\" [disabled]=\"groupField.disabled\" [readonly]=\"groupField.readonly\"\r\n                    [xAlignment]=\"groupField.xAlignment\" [rowSpan]=\"groupField.rowSpan\" [options]=\"groupField.options\"\r\n                    [parentFieldKey]=\"key\" (valueChanged)=\"onValueChange($event, groupField.key)\">\r\n                </pep-select>\r\n            </div>\r\n        </div>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"layoutType === LAYOUT_TYPE.PepperiCard\">\r\n        <div class=\"pepperi-card-input \" title=\"{{ label }}&nbsp;{{ formattedValue }}\"\r\n            [ngClass]=\"['text-align-' + xAlignment]\">\r\n            <span *ngIf=\"label != ''\" class=\"body-xs title\">{{ label }}&nbsp;</span>\r\n            <ng-container *ngFor=\"let groupField of groupFields; let i = index\">\r\n                <span *ngIf=\"groupField?.formattedValue != ''\"\r\n                    class=\"body-sm\">{{ groupField.formattedValue }},&nbsp;</span>\r\n            </ng-container>\r\n        </div>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"layoutType === LAYOUT_TYPE.PepperiTable\">\r\n        <div class=\"pepperi-card-input \" title=\"{{ formattedValue }}\" [ngClass]=\"['text-align-' + xAlignment]\">\r\n            <ng-container *ngFor=\"let groupField of groupFields; let i = index\">\r\n                <span *ngIf=\"groupField?.formattedValue != ''\"\r\n                    class=\"body-sm\">{{ groupField.formattedValue }},&nbsp;</span>\r\n            </ng-container>\r\n        </div>\r\n    </ng-container>\r\n</ng-container>\r\n","import { Component, OnInit, OnChanges, Input, Output, EventEmitter, ChangeDetectionStrategy, OnDestroy, Renderer2, ElementRef } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { LAYOUT_TYPE } from '@pepperi-addons/ngx-lib';\r\n\r\n@Component({\r\n    selector: 'pep-address',\r\n    templateUrl: './address.component.html',\r\n    styleUrls: ['./address.component.scss'],\r\n    // host: { 'class': 'pepperi-grouped-field' },\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PepperiAddressComponent implements OnChanges, OnInit, OnDestroy {\r\n    @Input() key = '';\r\n    // @Input() value = '';\r\n    @Input() formattedValue = '';\r\n    @Input() label = '';\r\n    @Input() required = false;\r\n    @Input() disabled = false;\r\n    @Input() readonly = false;\r\n    @Input() xAlignment = '0';\r\n    @Input() rowSpan = 1;\r\n    @Input() groupFields: Array<any>;\r\n\r\n    @Input() form: FormGroup = null;\r\n    @Input() layoutType: LAYOUT_TYPE = LAYOUT_TYPE.PepperiForm;\r\n\r\n    @Output() valueChanged: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    LAYOUT_TYPE = LAYOUT_TYPE;\r\n\r\n    constructor(\r\n        private element: ElementRef,\r\n        private renderer: Renderer2\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        this.renderer.addClass(this.element.nativeElement, 'pep-grouped-field');\r\n    }\r\n\r\n    ngOnChanges(changes): void {\r\n        setTimeout(() => {\r\n            const focusedFieldParent = this.groupFields.filter(groupField => groupField.lastFocusField)[0];\r\n            if (focusedFieldParent) {\r\n                focusedFieldParent.lastFocusField.focus();\r\n            }\r\n        }, 100);\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        if (this.valueChanged) {\r\n            this.valueChanged.unsubscribe();\r\n        }\r\n    }\r\n\r\n    // Not in use for material\r\n    onBlur(e: any, apiName: string): void {\r\n        const value = e.target ? e.target.value : e;\r\n        this.changeValue({ apiName, value }, e.relatedTarget);\r\n    }\r\n\r\n    onValueChange(e: any, apiName: string): void {\r\n        if (e.target) {\r\n            const input = e.target ? e.target.value : e;\r\n            this.changeValue({ apiName, value: input.value });\r\n        } else {\r\n            this.changeValue(e);\r\n        }\r\n    }\r\n\r\n    changeValue(obj: any, lastFocusedField: any = null): void {\r\n        const currentGroupField = this.groupFields.filter(groupField => groupField.key === obj.apiName)[0];\r\n\r\n        if (currentGroupField.value !== obj.value) {\r\n            // Set the value in the form controls\r\n            if (this.form) {\r\n                const formCtrl = this.form.get(this.key);\r\n\r\n                if (formCtrl) {\r\n                    formCtrl.get(obj.apiName).setValue(obj.value);\r\n                }\r\n            }\r\n\r\n            this.valueChanged.emit({ apiName: obj.apiName, value: obj.value, lastFocusedField });\r\n        }\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\n\r\nimport { MatCommonModule } from '@angular/material/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\n\r\nimport { PepperiModule } from '@pepperi-addons/ngx-lib';\r\nimport { PepperiTextboxModule } from '@pepperi-addons/ngx-lib/textbox';\r\nimport { PepperiSelectModule } from '@pepperi-addons/ngx-lib/select';\r\nimport { PepperiFieldTitleModule } from '@pepperi-addons/ngx-lib/field-title';\r\n\r\nimport { PepperiAddressComponent } from './address.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        ReactiveFormsModule,\r\n        FormsModule,\r\n        // Material modules\r\n        MatCommonModule,\r\n        MatFormFieldModule,\r\n        // Pepperi modules\r\n        PepperiModule,\r\n        PepperiTextboxModule,\r\n        PepperiSelectModule,\r\n        PepperiFieldTitleModule\r\n    ],\r\n    exports: [ PepperiAddressComponent ],\r\n    declarations: [ PepperiAddressComponent ],\r\n})\r\nexport class PepperiAddressModule {}\r\n","/*\r\n * Public API Surface of ngx-lib/address\r\n */\r\nexport * from './address.module';\r\nexport * from './address.component';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i0.ɵɵelementStart","i0.ɵɵlistener","i0.ɵɵelementEnd","i0.ɵɵpropertyInterpolate","i0.ɵɵproperty","i0.ɵɵtemplate","i0.ɵɵclassMapInterpolate1","i0.ɵɵadvance","i0.ɵɵelementContainerStart","i0.ɵɵelement","i0.ɵɵelementContainerEnd","i0.ɵɵtext","i0.ɵɵtextInterpolate1","i0.ɵɵpropertyInterpolate2","LAYOUT_TYPE","EventEmitter","Component","ChangeDetectionStrategy","Input","Output","CommonModule","ReactiveFormsModule","FormsModule","MatCommonModule","MatFormFieldModule","PepperiModule","PepperiTextboxModule","PepperiSelectModule","PepperiFieldTitleModule","NgModule"],"mappings":";;;;;;;;;YAQgBA,sCAOc;YADVC,gUAAsD;YAC1DC,iBAAc;;;;;YAPmDC,+DAAuC;YAAjEC,8CAAyB,qBAAA,0BAAA,8BAAA,gDAAA,8BAAA,0CAAA,4BAAA,oCAAA,oCAAA,oCAAA,wCAAA,kCAAA,8BAAA;;;;;;YAShEJ,qCAMa;YADcC,iUAAsD;YACjFC,iBAAa;;;;;YANkDC,+DAAuC;YAAjEC,8CAAyB,qBAAA,0BAAA,8BAAA,gDAAA,8BAAA,4BAAA,oCAAA,oCAAA,oCAAA,wCAAA,kCAAA,kCAAA,8BAAA;;;;;YAXlEJ,8BAEI;YAAAK,8GAOA;YAEAA,4GAMA;YACJH,iBAAM;;;;YAjBFI,sFAA8D;YAD7DF,oDAAmC;YAEvBG,eAAyB;YAAzBH,wCAAyB;YAS1BG,eAAwB;YAAxBH,uCAAwB;;;;;YAhBhDI,6BACI;YAAAC,qCACkB;YAClBT,8BAEI;YAAAK,uFAEI;YAiBRH,iBAAM;YACVQ,0BAAe;;;;YAxBMH,eAAe;YAAfH,oCAAe,6BAAA,6BAAA;YAG5BG,eAA8C;YAA9CJ,0EAA8C;YAD7CC,0CAAqB,kBAAA;YAEmBG,eAAqD;YAArDH,4CAAqD;;;;;YAyB9FJ,gCAAgD;YAAAW,YAAiB;YAAAT,iBAAO;;;;YAAxBK,eAAiB;YAAjBK,kDAAiB;;;;;YAE7DZ,gCACoB;YAAAW,YAAsC;YAAAT,iBAAO;;;;YAA7CK,eAAsC;YAAtCK,mEAAsC;;;;;YAF9DJ,6BACI;YAAAH,yGACoB;YACxBK,0BAAe;;;;YAFLH,eAAwC;YAAxCH,4FAAwC;;;;;;YAL1DI,6BACI;YAAAR,+BAEI;YAAAK,0FAAgD;YAChDA,0GACI;YAGRH,iBAAM;YACVQ,0BAAe;;;;YARsBH,eAA6C;YAA7CM,yFAA6C;YAC1ET,uFAAwC;YAClCG,eAAmB;YAAnBH,yCAAmB;YACXG,eAAqD;YAArDH,4CAAqD;;;;;YAU/DJ,gCACoB;YAAAW,YAAsC;YAAAT,iBAAO;;;;YAA7CK,eAAsC;YAAtCK,mEAAsC;;;;;YAF9DJ,6BACI;YAAAH,yGACoB;YACxBK,0BAAe;;;;YAFLH,eAAwC;YAAxCH,4FAAwC;;;;;YAH1DI,6BACI;YAAAR,+BACI;YAAAK,0GACI;YAGRH,iBAAM;YACVQ,0BAAe;;;;YANsBH,eAA4B;YAA5BJ,wDAA4B;YAACC,uFAAwC;YACpFG,eAAqD;YAArDH,4CAAqD;;;;QCX3E,iCACY,OAAmB,EACnB,QAAmB;YADnB,YAAO,GAAP,OAAO,CAAY;YACnB,aAAQ,GAAR,QAAQ,CAAW;YApBtB,QAAG,GAAG,EAAE,CAAC;;YAET,mBAAc,GAAG,EAAE,CAAC;YACpB,UAAK,GAAG,EAAE,CAAC;YACX,aAAQ,GAAG,KAAK,CAAC;YACjB,aAAQ,GAAG,KAAK,CAAC;YACjB,aAAQ,GAAG,KAAK,CAAC;YACjB,eAAU,GAAG,GAAG,CAAC;YACjB,YAAO,GAAG,CAAC,CAAC;YAGZ,SAAI,GAAc,IAAI,CAAC;YACvB,eAAU,GAAgBU,kBAAW,CAAC,WAAW,CAAC;YAEjD,iBAAY,GAAsB,IAAIC,eAAY,EAAO,CAAC;YAEpE,gBAAW,GAAGD,kBAAW,CAAC;SAKrB;QAEL,0CAAQ,GAAR;YACI,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,mBAAmB,CAAC,CAAC;SAC3E;QAED,6CAAW,GAAX,UAAY,OAAO;YAAnB,iBAOC;YANG,UAAU,CAAC;gBACP,IAAM,kBAAkB,GAAG,KAAI,CAAC,WAAW,CAAC,MAAM,CAAC,UAAA,UAAU,IAAI,OAAA,UAAU,CAAC,cAAc,GAAA,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC/F,IAAI,kBAAkB,EAAE;oBACpB,kBAAkB,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;iBAC7C;aACJ,EAAE,GAAG,CAAC,CAAC;SACX;QAED,6CAAW,GAAX;YACI,IAAI,IAAI,CAAC,YAAY,EAAE;gBACnB,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;aACnC;SACJ;;QAGD,wCAAM,GAAN,UAAO,CAAM,EAAE,OAAe;YAC1B,IAAM,KAAK,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC;YAC5C,IAAI,CAAC,WAAW,CAAC,EAAE,OAAO,SAAA,EAAE,KAAK,OAAA,EAAE,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC;SACzD;QAED,+CAAa,GAAb,UAAc,CAAM,EAAE,OAAe;YACjC,IAAI,CAAC,CAAC,MAAM,EAAE;gBACV,IAAM,KAAK,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC;gBAC5C,IAAI,CAAC,WAAW,CAAC,EAAE,OAAO,SAAA,EAAE,KAAK,EAAE,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC;aACrD;iBAAM;gBACH,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;aACvB;SACJ;QAED,6CAAW,GAAX,UAAY,GAAQ,EAAE,gBAA4B;YAA5B,iCAAA,EAAA,uBAA4B;YAC9C,IAAM,iBAAiB,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,UAAA,UAAU,IAAI,OAAA,UAAU,CAAC,GAAG,KAAK,GAAG,CAAC,OAAO,GAAA,CAAC,CAAC,CAAC,CAAC,CAAC;YAEnG,IAAI,iBAAiB,CAAC,KAAK,KAAK,GAAG,CAAC,KAAK,EAAE;;gBAEvC,IAAI,IAAI,CAAC,IAAI,EAAE;oBACX,IAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBAEzC,IAAI,QAAQ,EAAE;wBACV,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;qBACjD;iBACJ;gBAED,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE,KAAK,EAAE,GAAG,CAAC,KAAK,EAAE,gBAAgB,kBAAA,EAAE,CAAC,CAAC;aACxF;SACJ;;;kGAzEQ,uBAAuB;gEAAvB,uBAAuB;;gBDXpCN,gCACI;gBAAAH,0FACI;gBA0BJA,0FACI;gBAUJA,0FACI;gBAORK,0BAAe;;;gBA/CDN,oCAAkB;gBACdG,eAA8C;gBAA9CH,qEAA8C;gBA2B9CG,eAA8C;gBAA9CH,qEAA8C;gBAW9CG,eAA+C;gBAA/CH,sEAA+C;;;;6BC5BpD,uBAAuB;sBAPnCY,YAAS;uBAAC;wBACP,QAAQ,EAAE,aAAa;wBACvB,WAAW,EAAE,0BAA0B;wBACvC,SAAS,EAAE,CAAC,0BAA0B,CAAC;;wBAEvC,eAAe,EAAEC,0BAAuB,CAAC,MAAM;qBAClD;6FAEY,GAAG;0BAAXC,QAAK;oBAEG,cAAc;0BAAtBA,QAAK;oBACG,KAAK;0BAAbA,QAAK;oBACG,QAAQ;0BAAhBA,QAAK;oBACG,QAAQ;0BAAhBA,QAAK;oBACG,QAAQ;0BAAhBA,QAAK;oBACG,UAAU;0BAAlBA,QAAK;oBACG,OAAO;0BAAfA,QAAK;oBACG,WAAW;0BAAnBA,QAAK;oBAEG,IAAI;0BAAZA,QAAK;oBACG,UAAU;0BAAlBA,QAAK;oBAEI,YAAY;0BAArBC,SAAM;;;;;QCKX;;;;4DAAa,oBAAoB;2HAApB,oBAAoB,kBAhBpB;gBACLC,eAAY;gBACZC,sBAAmB;gBACnBC,cAAW;;gBAEXC,oBAAe;gBACfC,4BAAkB;;gBAElBC,oBAAa;gBACbC,uBAAoB;gBACpBC,sBAAmB;gBACnBC,0BAAuB;aAC1B;;iFAIQ,oBAAoB,mBAFb,uBAAuB,aAbnCR,eAAY;gBACZC,sBAAmB;gBACnBC,cAAW;;gBAEXC,oBAAe;gBACfC,4BAAkB;;gBAElBC,oBAAa;gBACbC,uBAAoB;gBACpBC,sBAAmB;gBACnBC,0BAAuB,aAEhB,uBAAuB;;;6BAGzB,oBAAoB;sBAjBhCC,WAAQ;uBAAC;wBACN,OAAO,EAAE;4BACLT,eAAY;4BACZC,sBAAmB;4BACnBC,cAAW;;4BAEXC,oBAAe;4BACfC,4BAAkB;;4BAElBC,oBAAa;4BACbC,uBAAoB;4BACpBC,sBAAmB;4BACnBC,0BAAuB;yBAC1B;wBACD,OAAO,EAAE,CAAE,uBAAuB,CAAE;wBACpC,YAAY,EAAE,CAAE,uBAAuB,CAAE;qBAC5C;;;;IC9BD;;;;ICAA;;;;;;;;;;;;;;;"}