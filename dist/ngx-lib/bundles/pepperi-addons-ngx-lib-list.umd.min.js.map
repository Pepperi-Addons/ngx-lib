{"version":3,"sources":["../../../projects/ngx-lib/list/virtual-scroll.component.ts","../../../node_modules/tslib/tslib.es6.js","../../../projects/ngx-lib/list/list.component.html","../../../projects/ngx-lib/list/list.component.ts","../../../projects/ngx-lib/list/list.module.ts"],"names":["VirtualScrollComponent","element","renderer","zone","_this","this","totalRows","bufferAmount","scrollAnimationTime","doNotCheckAngularZone","refreshHandler","refresh","isTable","change","EventEmitter","load","start","end","startupLoop","lastScrollHeight","lastTopPadding","Object","defineProperty","prototype","_parentScroll","addParentEventHandlers","ngOnInit","scrollbarWidth","scrollbarHeight","parentScroll","nativeElement","ngOnDestroy","removeParentEventHandlers","ngOnChanges","changes","previousStart","undefined","previousEnd","previousValue","ieVer","detectIE","setStyle","ua","window","navigator","userAgent","msie","indexOf","parseInt","substring","rv","edge","forceViewportUpdate","runOutsideAngular","requestAnimationFrame","calculateItems","scrollInto","index","el","Window","document","body","getElementsOffset","animationRequest","d","calculateDimensions","scrollTop","Math","floor","itemsPerRow","childHeight","min","currentTween","stop","tween.Tween","to","easing","tween.Easing","Quadratic","Out","onUpdate","data","isNaN","setProperty","onStop","cancelAnimationFrame","animate","time","update","_object","disposeScrollHandler","listen","_","throttle","leading","trailing","debounce","disposeResizeHandler","countItemsPerRow","offsetTop","children","contentElementRef","length","containerElementRef","contentDimensions","itemCount","viewWidth","clientWidth","viewHeight","clientHeight","childWidth","content","getBoundingClientRect","width","height","max","itemsPerRowByCalc","itemsPerCol","elScrollTop","pageYOffset","documentElement","scrollHeight","shimElementRef","NgZone","assertNotInAngularZone","indexByScrollTop","ceil","maxStartEnd","modEnd","maxStart","startRow","topPadding","buffer","run","addAtStart","calculatedChildHeight","emit","i0","ɵɵdirectiveInject","ElementRef","Renderer2","selectors","contentQueries","rf","ctx","dirIndex","i0.ɵɵelement","i0.ɵɵelementStart","i0.ɵɵprojection","i0.ɵɵelementEnd","VirtualScrollModule","declarations","exports","create","__values","o","s","Symbol","iterator","m","i","call","next","value","done","TypeError","i0.ɵɵelementContainerStart","i0.ɵɵtext","i0.ɵɵelementContainerEnd","i0.ɵɵadvance","i0.ɵɵtextInterpolate","i0.ɵɵlistener","i0.ɵɵproperty","ctx_r11","isAllSelected","unSelectedItems","size","selectedItems","getIsAllSelectedForActions","disabled","selectionTypeForActions","SELECTION_TYPE_FOR_ACTIONS","Single","i0.ɵɵclassMapInterpolate1","i0.ɵɵpropertyInterpolate","i0.ɵɵtextInterpolate1","i0.ɵɵtemplate","ctx_r33","sortBy","field_r16","ApiName","isAsc","$event","ɵɵpureFunction5","_c7","ctx_r12","supportSorting","pressedColumn","j_r17","Multi","uiControl","ControlFields","ɵɵrestoreView","_r36_1","ɵɵnextContext","onListHeaderMouseEnter","onListHeaderMouseLeave","onListResize","i0.ɵɵelementContainer","_r42_1","onListChange","ctx_r7","nativeWindow","isReport","ɵɵpureFunction2","_c9","ɵɵpureFunction1","_c3$1","ctx_r52","isTouchDevice","pepperiObjectInput_r47","Data","UID","SEPARATOR","Type","hoveredItemId","getIsSelectedForActions","IsSelectableForActions","ctx_r53","_r63_1","$implicit","onTableRowMouseLeave","onCustomizeFieldClick","onCustomizeFieldMenuClicked","itemClicked","_c11","ctx_r50","calculatedObjectHeight","showItems","firstFieldAsLink","IsEditable","objectId","parentId","searchCode","disableSelectionItems","LAYOUT_TYPE","PepperiTable","listType","selectedItemId","pageType","ctx_r73","VIEW_TYPE","_r79_1","onCardMouseLeave","i0.ɵɵclassMap","ctx_r51","checkForChanges","isCardView","getThumbnailsLayout","ctx_r3","trackByFunc","PepperiListComponent","layoutService","cd","currentListTypeTranslation","noDataFoundMsg","hideAllSelectionInMulti","top","supportResizing","isPrinting","layoutType","totalsRow","notifyThumbnailClicked","notifyFieldClicked","notifyMenuItemClicked","notifyValueChanged","notifyListChanged","notifySortingChanged","notifySelectedItemsChanged","notifySelectAllSingleActionClicked","notifySingleActionClicked","notifyListLoad","hasColumnWidthOfTypePercentage","items","showSelection","itemsCounter","Map","lockEvents","containerWidth","startX","startWidth","tableStartWidth","isUserSelected","useVirtualScroll","onResize$","pipe","delay","subscribe","screenSize","setContainerWidth","unsubscribe","saveSortingToSession","selectionCheckBoxWidth","style","getComputedStyle","parentElement","containerFluidSpacing","paddingLeft","paddingRight","parentContainer","rowHeaderWidthToSub","offsetWidth","onMouseDown","event","removeTable","cleanItems","getTopItems","TOP_ITEMS_TABLE","TOP_ITEMS_THUMBNAILS","toggleItems","isVisible","disableScroll","off","on","updateScrollItems","startIndex","endIndex","loadInChunks","scrollItems","slice","setSelectionItems","itemId","uniqItemId","isChecked","delete","set","getUniqItemId","itemType","isItemSelected","isSelected","SingleAction","has","setLayout","self","forEach","cf","ColumnWidth","FieldType","FIELD_TYPE","Image","Signature","NumberIntegerQuantitySelector","NumberRealQuantitySelector","NumberIntegerForMatrix","NumberRealForMatrix","Package","Layout","XAlignment","detectChanges","calcColumnsWidth","Date","getTime","filter","ColumnWidthType","totalFixedColsWidth","map","reduce","sum","current","innerWidth","totalCalcColsWidth","totalColsWidth","calcColumnWidthPercentage","uiControlField","calcColumnWidth","calcTitleColumnWidthString","calcColumnWidthString","currentFixedWidth","initResizeData","onListResizeStart","apiName","x","target","closest","virtualScroll","noVirtualScrollCont","widthToAdd","isRtl","MINIMUM_COLUMN_WIDTH","onListResizeEnd","$","srcElement","parents","self_1","setTimeout","onListSortingChange","getItemsFromApi","fromIndex","toIndex","onListLoad","getParentContainer","onValueChanged","valueChanged","customizeFieldClickedData","getIsDisabled","pepperiObjectInput","res","getIsAllSelected","_c","_d","toString","setIsAllSelected","selectAllCB","checked","selectAllItemsForActions","e","source","isIndeterminate","clear","filteredItems","item","isSelectableForActions","selectItemForActions","setItemClicked","objectSingleData","None","id","selected","currentList","currentListCount","onTableRowMouseEnter","onCardMouseEnter","PepperiCard","winResize","Array","getUIControl","initListData","viewType","itemClass","Table","Card","scrollingElement","scrollTo","focusOnAnItem","updateListItems","numberOfStartItems","getNumberOfStartItems","result","items_1","items_1_1","SCREEN_SIZE","XL","LG","MD","SM","XS","setSelectedIds","selectedIds","selectedIds_1","selectedIds_1_1","tmp","split","setSelectionDataInSession","TOP_ITEMS_ARRAY","updateListItem","findIndex","itemIndex","getSelectedItemsData","isForEdit","SelectionData","selectionType","rows","rowTypes","items_2","itemTypes_1","currentList_1","push","from","values","initCollectionFromState","collectionType","collection","getIsItemEditable","uid","getItemDataByID","_a","find","TOP_ITEMS_DEFAULT","SELECTED_ITEMS_STATE_KEY","UN_SELECTED_ITEMS_STATE_KEY","ALL_SELECTED_STATE_KEY","SORT_BY_STATE_KEY","ASCENDING_STATE_KEY","i1","LayoutService","ChangeDetectorRef","viewQuery","ɵɵresolveDocument","ɵɵresolveWindow","pepperiIconRegistry","registerIcons","pepperiIconArrowDown","pepperiIconArrowEither","pepperiIconArrowUp","PepperiListModule","ɵɵinject","i1$1","PepperiIconRegistry","imports","CommonModule","MatCommonModule","MatCheckboxModule","MatRadioModule","MatIconModule","PepperiModule","PepperiIconModule","PepperiFormModule"],"mappings":"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","sourcesContent":["import { Component, ContentChild, ElementRef, EventEmitter, Input, NgModule, NgZone, OnChanges,\r\n    OnDestroy, OnInit, Output, Renderer2, SimpleChanges, ViewChild } from '@angular/core';\r\n\r\nimport * as tween from '@tweenjs/tween.js';\r\ndeclare var _: any;\r\n\r\nexport interface ChangeEvent {\r\n    start?: number;\r\n    end?: number;\r\n    fromIndex?: number;\r\n    toIndex?: number;\r\n    addAtStart?: boolean;\r\n    calculatedChildHeight?: number;\r\n}\r\n\r\n@Component({\r\n    selector: 'virtual-scroll,[virtualScroll]',\r\n    exportAs: 'virtualScroll',\r\n    template: `\r\n        <div class=\"total-padding\" #shim></div>\r\n        <div class=\"scrollable-content\" #content>\r\n            <ng-content></ng-content>\r\n        </div>\r\n    `,\r\n    host: {\r\n        '[style.overflow-y]': \"parentScroll ? 'hidden' : 'auto'\"\r\n    },\r\n    styles: [\r\n        `\r\n    :host {\r\n        overflow: hidden;\r\n        position: relative;\r\n        display: block;\r\n        -webkit-overflow-scrolling: touch;\r\n    }\r\n    .scrollable-content {\r\n        top: 0;\r\n        left: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        position: absolute;\r\n        //   z-index:495;\r\n    }\r\n    .total-padding {\r\n        width: 1px;\r\n        opacity: 0;\r\n    }\r\n\r\n    .rtl {\r\n        .scrollable-content {\r\n            left: unset;\r\n            right: 0;\r\n        }\r\n    }\r\n  `\r\n    ]\r\n})\r\nexport class VirtualScrollComponent implements OnInit, OnChanges, OnDestroy {\r\n    //@Input()\r\n    //items: any[] = [];\r\n\r\n    @Input()\r\n    totalRows: number = 0;\r\n\r\n    @Input()\r\n    scrollbarWidth: number;\r\n\r\n    @Input()\r\n    scrollbarHeight: number;\r\n\r\n    @Input()\r\n    childWidth: number;\r\n\r\n    @Input()\r\n    childHeight: number;\r\n\r\n    @Input()\r\n    bufferAmount: number = 0;\r\n\r\n    @Input()\r\n    scrollAnimationTime: number = 1500;\r\n\r\n    @Input()\r\n    doNotCheckAngularZone: boolean = false;\r\n\r\n    private refreshHandler = () => {\r\n        this.refresh(true);\r\n    }\r\n    private _parentScroll: Element | Window;\r\n    @Input()\r\n    set parentScroll(element: Element | Window) {\r\n        if (this._parentScroll === element) {\r\n            return;\r\n        }\r\n        this._parentScroll = element;\r\n        this.addParentEventHandlers(this._parentScroll);\r\n    }\r\n\r\n    get parentScroll(): Element | Window {\r\n        return this._parentScroll;\r\n    }\r\n\r\n    @Input()\r\n    isTable: boolean = false;\r\n\r\n    //@Output()\r\n    //update: EventEmitter<any[]> = new EventEmitter<any[]>();\r\n    //viewPortItems: any[];\r\n\r\n    @Output()\r\n    change: EventEmitter<ChangeEvent> = new EventEmitter<ChangeEvent>();\r\n\r\n    @Output()\r\n    load: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    @Output()\r\n    start: EventEmitter<ChangeEvent> = new EventEmitter<ChangeEvent>();\r\n\r\n    @Output()\r\n    end: EventEmitter<ChangeEvent> = new EventEmitter<ChangeEvent>();\r\n\r\n    @ViewChild('content', { read: ElementRef })\r\n    contentElementRef: ElementRef;\r\n\r\n    @ViewChild('shim', { read: ElementRef })\r\n    shimElementRef: ElementRef;\r\n\r\n    @ContentChild('container')\r\n    containerElementRef: ElementRef;\r\n\r\n    previousStart: number;\r\n    previousEnd: number;\r\n    startupLoop: boolean = true;\r\n    currentTween: any;\r\n\r\n    private disposeScrollHandler: () => void | undefined;\r\n    private disposeResizeHandler: () => void | undefined;\r\n\r\n    /** Cache of the last scroll height to prevent setting CSS when not needed. */\r\n    private lastScrollHeight = -1;\r\n\r\n    /** Cache of the last top padding to prevent setting CSS when not needed. */\r\n    private lastTopPadding = -1;\r\n\r\n    constructor(public element: ElementRef, private renderer: Renderer2, private zone: NgZone) { }\r\n\r\n    ngOnInit() {\r\n        this.scrollbarWidth = 0; // this.element.nativeElement.offsetWidth - this.element.nativeElement.clientWidth;\r\n        this.scrollbarHeight = 0; // this.element.nativeElement.offsetHeight - this.element.nativeElement.clientHeight;\r\n\r\n        if (!this.parentScroll) {\r\n            this.addParentEventHandlers(this.element.nativeElement);\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.removeParentEventHandlers();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        this.previousStart = undefined;\r\n        this.previousEnd = undefined;\r\n        const totalRows = (changes as any).totalRows || {};\r\n        if (((changes as any).totalRows !== undefined && totalRows.previousValue === undefined) ||\r\n            totalRows.previousValue !== undefined) {\r\n            this.startupLoop = true;\r\n        }\r\n\r\n        var ieVer = this.detectIE();\r\n        var headerRowHeight = '34px';\r\n\r\n        // Set padding top for the table view because the header row.\r\n        //this.renderer.setStyle(this.contentElementRef.nativeElement, 'padding-top', this.isTable ? headerRowHeight : '0');\r\n\r\n        if (!ieVer || ieVer >= 16) {\r\n            // not IE and version < 16\r\n            this.renderer.setStyle(this.element.nativeElement, 'top', '0');\r\n        } else {\r\n            this.renderer.setStyle(this.element.nativeElement, 'top', headerRowHeight);\r\n        }\r\n\r\n        //Only for IE browsers\r\n        /*  let ua = navigator.userAgent;\r\n        if (this.isTable && (ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0 || ua.indexOf('Edge/') >= 0)) {\r\n            this.renderer.setStyle(this.element.nativeElement, 'top', headerRowHeight);\r\n        }\r\n        else {\r\n            this.renderer.setStyle(this.element.nativeElement, 'top', '0');\r\n        }*/\r\n\r\n        this.refresh();\r\n    }\r\n\r\n    detectIE(): any {\r\n        var ua = window.navigator.userAgent;\r\n\r\n        // Test values; Uncomment to check result …\r\n\r\n        // IE 10\r\n        // ua = 'Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Trident/6.0)';\r\n\r\n        // IE 11\r\n        // ua = 'Mozilla/5.0 (Windows NT 6.3; Trident/7.0; rv:11.0) like Gecko';\r\n\r\n        // Edge 12 (Spartan)\r\n        // ua = 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.71 Safari/537.36 Edge/12.0';\r\n\r\n        // Edge 13\r\n        // ua = 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2486.0 Safari/537.36 Edge/13.10586';\r\n\r\n        var msie = ua.indexOf('MSIE ');\r\n        if (msie > 0) {\r\n            // IE 10 or older => return version number\r\n            return parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\r\n        }\r\n\r\n        var trident = ua.indexOf('Trident/');\r\n        if (trident > 0) {\r\n            // IE 11 => return version number\r\n            var rv = ua.indexOf('rv:');\r\n            return parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10);\r\n        }\r\n\r\n        var edge = ua.indexOf('Edge/');\r\n        if (edge > 0) {\r\n            // Edge (IE 12+) => return version number\r\n            return parseInt(ua.substring(edge + 5, ua.indexOf('.', edge)), 10);\r\n        }\r\n\r\n        // other browser\r\n        return false;\r\n    }\r\n\r\n    refresh(forceViewportUpdate: boolean = false) {\r\n        this.zone.runOutsideAngular(() => {\r\n            requestAnimationFrame(() => this.calculateItems(forceViewportUpdate));\r\n        });\r\n    }\r\n\r\n    scrollInto(index: any) {\r\n        let el: Element = this.parentScroll instanceof Window ? document.body : this.parentScroll || this.element.nativeElement;\r\n        let offsetTop = this.getElementsOffset();\r\n        //let index: number = (this.items || []).indexOf(item);\r\n        if (index < 0 || index >= this.totalRows) return;\r\n\r\n        let d = this.calculateDimensions();\r\n        let scrollTop = Math.floor(index / d.itemsPerRow) * d.childHeight - d.childHeight * Math.min(index, this.bufferAmount);\r\n\r\n        let animationRequest;\r\n\r\n        if (this.currentTween !== undefined) { this.currentTween.stop(); }\r\n\r\n        // totally disable animate\r\n        if (!this.scrollAnimationTime) {\r\n            el.scrollTop = scrollTop;\r\n            return;\r\n        }\r\n\r\n        this.currentTween = new tween.Tween({ scrollTop: el.scrollTop })\r\n            .to({ scrollTop }, this.scrollAnimationTime)\r\n            .easing(tween.Easing.Quadratic.Out)\r\n            .onUpdate(data => {\r\n                if (isNaN(data.scrollTop)) {\r\n                    return;\r\n                }\r\n                this.renderer.setProperty(el, 'scrollTop', data.scrollTop);\r\n                this.refresh(true);\r\n            })\r\n            .onStop(() => {\r\n                cancelAnimationFrame(animationRequest);\r\n            })\r\n            .start();\r\n\r\n        const animate = (time?) => {\r\n            this.currentTween.update(time);\r\n            if (this.currentTween._object.scrollTop !== scrollTop) {\r\n                this.zone.runOutsideAngular(() => {\r\n                    animationRequest = requestAnimationFrame(animate);\r\n                });\r\n            }\r\n        };\r\n\r\n        animate();\r\n    }\r\n\r\n    private addParentEventHandlers(parentScroll: Element | Window) {\r\n        this.removeParentEventHandlers();\r\n        if (parentScroll) {\r\n            this.zone.runOutsideAngular(() => {\r\n                this.disposeScrollHandler = this.renderer.listen(parentScroll, 'mousewheel', _.throttle(this.refreshHandler, 20, { leading: false, trailing: true }));\r\n                this.renderer.listen(parentScroll, 'scroll', _.debounce(this.refreshHandler, 150));\r\n\r\n                //this.renderer.listen(parentScroll, 'scroll', _.debounce(_.throttle(this.refreshHandler, 150), 50));\r\n\r\n                if (parentScroll instanceof Window) {\r\n                    this.disposeScrollHandler = this.renderer.listen('window', 'resize', _.debounce(this.refreshHandler, 250));\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    private removeParentEventHandlers() {\r\n        if (this.disposeScrollHandler) {\r\n            this.disposeScrollHandler();\r\n            this.disposeScrollHandler = undefined;\r\n        }\r\n        if (this.disposeResizeHandler) {\r\n            this.disposeResizeHandler();\r\n            this.disposeResizeHandler = undefined;\r\n        }\r\n    }\r\n\r\n    private countItemsPerRow() {\r\n        let offsetTop;\r\n        let itemsPerRow;\r\n        let children = this.contentElementRef.nativeElement.children;\r\n        for (itemsPerRow = 0; itemsPerRow < children.length; itemsPerRow++) {\r\n            if (offsetTop != undefined && offsetTop !== children[itemsPerRow].offsetTop) break;\r\n            offsetTop = children[itemsPerRow].offsetTop;\r\n        }\r\n        return itemsPerRow;\r\n    }\r\n\r\n    private getElementsOffset(): number {\r\n        let offsetTop = 0;\r\n        if (this.containerElementRef && this.containerElementRef.nativeElement) {\r\n            offsetTop += this.containerElementRef.nativeElement.offsetTop;\r\n        }\r\n        if (this.parentScroll) {\r\n            offsetTop += this.element.nativeElement.offsetTop;\r\n        }\r\n        return offsetTop;\r\n    }\r\n\r\n    private calculateDimensions() {\r\n        let el: Element = this.parentScroll instanceof Window ? document.body : this.parentScroll || this.element.nativeElement;\r\n        let itemCount = this.totalRows;\r\n        let viewWidth = el.clientWidth - this.scrollbarWidth;\r\n        let viewHeight = el.clientHeight - this.scrollbarHeight;\r\n\r\n        let contentDimensions;\r\n        if (this.childWidth == undefined || this.childHeight == undefined) {\r\n            let content = this.contentElementRef.nativeElement;\r\n            if (this.containerElementRef && this.containerElementRef.nativeElement) {\r\n                content = this.containerElementRef.nativeElement;\r\n            }\r\n            contentDimensions = content.children[0]\r\n                ? content.children[0].getBoundingClientRect()\r\n                : {\r\n                    width: viewWidth,\r\n                    height: viewHeight\r\n                };\r\n        }\r\n\r\n        let childWidth = this.childWidth || contentDimensions.width;\r\n        let childHeight = this.childHeight || contentDimensions.height;\r\n\r\n        let itemsPerRow = Math.max(1, this.countItemsPerRow());\r\n        let itemsPerRowByCalc = Math.max(1, Math.floor(viewWidth / childWidth));\r\n        let itemsPerCol = Math.max(1, Math.floor(viewHeight / childHeight));\r\n        let elScrollTop = this.parentScroll instanceof Window ? window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0 : el.scrollTop;\r\n        let scrollTop = Math.max(0, elScrollTop);\r\n\r\n        var scrollHeight = childHeight * Math.floor(itemCount / itemsPerRow) + (itemCount % itemsPerRow != 0 ? childHeight : 0);\r\n\r\n        let ua = navigator.userAgent;\r\n        /*if (this.isTable && (ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0 || ua.indexOf('Edge/') >= 0)) {\r\n            scrollHeight += 34;\r\n        }*/\r\n        if (itemsPerCol === 1 && Math.floor((scrollTop / scrollHeight) * itemCount) + itemsPerRowByCalc >= itemCount) {\r\n            itemsPerRow = itemsPerRowByCalc;\r\n        }\r\n\r\n        if (scrollHeight !== this.lastScrollHeight) {\r\n            this.renderer.setStyle(this.shimElementRef.nativeElement, 'height', `${scrollHeight}px`);\r\n            this.lastScrollHeight = scrollHeight;\r\n        }\r\n\r\n        return {\r\n            itemCount: itemCount,\r\n            viewWidth: viewWidth,\r\n            viewHeight: viewHeight,\r\n            childWidth: childWidth,\r\n            childHeight: childHeight,\r\n            itemsPerRow: itemsPerRow,\r\n            itemsPerCol: itemsPerCol,\r\n            itemsPerRowByCalc: itemsPerRowByCalc,\r\n            scrollHeight\r\n        };\r\n    }\r\n\r\n    private calculateItems(forceViewportUpdate: boolean = false) {\r\n        if (!this.doNotCheckAngularZone) {\r\n            NgZone.assertNotInAngularZone();\r\n        }\r\n\r\n        let el = this.parentScroll instanceof Window ? document.body : this.parentScroll || this.element.nativeElement;\r\n        let d = this.calculateDimensions();\r\n\r\n        //let items = this.items || [];\r\n        let offsetTop = this.getElementsOffset();\r\n        let elScrollTop = this.parentScroll instanceof Window ? window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0 : el.scrollTop;\r\n\r\n        if (elScrollTop > d.scrollHeight) {\r\n            elScrollTop = d.scrollHeight + offsetTop;\r\n        }\r\n\r\n        let scrollTop = Math.max(0, elScrollTop - offsetTop);\r\n        let indexByScrollTop = ((scrollTop / d.scrollHeight) * d.itemCount) / d.itemsPerRow;\r\n        let end = Math.min(d.itemCount, Math.ceil(indexByScrollTop) * d.itemsPerRow + d.itemsPerRow * (d.itemsPerCol + 1));\r\n\r\n        let maxStartEnd = end;\r\n        const modEnd = end % d.itemsPerRow;\r\n        if (modEnd) {\r\n            maxStartEnd = end + d.itemsPerRow - modEnd;\r\n        }\r\n        let maxStart = Math.max(0, maxStartEnd - d.itemsPerCol * d.itemsPerRow - d.itemsPerRow);\r\n        let start = Math.min(maxStart, Math.floor(indexByScrollTop) * d.itemsPerRow);\r\n\r\n        let startRow = Math.ceil(start / d.itemsPerRow);\r\n\r\n        const topPadding = this.totalRows === 0 ? 0 : d.childHeight * startRow - d.childHeight * Math.min(startRow, this.bufferAmount);\r\n\r\n        if (topPadding !== this.lastTopPadding) {\r\n            this.renderer.setStyle(this.contentElementRef.nativeElement, 'transform', `translateY(${topPadding}px)`);\r\n            this.renderer.setStyle(this.contentElementRef.nativeElement, 'webkitTransform', `translateY(${topPadding}px)`);\r\n            this.lastTopPadding = topPadding;\r\n        }\r\n\r\n        let buffer = this.bufferAmount * d.itemsPerRow;\r\n        start = !isNaN(start) ? start : -1;\r\n        end = !isNaN(end) ? end : -1;\r\n        start -= buffer;\r\n        start = Math.max(0, start);\r\n        end += buffer;\r\n        end = Math.min(this.totalRows, end);\r\n\r\n        if (start !== this.previousStart || end !== this.previousEnd || forceViewportUpdate === true) {\r\n            this.zone.run(() => {\r\n                // update the scroll list\r\n                end = end >= 0 ? end : 0; // To prevent from accidentally selecting the entire array with a negative 1 (-1) in the end position.\r\n\r\n                //this.viewPortItems = this.items.slice(start, end);\r\n                //this.update.emit(this.viewPortItems);\r\n\r\n                // emit 'start' event\r\n                //if (start !== this.previousStart && this.startupLoop === false) {\r\n                //    this.start.emit({ start, end });\r\n                //}\r\n\r\n                // emit 'end' event\r\n                //if (end !== this.previousEnd && this.startupLoop === false) {\r\n                //    this.end.emit({ start, end });\r\n                //}\r\n\r\n                // To know if to add at the start of the list or at the end.\r\n                let addAtStart = this.previousEnd >= end;\r\n                this.previousStart = start;\r\n                this.previousEnd = end;\r\n\r\n                if (this.startupLoop === true) {\r\n                    this.refresh();\r\n                } else {\r\n                    let calculatedChildHeight = d.childHeight;\r\n                    this.change.emit({ start, end, addAtStart, calculatedChildHeight });\r\n                }\r\n            });\r\n        } else if (this.startupLoop === true) {\r\n            this.startupLoop = false;\r\n            // Added to know when the scroll is ready (UI elements are displayed already).\r\n            this.load.emit(); \r\n            this.refresh();\r\n        }\r\n    }\r\n}\r\n\r\n@NgModule({\r\n    exports: [VirtualScrollComponent],\r\n    declarations: [VirtualScrollComponent]\r\n})\r\nexport class VirtualScrollModule { }\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","<ng-container *ngIf=\"totalRows == 0\">\r\n    <div class=\"no-data\">{{ noDataFoundMsg }}</div>\r\n</ng-container>\r\n<ng-container *ngIf=\"totalRows > 0\">\r\n    <!--\r\n            appDebounceMouseMove\r\n            [debounceTime]=\"10\"\r\n            (debounceMouseMove)=\"onListResize($event)\" -->\r\n    <div *ngIf=\"isTable\" #tableHeader class=\"table-header\"\r\n        [ngClass]=\"{ 'below-header-and-top-bar' : parentScroll == null }\" (mouseup)=\"onListResizeEnd($event)\"\r\n        (mouseenter)=\"onListHeaderMouseEnter($event)\" (mouseleave)=\"onListHeaderMouseLeave($event)\"\r\n        (mousemove)=\"onListResize($event)\">\r\n        <fieldset class=\"table-header-fieldset\">\r\n            <mat-checkbox *ngIf=\"selectionTypeForActions !== SELECTION_TYPE_FOR_ACTIONS.None\" #selectAllCB\r\n                class=\"pull-left flip row-selection\" type=\"checkbox\" [ngStyle]=\"{\r\n                        visibility:\r\n                            selectionTypeForActions == SELECTION_TYPE_FOR_ACTIONS.Single || (selectionTypeForActions == SELECTION_TYPE_FOR_ACTIONS.Multi && hideAllSelectionInMulti) ? 'hidden' : 'visible'\r\n                    }\"\r\n                [indeterminate]=\"isAllSelected ? unSelectedItems.size > 0 && unSelectedItems.size < totalRows : (selectedItems.size > 0 && !getIsAllSelectedForActions())\"\r\n                [disabled]=\"disabled || selectionTypeForActions === SELECTION_TYPE_FOR_ACTIONS.Single\"\r\n                [checked]=\"getIsAllSelectedForActions()\" (change)=\"selectAllItemsForActions($event)\"></mat-checkbox>\r\n            <fieldset>\r\n                <div *ngFor=\"let field of uiControl?.ControlFields; let j = index\" class=\"header-column pull-left flip\"\r\n                    [ngStyle]=\"{ width: field.calcTitleColumnWidthString }\" [ngClass]=\"{\r\n                            'support-sorting': supportSorting,\r\n                            'has-sorting': field.ApiName === sortBy,\r\n                            'is-resizing': field.ApiName === pressedColumn,\r\n                            'is-first': j === 0 && selectionTypeForActions !== SELECTION_TYPE_FOR_ACTIONS.Multi,\r\n                            'is-last': j === uiControl?.ControlFields?.length - 1\r\n                        }\"\r\n                    (click)=\"supportSorting ? (onListSortingChange(field.ApiName, sortBy !== null && sortBy != field.ApiName ? true : !isAsc, $event)) : false\">\r\n\r\n                    <label *ngIf=\"field.Title != ''\" id=\"{{ field.ApiName }}\"\r\n                        class=\"header-label body-sm pull-left flip text-align-{{ field.Layout.XAlignment }}\"\r\n                        title=\"{{ field.Title }}\">\r\n                        {{ field.Title }}\r\n                    </label>\r\n                    <!-- (click)=\"onListSortingChange(field.ApiName, sortBy !== null && sortBy != field.ApiName ? true : !isAsc)\" -->\r\n                    <label *ngIf=\"field.Title == ''\" id=\"{{ field.ApiName }}\"\r\n                        class=\"header-label body-sm pull-left flip\">&nbsp;</label>\r\n\r\n                    <div *ngIf=\"supportResizing\" class=\"resizeBox pull-right flip\"\r\n                        (mousedown)=\"onListResizeStart($event, field.ApiName)\">\r\n                        <mat-icon>\r\n                            <pep-icon name=\"arrow-up\" class=\"asc\"></pep-icon>\r\n                        </mat-icon>\r\n                    </div>\r\n\r\n                    <!-- The onListSortingChange moved to the column click -->\r\n                    <!-- (click)=\"onListSortingChange(field.ApiName, true)\" -->\r\n                    <div *ngIf=\"supportSorting\" class=\"sortingBox pull-left flip\"\r\n                        [ngClass]=\"{ 'has-sorting': field.ApiName === sortBy }\">\r\n                        <mat-icon *ngIf=\"field.ApiName !== sortBy\">\r\n                            <pep-icon name=\"arrow-either\" class=\"asc\"></pep-icon>\r\n                        </mat-icon>\r\n\r\n                        <mat-icon *ngIf=\"field.ApiName === sortBy && !isAsc\"\r\n                            [ngClass]=\"{ 'sort-by': field.ApiName === sortBy && isAsc }\"\r\n                            title=\"{{ 'LIST.SORT_ASC' | translate }}\">\r\n                            <pep-icon name=\"arrow-down\" class=\"asc\"></pep-icon>\r\n                        </mat-icon>\r\n                        <mat-icon *ngIf=\"field.ApiName === sortBy && isAsc\"\r\n                            [ngClass]=\"{ 'sort-by': field.ApiName === sortBy && !isAsc }\"\r\n                            title=\"{{ 'LIST.SORT_DESC' | translate }}\">\r\n                            <pep-icon name=\"arrow-down\" class=\"desc\"></pep-icon>\r\n                        </mat-icon>\r\n                    </div>\r\n                </div>\r\n            </fieldset>\r\n        </fieldset>\r\n    </div>\r\n\r\n    <virtual-scroll *ngIf=\"useVirtualScroll\" [totalRows]=\"totalRows\" [isTable]=\"isTable\" (load)=\"onListLoad($event)\"\r\n        (change)=\"onListChange($event)\" [parentScroll]=\"parentScroll ? parentScroll : nativeWindow\"\r\n        [bufferAmount]=\"isReport ? (isTable ? 20 : 3) : isTable ? 15 : 3\"\r\n        [ngClass]=\"{ 'table-body': isTable, 'cards-body': !isTable }\">\r\n        <ng-container *ngTemplateOutlet=\"listData\"></ng-container>\r\n    </virtual-scroll>\r\n\r\n    <!-- <virtual-scroller *ngIf=\"useVirtualScroll\" [totalItems]=\"totalRows\" (vsChange)=\"onScrollerListChange($event)\"\r\n        [parentScroll]=\"parentScroll ? parentScroll : nativeWindow\"\r\n        [ngClass]=\"{ 'table-body': isTable, 'cards-body': !isTable }\">\r\n        <ng-container *ngTemplateOutlet=\"listData\"></ng-container>\r\n    </virtual-scroller> -->\r\n\r\n    <div #noVirtualScrollCont *ngIf=\"!useVirtualScroll\" [ngClass]=\"{ 'table-body': isTable, 'cards-body': !isTable }\">\r\n        <ng-container *ngTemplateOutlet=\"listData\"></ng-container>\r\n    </div>\r\n    <ng-container *ngTemplateOutlet=\"listTotals\"></ng-container>\r\n</ng-container>\r\n\r\n<!-- <img style=\"display:none;\" src=\"{{ envVariables.AssetsDomain + webappDirectory }}/assets/images/no-image.svg\" /> -->\r\n\r\n<ng-template #listData>\r\n    <ng-container *ngFor=\"let pepperiObjectInput of scrollItems; let index; let isFirst = first; trackBy: trackByFunc\">\r\n        <ng-container *ngIf=\"isTable\">\r\n            <div class=\"table-row\"\r\n                (mouseenter)=\"onTableRowMouseEnter($event, pepperiObjectInput?.Data?.UID, pepperiObjectInput?.Data?.Type)\"\r\n                (mouseleave)=\"onTableRowMouseLeave($event, pepperiObjectInput?.Data?.UID, pepperiObjectInput?.Data?.Type)\"\r\n                [ngClass]=\"{\r\n                        selected: isItemSelected(pepperiObjectInput?.Data?.UID, pepperiObjectInput?.Data?.Type),\r\n                        highlighted: pepperiObjectInput?.Data?.UID + SEPARATOR + pepperiObjectInput?.Data?.Type === selectedItemId\r\n                    }\"\r\n                [ngStyle]=\"{ height: calculatedObjectHeight, visibility: showItems || pepperiObjectInput ? 'visible' : 'hidden' }\">\r\n                <fieldset class=\"table-row-fieldset\"\r\n                    [ngStyle]=\"{ 'background-color': pepperiObjectInput?.Data?.BackgroundColor }\">\r\n                    <mat-checkbox\r\n                        *ngIf=\"selectionTypeForActions == SELECTION_TYPE_FOR_ACTIONS.Multi || selectionTypeForActions == SELECTION_TYPE_FOR_ACTIONS.SingleAction\"\r\n                        type=\"checkbox\" class=\"pull-left flip row-selection\"\r\n                        [disabled]=\"getIsDisabled(pepperiObjectInput)\" [ngStyle]=\"{\r\n                                visibility: isTouchDevice ||\r\n                                    pepperiObjectInput?.Data?.UID + SEPARATOR + pepperiObjectInput?.Data?.Type === hoveredItemId || isAllSelected || selectedItems.size > 0 ? 'visible' : 'hidden'\r\n                            }\"\r\n                        [checked]=\"getIsSelectedForActions(pepperiObjectInput?.Data?.UID, pepperiObjectInput?.Data?.IsSelectableForActions, pepperiObjectInput?.Data?.Type)\"\r\n                        (change)=\"selectItemForActions($event, pepperiObjectInput?.Data?.UID, pepperiObjectInput?.Data?.IsSelectableForActions, pepperiObjectInput?.Data?.Type)\">\r\n                    </mat-checkbox>\r\n                    <mat-radio-button *ngIf=\"selectionTypeForActions == SELECTION_TYPE_FOR_ACTIONS.Single\"\r\n                        name=\"selection\" class=\"pull-left flip row-selection pepperi-radio-button\"\r\n                        [disabled]=\"getIsDisabled(pepperiObjectInput)\"\r\n                        [checked]=\"getIsSelectedForActions(pepperiObjectInput?.Data?.UID, pepperiObjectInput?.Data?.IsSelectableForActions, pepperiObjectInput?.Data?.Type)\"\r\n                        (change)=\"selectItemForActions($event, pepperiObjectInput?.Data?.UID, pepperiObjectInput?.Data?.IsSelectableForActions, pepperiObjectInput?.Data?.Type)\">\r\n                    </mat-radio-button>\r\n                    <pep-form [checkForChanges]=\"checkForChanges\" [uiControlHeader]=\"uiControl\"\r\n                        [firstFieldAsLink]=\"firstFieldAsLink\" [pepperiObjectInput]=\"pepperiObjectInput\"\r\n                        [canEditObject]=\"!disabled && pepperiObjectInput?.IsEditable\" [objectId]=\"objectId\"\r\n                        [parentId]=\"parentId\" [searchCode]=\"searchCode\" [lockEvents]=\"disableSelectionItems\"\r\n                        [isReport]=\"isReport\" [layoutType]=\"LAYOUT_TYPE.PepperiTable\" [listType]=\"listType\" [isActive]=\"\r\n                                (pepperiObjectInput?.Data?.UID + SEPARATOR + pepperiObjectInput?.Data?.Type === selectedItemId ||\r\n                                pepperiObjectInput?.Data?.UID + SEPARATOR + pepperiObjectInput?.Data?.Type === hoveredItemId) && !isTouchDevice\r\n                            \" (notifyValueChanged)=\"onValueChanged($event)\"\r\n                        (notifyFieldClicked)=\"onCustomizeFieldClick($event)\"\r\n                        (notifyMenuItemClicked)=\"onCustomizeFieldMenuClicked($event)\"\r\n                        (click)=\"itemClicked($event, pepperiObjectInput)\" [pageType]=\"pageType\">\r\n                    </pep-form>\r\n                </fieldset>\r\n            </div>\r\n        </ng-container>\r\n\r\n        <ng-container *ngIf=\"!isTable\">\r\n            <div [class]=\"itemClass\"\r\n                (mouseenter)=\"onCardMouseEnter($event, pepperiObjectInput?.Data?.UID, pepperiObjectInput?.Data?.Type)\"\r\n                (mouseleave)=\"onCardMouseLeave($event, pepperiObjectInput?.Data?.UID, pepperiObjectInput?.Data?.Type)\"\r\n                [ngClass]=\"{\r\n                        selected: isItemSelected(pepperiObjectInput?.Data?.UID, pepperiObjectInput?.Data?.Type),\r\n                        highlighted: pepperiObjectInput?.Data?.UID + SEPARATOR + pepperiObjectInput?.Data?.Type === selectedItemId,\r\n                        cardView: isCardView\r\n                    }\" class=\"pull-left flip\"\r\n                [ngStyle]=\"{ height: calculatedObjectHeight, visibility: showItems || pepperiObjectInput ? 'visible' : 'hidden' }\">\r\n                <mat-checkbox *ngIf=\"showSelection\" class=\"pull-left flip card-selection\"\r\n                    [disabled]=\"getIsDisabled(pepperiObjectInput)\"\r\n                    [checked]=\"getIsSelectedForActions(pepperiObjectInput?.Data?.UID, pepperiObjectInput?.Data?.IsSelectableForActions, pepperiObjectInput?.Data?.Type)\"\r\n                    (change)=\"selectItemForActions($event, pepperiObjectInput?.Data?.UID, pepperiObjectInput?.Data?.IsSelectableForActions, pepperiObjectInput?.Data?.Type)\">\r\n                </mat-checkbox>\r\n                <pep-form [firstFieldAsLink]=\"isCardView ? firstFieldAsLink : false\" [checkForChanges]=\"checkForChanges\"\r\n                    [uiControlHeader]=\"uiControl\" [pepperiObjectInput]=\"pepperiObjectInput\" [isCardView]=\"isCardView\"\r\n                    [canEditObject]=\"!disabled && pepperiObjectInput?.IsEditable\" [objectId]=\"objectId\"\r\n                    [parentId]=\"parentId\" [searchCode]=\"searchCode\" [lockEvents]=\"disableSelectionItems\"\r\n                    [layoutType]=\"getThumbnailsLayout()\" [listType]=\"listType\" [isActive]=\"\r\n                            (pepperiObjectInput?.Data?.UID + SEPARATOR + pepperiObjectInput?.Data?.Type === selectedItemId ||\r\n                                pepperiObjectInput?.Data?.UID + SEPARATOR + pepperiObjectInput?.Data?.Type === hoveredItemId) && !isTouchDevice\r\n                        \" (notifyValueChanged)=\"onValueChanged($event)\"\r\n                    (notifyFieldClicked)=\"onCustomizeFieldClick($event)\"\r\n                    (notifyMenuItemClicked)=\"onCustomizeFieldMenuClicked($event)\"\r\n                    (click)=\"itemClicked($event, pepperiObjectInput)\" [pageType]=\"pageType\">\r\n                </pep-form>\r\n            </div>\r\n        </ng-container>\r\n    </ng-container>\r\n</ng-template>\r\n\r\n<ng-template #listTotals>\r\n    <div *ngIf=\"totalsRow?.length > 0 && totalsRow.length <= uiControl?.ControlFields.length\" class=\"table-total\">\r\n        <fieldset class=\"table-header-fieldset\">\r\n            <div *ngFor=\"let field of uiControl?.ControlFields; let j = index\" class=\"total-column pull-left flip\"\r\n                [ngStyle]=\"{ width: field.calcTitleColumnWidthString }\">\r\n                <label class=\"total-label body-sm text-align-{{ field.Layout.XAlignment }}\">\r\n                    {{ totalsRow[j] }}\r\n                </label>\r\n            </div>\r\n        </fieldset>\r\n    </div>\r\n</ng-template>","import {\r\n    Component, Input, Output, EventEmitter, OnInit, Renderer2, ViewChild, ElementRef,\r\n    ChangeDetectorRef, OnDestroy, OnChanges\r\n} from '@angular/core';\r\nimport { delay } from 'rxjs/operators';\r\nimport {\r\n    LAYOUT_TYPE, LayoutService, ObjectSingleData, UIControl, UIControlField,\r\n    FIELD_TYPE, ObjectsDataRow, SCREEN_SIZE, PepperiObjectChangedData, PepperiFieldClickedData\r\n} from '@pepperi-addons/ngx-lib';\r\nimport { VirtualScrollComponent, ChangeEvent } from './virtual-scroll.component';\r\n\r\nimport disableScroll from 'disable-scroll';\r\n\r\n// import { ApplicationState } from '../application-state/application-state';\r\n\r\nimport * as $ from 'jquery';\r\n\r\nexport enum SELECTION_TYPE_FOR_ACTIONS {\r\n    None,\r\n    Single,\r\n    Multi,\r\n    SingleAction\r\n}\r\nexport enum VIEW_TYPE {\r\n    None,\r\n    Card,\r\n    Line,\r\n    Table,\r\n    Map\r\n}\r\n\r\nexport interface ChangeSortingEvent {\r\n    sortBy: string;\r\n    isAsc: boolean;\r\n}\r\n\r\nexport class SelectionData {\r\n    selectionType: number;\r\n    rows: Array<any>;\r\n    rowTypes: Array<any>;\r\n}\r\n\r\n@Component({\r\n    selector: 'pep-list',\r\n    templateUrl: './list.component.html',\r\n    styleUrls: ['./list.component.scss'],\r\n    host: {\r\n        // '[style.width]': \"'inherit'\",\r\n        '(document:mousedown)': 'onMouseDown($event)',\r\n        '(window:resize)': 'winResize($event)'\r\n        // '(window:mouseup)': 'onListResizeEnd($event)',\r\n        // '(window:mousemove)': 'onListResize($event)'\r\n    }\r\n    // changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PepperiListComponent implements OnInit, OnChanges, OnDestroy {\r\n    static TOP_ITEMS_DEFAULT = 100;\r\n    static TOP_ITEMS_TABLE = 100;\r\n    static TOP_ITEMS_THUMBNAILS = 100;\r\n    static TOP_ITEMS_ARRAY = 2500;\r\n\r\n    static SELECTED_ITEMS_STATE_KEY = 'SelectedItems';\r\n    static UN_SELECTED_ITEMS_STATE_KEY = 'UnSelectedItems';\r\n    static ALL_SELECTED_STATE_KEY = 'AllSelected';\r\n    static SORT_BY_STATE_KEY = 'SortBy';\r\n    static ASCENDING_STATE_KEY = 'IsAscending';\r\n\r\n    static MINIMUM_COLUMN_WIDTH = 48;\r\n\r\n    @Input() currentListTypeTranslation = '';\r\n    @Input() noDataFoundMsg = 'Items not found';\r\n    @Input() selectionTypeForActions: SELECTION_TYPE_FOR_ACTIONS = SELECTION_TYPE_FOR_ACTIONS.Multi;\r\n    @Input() hideAllSelectionInMulti = false;\r\n\r\n    @Input() top = -1;\r\n    @Input() listType = '';\r\n    @Input() objectId = '0';\r\n    @Input() parentId = '0';\r\n    @Input() searchCode = '0';\r\n    // @Input() showTopBorder = false;\r\n    @Input() firstFieldAsLink = false;\r\n    @Input() supportSorting = true;\r\n    @Input() supportResizing = true;\r\n    @Input() parentScroll: Element | Window = null;\r\n    @Input() disabled = false;\r\n    @Input() isPrinting = false;\r\n    @Input() disableSelectionItems = false;\r\n    @Input() isReport = false;\r\n    @Input() layoutType: LAYOUT_TYPE = null;\r\n    @Input() pageType = '';\r\n    @Input() totalsRow = [];\r\n    @Input() isTouchDevice = false;\r\n\r\n    @Output() notifyThumbnailClicked: EventEmitter<ObjectSingleData> = new EventEmitter<ObjectSingleData>();\r\n    @Output() notifyFieldClicked: EventEmitter<any> = new EventEmitter<PepperiFieldClickedData>();\r\n    @Output() notifyMenuItemClicked: EventEmitter<any> = new EventEmitter<PepperiFieldClickedData>();\r\n    @Output() notifyValueChanged: EventEmitter<PepperiObjectChangedData> = new EventEmitter<PepperiObjectChangedData>();\r\n    @Output() notifyListChanged: EventEmitter<ChangeEvent> = new EventEmitter<ChangeEvent>();\r\n    @Output() notifySortingChanged: EventEmitter<ChangeSortingEvent> = new EventEmitter<ChangeSortingEvent>();\r\n\r\n    @Output() notifySelectedItemsChanged: EventEmitter<number> = new EventEmitter<number>();\r\n    @Output() notifySelectAllSingleActionClicked: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() notifySingleActionClicked: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    @Output() notifyListLoad: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    @ViewChild(VirtualScrollComponent) virtualScroll: VirtualScrollComponent;\r\n    @ViewChild('noVirtualScrollCont') noVirtualScrollCont: ElementRef;\r\n    @ViewChild('tableHeader') tableHeader: ElementRef;\r\n    @ViewChild('selectAllCB') selectAllCB: any;\r\n\r\n    LAYOUT_TYPE = LAYOUT_TYPE;\r\n    SELECTION_TYPE_FOR_ACTIONS = SELECTION_TYPE_FOR_ACTIONS;\r\n\r\n    public uiControl: UIControl = null;\r\n    public totalRows = -1;\r\n    itemClass: string;\r\n    isTable = false;\r\n    private hasColumnWidthOfTypePercentage = true;\r\n    public items: Array<ObjectSingleData> = null;\r\n    public showSelection = false;\r\n    isCardView = false;\r\n    private itemsCounter = 0;\r\n    showItems = true;\r\n    scrollItems: Array<ObjectSingleData>;\r\n\r\n    public SEPARATOR = ',';\r\n    public isAllSelected = false;\r\n    public selectedItems = new Map<string, string>();\r\n    public unSelectedItems = new Map<string, string>();\r\n\r\n    // public tableHeaderWidth: string;\r\n    nativeWindow: any = null;\r\n\r\n    selectedItemId = '';\r\n    hoveredItemId = '';\r\n\r\n    private lockEvents = false;\r\n    private containerWidth = 0;\r\n\r\n    screenSize: SCREEN_SIZE;\r\n\r\n    // headerIsInFocus = false;\r\n\r\n    // For resize\r\n    pressedColumn = '';\r\n    startX = 0;\r\n    startWidth = 0;\r\n    tableStartWidth = 0;\r\n\r\n    // For sorting\r\n    isAsc = true;\r\n    sortBy = '';\r\n    isUserSelected = false;\r\n    checkForChanges: any = null;\r\n    useVirtualScroll = true;\r\n    calculatedObjectHeight: string;\r\n\r\n    constructor(\r\n        private element: ElementRef,\r\n        private layoutService: LayoutService,\r\n        private cd: ChangeDetectorRef,\r\n        private renderer: Renderer2,\r\n        // private state: ApplicationState\r\n    ) {\r\n        this.layoutService.onResize$\r\n            .pipe(delay(0))\r\n            .subscribe(size => {\r\n                this.screenSize = size;\r\n            });\r\n\r\n        // this.checkForChanges = new Date().getTime();\r\n        // this.state.stateKey = location.href;\r\n        this.nativeWindow = window;\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.containerWidth = 0;\r\n    }\r\n\r\n    ngOnChanges(changes): void {\r\n        if (this.containerWidth <= 0) {\r\n            this.setContainerWidth();\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        if (this.notifyValueChanged) {\r\n            this.notifyValueChanged.unsubscribe();\r\n        }\r\n\r\n        if (this.notifyListChanged) {\r\n            this.notifyListChanged.unsubscribe();\r\n        }\r\n\r\n        if (this.notifySortingChanged) {\r\n            this.notifySortingChanged.unsubscribe();\r\n        }\r\n\r\n        if (this.notifyFieldClicked) {\r\n            this.notifyFieldClicked.unsubscribe();\r\n        }\r\n\r\n        if (this.notifyMenuItemClicked) {\r\n            this.notifyMenuItemClicked.unsubscribe();\r\n        }\r\n\r\n        if (this.notifyThumbnailClicked) {\r\n            this.notifyThumbnailClicked.unsubscribe();\r\n        }\r\n\r\n        this.saveSortingToSession();\r\n    }\r\n\r\n    setContainerWidth(): void {\r\n        const selectionCheckBoxWidth = this.selectionTypeForActions === SELECTION_TYPE_FOR_ACTIONS.Multi ? 44 : 0;\r\n\r\n        const rowHeight = 40; // the table row height (2.5rem * 16font-size).\r\n        const style = window.getComputedStyle(this.element.nativeElement.parentElement);\r\n        // The container-fluid class padding left + right + border\r\n        const containerFluidSpacing = parseInt(style.paddingLeft, 10) + parseInt(style.paddingRight, 10);\r\n\r\n        const parentContainer = this.element.nativeElement.parentElement.parentElement > 0 ?\r\n            this.element.nativeElement.parentElement.parentElement : this.element.nativeElement.parentElement;\r\n\r\n        // Calculate if vertical scroll should appear, if so set the scroll width. (this.totalRows + 1) + 1 is for the header row.\r\n        const scrollWidth = parentContainer.clientHeight < rowHeight * (this.totalRows + 1) ? 18 : 0; // 18 is the default scroll width.\r\n\r\n        // The selectionCheckBoxWidth width + containerFluidSpacing + scrollWidth.\r\n        const rowHeaderWidthToSub = containerFluidSpacing + selectionCheckBoxWidth + scrollWidth;\r\n        this.containerWidth = parentContainer.offsetWidth - rowHeaderWidthToSub;\r\n    }\r\n\r\n    saveSortingToSession(): void {\r\n        // this.state.setItemInState(PepperiListComponent.SORT_BY_STATE_KEY, this.sortBy);\r\n        // this.state.setItemInState(PepperiListComponent.ASCENDING_STATE_KEY, this.isAsc);\r\n        // this.state.writeToSession();\r\n    }\r\n\r\n    onMouseDown(event): void {\r\n        const self = this;\r\n\r\n        // if (!this.element.nativeElement.contains(event.target) || event.target.className === 'scrollable-content') {\r\n        //     setTimeout(() => {\r\n        //         if (self.selectionTypeForActions === SELECTION_TYPE_FOR_ACTIONS.Multi || self.selectionTypeForActions === SELECTION_TYPE_FOR_ACTIONS.SingleAction) {\r\n        //         }\r\n\r\n        //         // self.selectedItemId = '';\r\n        //         //self.hoveredItemId = '';\r\n        //     }, 500);\r\n        // }\r\n    }\r\n\r\n    removeTable(): void {\r\n        this.cleanItems();\r\n        this.uiControl = null;\r\n    }\r\n\r\n    private getTopItems(): number {\r\n        return this.isTable ? PepperiListComponent.TOP_ITEMS_TABLE : PepperiListComponent.TOP_ITEMS_THUMBNAILS;\r\n    }\r\n\r\n    private toggleItems(isVisible: boolean): void {\r\n        this.showItems = isVisible;\r\n        this.lockEvents = !isVisible;\r\n\r\n        if (this.useVirtualScroll) {\r\n            if (isVisible) {\r\n                disableScroll.off();\r\n            } else {\r\n                disableScroll.on();\r\n            }\r\n        }\r\n    }\r\n\r\n    private updateScrollItems(startIndex, endIndex, loadInChunks = true): void {\r\n        this.scrollItems = this.items.slice(startIndex, endIndex);\r\n        // if (!loadInChunks) {\r\n        //     this.scrollItems = this.items.slice(startIndex, endIndex).map((item) => item).filter((item) => item != null);\r\n        // } else {\r\n        //     // this.scrollItems = this.items.slice(startIndex, endIndex);\r\n\r\n        //     const ITEMS_RENDERED_AT_ONCE = 15;//this.isTable ? 1 : 7;\r\n        //     const INTERVAL_IN_MS = 10;\r\n\r\n        //     let currentIndex = 0;\r\n        //     const tmp = this.items.slice(startIndex, endIndex);\r\n        //     // this.scrollItems = [];\r\n\r\n        //     const interval = setInterval(() => {\r\n        //         const nextIndex = currentIndex + ITEMS_RENDERED_AT_ONCE;\r\n\r\n        //         for (let i = currentIndex; i < nextIndex; i++) {\r\n        //             // if (currentIndex === 0) {\r\n        //             //     this.scrollItems = [];\r\n        //             // }\r\n\r\n        //             if (i >= tmp.length) {\r\n        //                 clearInterval(interval);\r\n        //                 break;\r\n        //             }\r\n\r\n        //             if (this.scrollItems[i]) {\r\n        //                 this.scrollItems[i] = tmp[i];\r\n        //             } else {\r\n        //                 this.scrollItems.push(tmp[i]);\r\n        //             }\r\n        //         }\r\n\r\n        //         currentIndex += ITEMS_RENDERED_AT_ONCE;\r\n        //     }, INTERVAL_IN_MS);\r\n        // }\r\n    }\r\n\r\n    private setSelectionItems(itemId: string, uniqItemId: string, isChecked: boolean): void {\r\n        // Set selected item checkbox\r\n        if (this.isAllSelected) {\r\n            if (isChecked) {\r\n                this.unSelectedItems.delete(itemId);\r\n                this.selectedItems.set(itemId, uniqItemId);\r\n            } else {\r\n                this.selectedItems.delete(itemId);\r\n                this.unSelectedItems.set(itemId, uniqItemId);\r\n            }\r\n        } else {\r\n            if (isChecked) {\r\n                this.unSelectedItems.delete(itemId);\r\n                this.selectedItems.set(itemId, uniqItemId);\r\n            } else {\r\n                this.selectedItems.delete(itemId);\r\n                this.unSelectedItems.set(itemId, uniqItemId);\r\n            }\r\n        }\r\n    }\r\n\r\n    getUniqItemId(itemId: string, itemType: string = ''): string {\r\n        return itemId + this.SEPARATOR + itemType;\r\n    }\r\n\r\n    isItemSelected(itemId: string, itemType: string = ''): boolean {\r\n        let isSelected = false;\r\n        if (this.selectionTypeForActions === SELECTION_TYPE_FOR_ACTIONS.SingleAction ||\r\n            this.selectionTypeForActions === SELECTION_TYPE_FOR_ACTIONS.Multi) {\r\n            isSelected = this.selectedItems.has(itemId) || this.isAllSelected && !this.unSelectedItems.has(itemId);\r\n        } else if (this.selectionTypeForActions === SELECTION_TYPE_FOR_ACTIONS.Single) {\r\n            const uniqItemId = this.getUniqItemId(itemId, itemType);\r\n            isSelected = uniqItemId === this.selectedItemId;\r\n        }\r\n\r\n        return isSelected;\r\n    }\r\n\r\n    setLayout(): void {\r\n        const self = this;\r\n        if (this.totalRows === 0 ||\r\n            !this.uiControl ||\r\n            !this.uiControl.ControlFields ||\r\n            this.uiControl.ControlFields.length === 0) {\r\n            return;\r\n        }\r\n\r\n        this.uiControl.ControlFields.forEach((cf) => {\r\n            if (cf.ColumnWidth === 0) {\r\n                cf.ColumnWidth = 10;\r\n            }\r\n\r\n            if (self.isTable &&\r\n                (cf.FieldType === FIELD_TYPE.Image ||\r\n                    // cf.FieldType === FIELD_TYPE.Indicators || ???\r\n                    cf.FieldType === FIELD_TYPE.Signature ||\r\n                    cf.FieldType === FIELD_TYPE.NumberIntegerQuantitySelector ||\r\n                    cf.FieldType === FIELD_TYPE.NumberRealQuantitySelector ||\r\n                    cf.FieldType === FIELD_TYPE.NumberIntegerForMatrix ||\r\n                    cf.FieldType === FIELD_TYPE.NumberRealForMatrix ||\r\n                    cf.FieldType === FIELD_TYPE.Package ||\r\n                    cf.ApiName === 'UnitsQuantity' ||\r\n                    cf.ApiName === 'QuantitySelector')\r\n            ) {\r\n                cf.Layout.XAlignment = 3;\r\n            }\r\n        });\r\n\r\n        if (!this.cd['destroyed']) {\r\n            this.cd.detectChanges();\r\n        }\r\n\r\n        // Set the columns width.\r\n        if (this.containerWidth <= 0) {\r\n            this.setContainerWidth();\r\n        }\r\n\r\n        this.calcColumnsWidth();\r\n        this.checkForChanges = new Date().getTime();\r\n    }\r\n\r\n    private calcColumnsWidth(): void {\r\n        const fixedMultiple = 3.78; // for converting em to pixel.\r\n        const length = this.uiControl.ControlFields.length;\r\n        const selectionCheckBoxWidth = this.selectionTypeForActions === SELECTION_TYPE_FOR_ACTIONS.Multi ? 44 : 0;\r\n\r\n        // Is table AND there is at least one column of width type of percentage.\r\n        if (this.isTable) {\r\n            if (this.uiControl && this.uiControl.ControlFields) {\r\n                this.hasColumnWidthOfTypePercentage = this.uiControl.ControlFields.filter(cf => cf.ColumnWidthType === 1).length === 0;\r\n            }\r\n        }\r\n\r\n        // If the columns size is fixed and the total is small then the container change it to percentage.\r\n        if (!this.hasColumnWidthOfTypePercentage) {\r\n            const totalFixedColsWidth = this.uiControl.ControlFields\r\n                .map(cf => cf.ColumnWidth * fixedMultiple)\r\n                .reduce((sum, current) => sum + current);\r\n\r\n            if (window.innerWidth > totalFixedColsWidth) {\r\n                this.hasColumnWidthOfTypePercentage = true;\r\n            }\r\n        }\r\n\r\n        let totalCalcColsWidth = 0;\r\n\r\n        // Calc by percentage\r\n        if (this.hasColumnWidthOfTypePercentage) {\r\n            const totalColsWidth: number = this.uiControl.ControlFields.map(cf => cf.ColumnWidth).reduce((sum, current) => sum + current);\r\n\r\n            for (let index = 0; index < length; index++) {\r\n                const uiControlField: UIControlField = this.uiControl.ControlFields[index];\r\n                const calcColumnWidthPercentage = (100 / totalColsWidth) * uiControlField.ColumnWidth;\r\n\r\n                uiControlField.calcColumnWidth = Math.floor((this.containerWidth * calcColumnWidthPercentage) / 100);\r\n\r\n                if (index === length - 1) {\r\n                    uiControlField.calcTitleColumnWidthString = uiControlField.calcColumnWidthString =\r\n                        'calc(100% - ' + totalCalcColsWidth + 'px)'; // For 100%\r\n                } else {\r\n                    uiControlField.calcTitleColumnWidthString = uiControlField.calcColumnWidthString =\r\n                        uiControlField.calcColumnWidth + 'px';\r\n                    totalCalcColsWidth += uiControlField.calcColumnWidth;\r\n                }\r\n            }\r\n\r\n            this.renderer.setStyle(this.element.nativeElement, 'width', 'inherit');\r\n        } else {\r\n            for (let index = 0; index < length; index++) {\r\n                const uiControlField: UIControlField = this.uiControl.ControlFields[index];\r\n                const currentFixedWidth = Math.floor(uiControlField.ColumnWidth * fixedMultiple);\r\n\r\n                if (index === length - 1) {\r\n                    uiControlField.calcTitleColumnWidthString = currentFixedWidth + 'px';\r\n                    uiControlField.calcColumnWidthString = currentFixedWidth - 4 + 'px'; // -4 for the row padding.\r\n                } else {\r\n                    uiControlField.calcTitleColumnWidthString = uiControlField.calcColumnWidthString =\r\n                        currentFixedWidth + 'px';\r\n                }\r\n\r\n                totalCalcColsWidth += currentFixedWidth;\r\n            }\r\n\r\n            this.renderer.setStyle(this.element.nativeElement, 'width', totalCalcColsWidth + selectionCheckBoxWidth + 'px');\r\n        }\r\n    }\r\n\r\n    private initResizeData(): void {\r\n        this.startX = 0;\r\n        this.startWidth = 0;\r\n        this.tableStartWidth = 0;\r\n        this.pressedColumn = '';\r\n    }\r\n\r\n    onListResizeStart(event, apiName): void {\r\n        this.pressedColumn = apiName;\r\n        this.startX = event.x;\r\n        this.startWidth = event.target.closest('.header-column').offsetWidth;\r\n        if (this.useVirtualScroll) {\r\n            this.tableStartWidth = this.virtualScroll.contentElementRef.nativeElement.offsetWidth;\r\n        } else {\r\n            // Set the tableStartWidth to the container offsetWidth\r\n            this.tableStartWidth = this.noVirtualScrollCont.nativeElement.offsetWidth;\r\n        }\r\n    }\r\n\r\n    onListResize(event): void {\r\n        if (this.pressedColumn.length > 0) {\r\n            const widthToAdd = this.layoutService.isRtl() ? this.startX - event.x : event.x - this.startX;\r\n\r\n            // Set the width of the column and the container of the whole columns.\r\n            if (this.startWidth + widthToAdd >= PepperiListComponent.MINIMUM_COLUMN_WIDTH || widthToAdd > 0) {\r\n                const length = this.uiControl.ControlFields.length;\r\n                let totalCalcColsWidth = 0;\r\n\r\n                for (let index = 0; index < length; index++) {\r\n                    const uiControlField: UIControlField = this.uiControl.ControlFields[index];\r\n\r\n                    if (index === length - 1) {\r\n                        // Calc the last column only in percentage type.\r\n                        if (this.hasColumnWidthOfTypePercentage) {\r\n                            uiControlField.calcTitleColumnWidthString = uiControlField.calcColumnWidthString =\r\n                                'calc(100% - ' + totalCalcColsWidth + 'px)'; // For 100%\r\n                        } else {\r\n                            if (uiControlField.ApiName === this.pressedColumn) {\r\n                                uiControlField.calcColumnWidth = this.startWidth + widthToAdd;\r\n                                uiControlField.calcTitleColumnWidthString = uiControlField.calcColumnWidth + 'px';\r\n                                uiControlField.calcColumnWidthString = uiControlField.calcColumnWidth - 4 + 'px';\r\n                            }\r\n                        }\r\n                    } else if (uiControlField.ApiName === this.pressedColumn) {\r\n                        uiControlField.calcColumnWidth = this.startWidth + widthToAdd;\r\n                        uiControlField.calcTitleColumnWidthString = uiControlField.calcColumnWidthString =\r\n                            uiControlField.calcColumnWidth + 'px';\r\n                    }\r\n\r\n                    totalCalcColsWidth += uiControlField.calcColumnWidth;\r\n                }\r\n\r\n                this.renderer.setStyle(this.element.nativeElement, 'width', this.tableStartWidth + widthToAdd + 'px');\r\n            }\r\n\r\n            this.checkForChanges = new Date().getTime();\r\n        }\r\n    }\r\n\r\n    onListResizeEnd(event): void {\r\n        if (this.pressedColumn.length > 0) {\r\n            if (event && $(event.srcElement).parents('.resizeBox').length > 0) {\r\n                this.initResizeData();\r\n            } else {\r\n                // Set timeout 0 for onListSortingChange will have the pressedColumn.\r\n                const self = this;\r\n                setTimeout(() => {\r\n                    self.initResizeData();\r\n                }, 0);\r\n            }\r\n        }\r\n    }\r\n\r\n    onListSortingChange(sortBy: string, isAsc: boolean, event = null): void {\r\n        if (this.isPrinting) {\r\n            return;\r\n        }\r\n\r\n        if (this.pressedColumn.length > 0 || (event && $(event.srcElement).parents('.resizeBox').length > 0)) {\r\n            return;\r\n        }\r\n\r\n        if (this.sortBy !== sortBy || this.isAsc !== isAsc) {\r\n            this.sortBy = sortBy;\r\n            this.isAsc = isAsc;\r\n            this.saveSortingToSession();\r\n\r\n            this.notifySortingChanged.emit({ sortBy, isAsc });\r\n        }\r\n    }\r\n\r\n    onListHeaderMouseEnter(event): void {\r\n        // this.headerIsInFocus = true;\r\n    }\r\n\r\n    onListHeaderMouseLeave(event): void {\r\n        // this.headerIsInFocus = false;\r\n        this.onListResizeEnd(event);\r\n        this.initResizeData();\r\n    }\r\n\r\n    onListChange(event: ChangeEvent): void {\r\n        if (this.isPrinting) {\r\n            return;\r\n        }\r\n\r\n        // For other events do nothing.\r\n        if (typeof event.start === 'undefined' || typeof event.end === 'undefined') {\r\n            return;\r\n        }\r\n\r\n        this.calculatedObjectHeight = event.calculatedChildHeight + 'px';\r\n\r\n        if (!this.lockEvents) {\r\n            this.toggleItems(false);\r\n            this.updateScrollItems(event.start, event.end, false);\r\n\r\n            let getItemsFromApi = false;\r\n            let index: number = event.start;\r\n\r\n            while (!getItemsFromApi && index < event.end) {\r\n                if (!this.items[index]) {\r\n                    getItemsFromApi = true;\r\n                }\r\n                index++;\r\n            }\r\n\r\n            // Get bulk from api.\r\n            if (getItemsFromApi) {\r\n                const top = this.getTopItems() - 1;\r\n\r\n                if (event.addAtStart) {\r\n                    event.fromIndex = Math.max(event.start - (top - (event.end - event.start)), 0);\r\n                    event.toIndex = event.end;\r\n                } else {\r\n                    event.fromIndex = event.start;\r\n                    event.toIndex = Math.min(event.end + (top - (event.end - event.start)), this.totalRows);\r\n                }\r\n\r\n                this.notifyListChanged.emit(event);\r\n                // this.lockEvents = true;\r\n            } else {\r\n                // this.scrollItems = this.items.slice(event.start, event.end);\r\n                this.toggleItems(true);\r\n            }\r\n        }\r\n    }\r\n\r\n    // onScrollerListChange(event: any) {\r\n    //     if (this.isPrinting) {\r\n    //         return;\r\n    //     }\r\n\r\n    //     // For other events do nothing.\r\n    //     if (typeof event.startIndex === 'undefined' || typeof event.endIndex === 'undefined') {\r\n    //         return;\r\n    //     }\r\n\r\n    //     if (!this.lockEvents) {\r\n    //         this.toggleItems(false);\r\n    //         this.updateScrollItems(event.startIndex, event.endIndex);\r\n\r\n    //         let getItemsFromApi = false;\r\n    //         let index: number = event.startIndex;\r\n\r\n    //         while (!getItemsFromApi && index < event.endIndex) {\r\n    //             if (!this.items[index]) {\r\n    //                 getItemsFromApi = true;\r\n    //             }\r\n    //             index++;\r\n    //         }\r\n\r\n    //         // Get bulk from api.\r\n    //         if (getItemsFromApi) {\r\n    //             const top = this.getTopItems() - 1;\r\n\r\n    //             // if (event.addAtStart) {\r\n    //             //     event.fromIndex = Math.max(event.start - (top - (event.end - event.start)), 0);\r\n    //             //     event.toIndex = event.end;\r\n    //             // } else {\r\n    //             event.fromIndex = event.startIndex;\r\n    //             event.toIndex = Math.min(event.endIndex + (top - (event.endIndex - event.startIndex)), this.totalRows);\r\n    //             // }\r\n\r\n    //             this.notifyListChanged.emit(event);\r\n    //             // this.lockEvents = true;\r\n    //         } else {\r\n    //             // this.scrollItems = this.items.slice(event.start, event.end);\r\n    //             this.toggleItems(true);\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n    onListLoad(event: any): void {\r\n        this.notifyListLoad.emit(event);\r\n    }\r\n\r\n    getParentContainer(): Element | Window {\r\n        return this.parentScroll ? this.parentScroll : window;\r\n    }\r\n\r\n    onValueChanged(valueChanged: any): void {\r\n        if (this.disabled) {\r\n            return;\r\n        }\r\n\r\n        this.notifyValueChanged.emit(valueChanged);\r\n    }\r\n\r\n    onCustomizeFieldClick(customizeFieldClickedData: PepperiFieldClickedData): void {\r\n        if (this.disabled) {\r\n            return;\r\n        }\r\n\r\n        this.notifyFieldClicked.emit(customizeFieldClickedData);\r\n    }\r\n\r\n    onCustomizeFieldMenuClicked(customizeFieldClickedData: PepperiFieldClickedData): void {\r\n        if (this.disabled) {\r\n            return;\r\n        }\r\n\r\n        this.notifyMenuItemClicked.emit(customizeFieldClickedData);\r\n    }\r\n\r\n    getIsDisabled(pepperiObjectInput: ObjectSingleData): boolean {\r\n        if (this.disableSelectionItems) {\r\n            return true;\r\n        } else {\r\n            const IsNotSelectableForActions = pepperiObjectInput?.Data && !pepperiObjectInput.Data.IsSelectableForActions;\r\n            return IsNotSelectableForActions;\r\n        }\r\n    }\r\n\r\n    public getIsAllSelectedForActions(): boolean {\r\n        let res = false;\r\n\r\n        if (this.isAllSelected) {\r\n            if (this.unSelectedItems.size === 0) {\r\n                res = true;\r\n            }\r\n        } else {\r\n            if (this.selectedItems.size === this.totalRows) {\r\n                res = this.getIsAllSelected(this.scrollItems);\r\n            } else if (this.selectedItems.size < this.totalRows) {\r\n                // for (let index = 0; index < this.scrollItems.length; index++) {\r\n                //     const pepperiObjectInput = this.scrollItems[index];\r\n                for (const pepperiObjectInput of this.scrollItems) {\r\n                    res = pepperiObjectInput && pepperiObjectInput.Data &&\r\n                        this.selectedItems.has(pepperiObjectInput.Data.UID.toString());\r\n\r\n                    if (!res) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return res;\r\n    }\r\n\r\n    public setIsAllSelected(isChecked: boolean): void {\r\n        if (this.selectionTypeForActions === SELECTION_TYPE_FOR_ACTIONS.Multi ||\r\n            this.selectionTypeForActions === SELECTION_TYPE_FOR_ACTIONS.SingleAction) {\r\n            this.selectAllCB.checked = isChecked;\r\n            this.isAllSelected = isChecked;\r\n        }\r\n    }\r\n\r\n    selectAllItemsForActions(e: any): void {\r\n        // For material checkbox || radio.\r\n        const isChecked = e.source.checked;\r\n\r\n        // Indeterminate mode\r\n        let isIndeterminate = false;\r\n        const currentList = this.isAllSelected ? this.unSelectedItems : this.selectedItems;\r\n        if (currentList.size > 0) {\r\n            isIndeterminate = true;\r\n            this.isAllSelected = false;\r\n            this.notifySelectedItemsChanged.emit(0);\r\n            e.source.checked = false;\r\n        }\r\n\r\n        this.selectedItems.clear();\r\n        this.unSelectedItems.clear();\r\n\r\n        if (!isIndeterminate) {\r\n            this.isAllSelected = isChecked;\r\n            if (this.selectionTypeForActions === SELECTION_TYPE_FOR_ACTIONS.SingleAction) {\r\n                // Add all or remove all\r\n                this.notifySelectAllSingleActionClicked.emit(isChecked);\r\n            } else if (this.selectionTypeForActions === SELECTION_TYPE_FOR_ACTIONS.Multi) {\r\n                if (!isChecked) {\r\n                    this.notifySelectedItemsChanged.emit(0);\r\n                    this.selectedItemId = '';\r\n                } else {\r\n                    const filteredItems = this.items.filter(item => item.Data && item.Data.IsSelectableForActions);\r\n                    this.notifySelectedItemsChanged.emit(filteredItems.length);\r\n                }\r\n            }\r\n        } else {\r\n            if (this.selectionTypeForActions === SELECTION_TYPE_FOR_ACTIONS.SingleAction) {\r\n                // Remove all\r\n                this.notifySelectAllSingleActionClicked.emit(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    getIsSelectedForActions(itemId: string, isSelectableForActions: boolean, itemType: string = ''): boolean {\r\n        if (this.selectionTypeForActions === SELECTION_TYPE_FOR_ACTIONS.Single) {\r\n            return this.selectedItemId === this.getUniqItemId(itemId, itemType);\r\n        } else if (this.selectionTypeForActions === SELECTION_TYPE_FOR_ACTIONS.SingleAction) {\r\n            let res = this.isAllSelected || this.selectedItems.has(itemId);\r\n\r\n            if (this.unSelectedItems.has(itemId)) {\r\n                res = false;\r\n            }\r\n\r\n            return res;\r\n        } else if (this.selectionTypeForActions === SELECTION_TYPE_FOR_ACTIONS.Multi) {\r\n            if (!isSelectableForActions) {\r\n                return false;\r\n            } else {\r\n                let res = this.isAllSelected || this.selectedItems.has(itemId);\r\n\r\n                if (this.unSelectedItems.has(itemId)) {\r\n                    res = false;\r\n                }\r\n\r\n                return res;\r\n            }\r\n        }\r\n    }\r\n\r\n    selectItemForActions(e: any, itemId: string, isSelectableForActions: boolean, itemType: string = ''): void {\r\n        // For material checkbox || radio.\r\n        const isChecked = e.source.checked;\r\n        this.setItemClicked(itemId, isSelectableForActions, itemType, isChecked);\r\n    }\r\n\r\n    itemClicked(e: any, objectSingleData: ObjectSingleData): void {\r\n        // Set seleted item\r\n        const itemId = objectSingleData.Data.UID.toString();\r\n        const itemType = objectSingleData.Data.Type.toString();\r\n        let isChecked = false;\r\n\r\n        if (objectSingleData && objectSingleData.Data && objectSingleData.Data.IsSelectableForActions) {\r\n            this.selectedItemId = this.getUniqItemId(itemId, itemType);\r\n            isChecked = true;\r\n        }\r\n\r\n        if (this.isTable) {\r\n            if (this.selectionTypeForActions === SELECTION_TYPE_FOR_ACTIONS.Single) {\r\n                this.setItemClicked(itemId, objectSingleData.Data.IsSelectableForActions, itemType, isChecked);\r\n            } else if (this.selectionTypeForActions === SELECTION_TYPE_FOR_ACTIONS.None) {\r\n                // Just mark the row as highlighted\r\n                this.setItemClicked(itemId, objectSingleData.Data.IsSelectableForActions, itemType, true);\r\n            }\r\n        } else {\r\n            if (this.disabled) {\r\n                return;\r\n            }\r\n\r\n            this.notifyThumbnailClicked.emit(objectSingleData);\r\n        }\r\n    }\r\n\r\n    setItemClicked(itemId, isSelectableForActions: boolean, itemType: string, isChecked: boolean): void {\r\n        const uniqItemId = this.getUniqItemId(itemId, itemType);\r\n\r\n        // select the selected item.\r\n        if (isChecked) {\r\n            // Set seleted item\r\n            this.selectedItemId = uniqItemId;\r\n        } else {\r\n            if (this.selectedItemId === uniqItemId) {\r\n                this.selectedItemId = '';\r\n            }\r\n        }\r\n\r\n        if (this.selectionTypeForActions === SELECTION_TYPE_FOR_ACTIONS.Single) {\r\n            this.notifySelectedItemsChanged.emit(this.selectedItemId.length === 0 ? 0 : 1);\r\n        } else if (this.selectionTypeForActions === SELECTION_TYPE_FOR_ACTIONS.SingleAction) {\r\n            this.setSelectionItems(itemId, uniqItemId, isChecked);\r\n            this.notifySingleActionClicked.emit({ id: itemId, selected: isChecked });\r\n        } else if (this.selectionTypeForActions === SELECTION_TYPE_FOR_ACTIONS.Multi) {\r\n            if (isSelectableForActions) {\r\n                this.setSelectionItems(itemId, uniqItemId, isChecked);\r\n\r\n                const currentList = this.isAllSelected ? this.unSelectedItems : this.selectedItems;\r\n                const currentListCount = this.isAllSelected ? this.totalRows - currentList.size : currentList.size;\r\n                this.notifySelectedItemsChanged.emit(currentListCount);\r\n            }\r\n        }\r\n    }\r\n\r\n    onTableRowMouseEnter(event: any, itemId: string, itemType: string): void {\r\n        if (this.isTouchDevice) {\r\n            return;\r\n        }\r\n\r\n        const uniqItemId = this.getUniqItemId(itemId, itemType);\r\n        this.hoveredItemId = uniqItemId;\r\n    }\r\n\r\n    onTableRowMouseLeave(event: any, itemId: string, itemType: string): void {\r\n        this.hoveredItemId = '';\r\n    }\r\n\r\n    onCardMouseEnter(event: any, itemId: string, itemType: string): void {\r\n        if (this.isTouchDevice) {\r\n            return;\r\n        }\r\n\r\n        const uniqItemId = this.getUniqItemId(itemId, itemType);\r\n        this.hoveredItemId = uniqItemId;\r\n    }\r\n\r\n    onCardMouseLeave(event: any, itemId: string, itemType: string): void {\r\n        this.hoveredItemId = '';\r\n    }\r\n\r\n    getThumbnailsLayout(): LAYOUT_TYPE {\r\n        return this.layoutType == null ? LAYOUT_TYPE.PepperiCard : this.layoutType;\r\n    }\r\n\r\n    // call this function after resize + animation end\r\n    winResize(e): void {\r\n        if (typeof this.virtualScroll !== 'undefined') {\r\n            this.virtualScroll.refresh();\r\n        }\r\n\r\n        this.containerWidth = 0;\r\n        this.setLayout();\r\n    }\r\n\r\n    trackByFunc(index: number, item: ObjectSingleData): any {\r\n        return item && item.Data && item.Data.UID ? item.Data.UID : index;\r\n        // let res: string = \"\";\r\n\r\n        // if (item && item.Data && item.Data.UID) {\r\n        //    res = item.Data.UID + \"_\" + this.listType + \"_\" + (this.isTable ? \"Table\" : \"Thumbnails\");\r\n        // }\r\n        // else {\r\n        //    res = index + \"_\" + this.listType + \"_\" + (this.isTable ? \"Table\" : \"Thumbnails\");\r\n        // }\r\n\r\n        // return res;\r\n    }\r\n\r\n    cleanItems(): void {\r\n        this.itemsCounter = 0;\r\n        this.items = this.totalRows > 0 ? Array<ObjectSingleData>(this.totalRows) : [];\r\n        this.scrollItems = [];\r\n        this.calculatedObjectHeight = '';\r\n    }\r\n\r\n    getUIControl(): UIControl {\r\n        return this.uiControl;\r\n    }\r\n\r\n    initListData(uiControl: UIControl, totalRows: number, items: ObjectSingleData[], viewType: VIEW_TYPE = VIEW_TYPE.Table,\r\n        itemClass: string = '', showSelection: boolean = false): void {\r\n        // const selectedItemsFromState: Map<string, string> =\r\n        //     this.state.getItemFromState(PepperiListComponent.SELECTED_ITEMS_STATE_KEY);\r\n        // if (selectedItemsFromState != null && typeof selectedItemsFromState.size !== 'undefined' &&\r\n        //     selectedItemsFromState.size > 0) {\r\n        //     this.selectedItems = selectedItemsFromState;\r\n        //     this.state.setItemInState(PepperiListComponent.SELECTED_ITEMS_STATE_KEY, new Map<string, string>());\r\n        // } else {\r\n        this.selectedItems.clear();\r\n        // }\r\n\r\n        // const unSelectedItemsFromState: Map<string, string> =\r\n        //     this.state.getItemFromState(PepperiListComponent.UN_SELECTED_ITEMS_STATE_KEY);\r\n        // if (unSelectedItemsFromState != null && typeof unSelectedItemsFromState.size !== 'undefined' &&\r\n        //     unSelectedItemsFromState.size > 0) {\r\n        //     this.unSelectedItems = unSelectedItemsFromState;\r\n        //     this.state.setItemInState(PepperiListComponent.UN_SELECTED_ITEMS_STATE_KEY, new Map<string, string>());\r\n        // } else {\r\n        this.unSelectedItems.clear();\r\n        // }\r\n\r\n        // if (this.state.getItemFromState(PepperiListComponent.ALL_SELECTED_STATE_KEY) != null) {\r\n        //     let isAllSelectedFromState = this.state.getItemFromState(PepperiListComponent.ALL_SELECTED_STATE_KEY);\r\n        //     this.isAllSelected = isAllSelectedFromState && this.getIsAllSelected(items);\r\n        //     this.state.setItemInState(PepperiListComponent.ALL_SELECTED_STATE_KEY, false);\r\n        // } else {\r\n        this.isAllSelected = false;\r\n        // }\r\n\r\n        // if (this.state.getItemFromState(PepperiListComponent.SORT_BY_STATE_KEY) !== '') {\r\n        //     this.sortBy = this.state.getItemFromState(PepperiListComponent.SORT_BY_STATE_KEY);\r\n        //     this.state.setItemInState(PepperiListComponent.SORT_BY_STATE_KEY, '');\r\n        // }\r\n\r\n        // if (this.state.getItemFromState(PepperiListComponent.ASCENDING_STATE_KEY) != null) {\r\n        //     this.isAsc = this.state.getItemFromState(PepperiListComponent.ASCENDING_STATE_KEY);\r\n        //     this.state.setItemInState(PepperiListComponent.ASCENDING_STATE_KEY, false);\r\n        // }\r\n\r\n        const currentList = this.isAllSelected ? this.unSelectedItems : this.selectedItems;\r\n        const currentListCount = this.isAllSelected ? this.totalRows - currentList.size : currentList.size;\r\n        this.notifySelectedItemsChanged.emit(currentListCount);\r\n\r\n        this.isCardView = viewType === VIEW_TYPE.Card;\r\n        this.showSelection = showSelection;\r\n        this.uiControl = uiControl;\r\n        this.itemClass = itemClass;\r\n        this.selectedItemId = '';\r\n        this.isTable = viewType === VIEW_TYPE.Table;\r\n        this.totalRows = totalRows;\r\n\r\n        // fix bug for the scrollTo that doesn't work on edge div , not window\r\n        const scrollingElement = this.getParentContainer();\r\n        if (scrollingElement === window) {\r\n            scrollingElement.scrollTo(0, 0);\r\n        } else {\r\n            this.focusOnAnItem(0);\r\n        }\r\n\r\n        this.cleanItems();\r\n\r\n        if (this.totalRows === items.length) {\r\n            this.useVirtualScroll = false;\r\n            this.updateListItems(items, null);\r\n            this.onListLoad(null);\r\n        } else {\r\n            this.useVirtualScroll = true;\r\n            const numberOfStartItems = this.getNumberOfStartItems();\r\n            this.updateListItems(items, { start: 0, end: numberOfStartItems, fromIndex: 0, toIndex: numberOfStartItems, addAtStart: true });\r\n\r\n            if (typeof this.virtualScroll !== 'undefined') {\r\n                this.virtualScroll.refresh();\r\n            }\r\n        }\r\n\r\n        this.setLayout();\r\n    }\r\n\r\n    getIsAllSelected(items: Array<ObjectSingleData>): boolean {\r\n        let result = true;\r\n\r\n        if (this.selectedItems.size > 0 && items.length > 0) {\r\n            // for (let index = 0; index < items.length; index++) {\r\n            // const pepperiObjectInput = items[index];\r\n            for (const pepperiObjectInput of items) {\r\n                if (!(pepperiObjectInput && pepperiObjectInput.Data && this.selectedItems.has(pepperiObjectInput.Data.UID.toString()))) {\r\n                    result = false;\r\n                    break;\r\n                }\r\n            }\r\n        } else {\r\n            result = false;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getNumberOfStartItems(): number {\r\n        let numberOfStartItems = 20;\r\n\r\n        if ((this.screenSize === SCREEN_SIZE.XL) ||\r\n            (this.screenSize === SCREEN_SIZE.LG)) {\r\n            numberOfStartItems = this.isTable ? 50 : 40;\r\n        } else if (this.screenSize === SCREEN_SIZE.MD) {\r\n            numberOfStartItems = this.isTable ? 30 : 20;\r\n        } else if (this.screenSize === SCREEN_SIZE.SM) {\r\n            numberOfStartItems = this.isTable ? 20 : 10;\r\n        } else if (this.screenSize === SCREEN_SIZE.XS) {\r\n            numberOfStartItems = this.isTable ? 15 : 5;\r\n        }\r\n\r\n        return numberOfStartItems;\r\n    }\r\n\r\n    setSelectedIds(selectedIds: string[], items = null): void {\r\n        this.selectedItems.clear();\r\n        this.isAllSelected = false;\r\n\r\n        if (selectedIds) {\r\n            // for (let i = 0; i < selected.length; i++) {\r\n            for (const selectedId of selectedIds) {\r\n                const tmp = selectedId.split(this.SEPARATOR);\r\n\r\n                if (tmp && tmp.length > 0) {\r\n                    const itemId = tmp[0];\r\n                    const itemType = tmp.length > 1 ? tmp[1] : '';\r\n\r\n                    this.selectedItems.set(itemId, this.getUniqItemId(itemId, itemType));\r\n                }\r\n            }\r\n\r\n            this.isAllSelected = this.getIsAllSelected(items ? items : this.scrollItems); // this.selectedItems.Count() === this.totalRows;\r\n            this.setSelectionDataInSession();\r\n        }\r\n\r\n        if (typeof this.virtualScroll !== 'undefined') {\r\n            this.virtualScroll.refresh();\r\n        }\r\n    }\r\n\r\n    setSelectionDataInSession(): void {\r\n        // this.state.setItemInState(PepperiListComponent.SELECTED_ITEMS_STATE_KEY, this.selectedItems);\r\n        // this.state.setItemInState(PepperiListComponent.UN_SELECTED_ITEMS_STATE_KEY, this.unSelectedItems);\r\n        // this.state.setItemInState(PepperiListComponent.ALL_SELECTED_STATE_KEY, this.isAllSelected);\r\n    }\r\n\r\n    updateListItems(items: ObjectSingleData[], event: ChangeEvent): void {\r\n        if (this.useVirtualScroll) {\r\n            // Clean array\r\n            if (this.itemsCounter + items.length > PepperiListComponent.TOP_ITEMS_ARRAY) {\r\n                this.cleanItems();\r\n            }\r\n\r\n            const startIndex = event.fromIndex ? event.fromIndex : event.start;\r\n\r\n            for (let i = 0; i < items.length; i++) {\r\n                if (!this.items[i + startIndex]) {\r\n                    this.items[i + startIndex] = items[i];\r\n                    this.itemsCounter += 1;\r\n                }\r\n            }\r\n\r\n            this.updateScrollItems(event.start, event.end);\r\n            this.toggleItems(true);\r\n            // this.lockEvents = false;\r\n        } else {\r\n            this.scrollItems = this.items = items;\r\n            this.itemsCounter = items.length;\r\n        }\r\n    }\r\n\r\n    updateListItem(data: any): void {\r\n        let index = 0;\r\n\r\n        // Update items list\r\n        index = this.items.findIndex(i => i && i.Data && i.Data.UID === data.UID);\r\n        if (index >= 0 && index < this.items.length) {\r\n            this.items[index].Data = data;\r\n        }\r\n        // Update scrollItems list\r\n        index = this.scrollItems.findIndex(i => i && i.Data && i.Data.UID === data.UID);\r\n        if (index >= 0 && index < this.scrollItems.length) {\r\n            this.scrollItems[index].Data = data;\r\n            this.checkForChanges = new Date().getTime();\r\n        }\r\n    }\r\n\r\n    focusOnAnItem(itemIndex): void {\r\n        if (typeof this.virtualScroll !== 'undefined') {\r\n            this.virtualScroll.scrollInto(itemIndex);\r\n        }\r\n    }\r\n\r\n    getSelectedItemsData(isForEdit: boolean = false): SelectionData {\r\n        const res: SelectionData = new SelectionData();\r\n\r\n        if (this.selectionTypeForActions === SELECTION_TYPE_FOR_ACTIONS.Single) {\r\n            const tmp = this.selectedItemId.split(this.SEPARATOR);\r\n\r\n            res.selectionType = 1;\r\n            res.rows = [tmp[0]];\r\n            res.rowTypes = [tmp[1]];\r\n        } else if (this.selectionTypeForActions === SELECTION_TYPE_FOR_ACTIONS.Multi) {\r\n            const items = [];\r\n            const itemTypes = [];\r\n            let selectionType = 1;\r\n            let currentList = [];\r\n\r\n            // For edit - only the selected items.\r\n            if (isForEdit) {\r\n                if (!this.isAllSelected) {\r\n                    currentList = Array.from(this.selectedItems.values());\r\n                } else {\r\n                    // Get the id's of the items that not founded in unSelectedItems.\r\n                    this.items.forEach(item => {\r\n                        if (item && !this.unSelectedItems.has(item.Data.UID.toString())) {\r\n                            currentList.push(this.getUniqItemId(item.Data.UID.toString(), item.Data.Type.toString()));\r\n                        }\r\n                    });\r\n                }\r\n            } else {\r\n                // For delete - can be the unselected with select_all functionality.\r\n                currentList = Array.from(this.isAllSelected ? this.unSelectedItems.values() : this.selectedItems.values());\r\n                selectionType = this.isAllSelected ? 0 : 1;\r\n            }\r\n\r\n            currentList.forEach(item => {\r\n                const tmp = item.split(this.SEPARATOR);\r\n\r\n                if (tmp.length === 2) {\r\n                    items.push(tmp[0]);\r\n                    itemTypes.push(tmp[1]);\r\n                }\r\n            });\r\n\r\n            res.selectionType = selectionType;\r\n            res.rows = items;\r\n            res.rowTypes = itemTypes;\r\n        }\r\n\r\n        return res;\r\n    }\r\n\r\n    initCollectionFromState(collectionType, collection: string[]): void {\r\n        if (collectionType === 'Selected') {\r\n            collection.forEach(x => this.selectedItems.set(x, x));\r\n        } else {\r\n            collection.forEach(x => this.unSelectedItems.set(x, x));\r\n        }\r\n    }\r\n\r\n    getIsItemEditable(uid: string): boolean {\r\n        const item = this.items.filter(x => x.Data.UID.toString() === uid);\r\n        if (item.length > 0) {\r\n            return item[0].Data.IsEditable;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    getItemDataByID(uid: string): ObjectsDataRow {\r\n        return this.items.find(item => item.Data.UID.toString() === uid)?.Data;\r\n\r\n        // const item = this.items.filter(x => x.Data.UID.toString() === uid);\r\n        // if (item.length > 0) {\r\n        //     return item[0].Data;\r\n        // } else {\r\n        //     return null;\r\n        // }\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { MatCommonModule } from '@angular/material/core';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\nimport { PepperiModule } from '@pepperi-addons/ngx-lib';\r\nimport {\r\n    PepperiIconModule,\r\n    PepperiIconRegistry,\r\n    pepperiIconArrowDown,\r\n    pepperiIconArrowEither,\r\n    pepperiIconArrowUp\r\n} from '@pepperi-addons/ngx-lib/icon';\r\nimport { PepperiFormModule } from '@pepperi-addons/ngx-lib/form';\r\n\r\nimport { VirtualScrollModule } from './virtual-scroll.component';\r\n\r\nimport { PepperiListComponent } from './list.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        // Material modules,\r\n        MatCommonModule,\r\n        MatCheckboxModule,\r\n        MatRadioModule,\r\n        MatIconModule,\r\n        // Pepperi modules\r\n        PepperiModule,\r\n        PepperiIconModule,\r\n        PepperiFormModule,\r\n        VirtualScrollModule\r\n    ],\r\n    exports: [ PepperiListComponent ],\r\n    declarations: [ PepperiListComponent ],\r\n})\r\nexport class PepperiListModule {\r\n    constructor(private pepperiIconRegistry: PepperiIconRegistry) {\r\n        this.pepperiIconRegistry.registerIcons([\r\n            pepperiIconArrowDown,\r\n            pepperiIconArrowEither,\r\n            pepperiIconArrowUp\r\n        ]);\r\n    }\r\n}\r\n"]}