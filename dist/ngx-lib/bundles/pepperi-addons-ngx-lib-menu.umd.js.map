{"version":3,"file":"pepperi-addons-ngx-lib-menu.umd.js","sources":["../../../projects/ngx-lib/menu/menu.component.html","../../../projects/ngx-lib/menu/menu.component.ts","../../../projects/ngx-lib/menu/menu.module.ts","../../../projects/ngx-lib/menu/public-api.ts","../../../projects/ngx-lib/menu/pepperi-addons-ngx-lib-menu.ts"],"sourcesContent":["<ng-container *ngIf=\"options?.length > 0; then subMenuBlock; else noSubMenuBlock\"></ng-container>\r\n<ng-template #noSubMenuBlock>\r\n    <button (click)=\"menuClicked($event)\" title=\"{{ label }}\" mat-button\r\n        class=\"pepperi-menu pepperi-button icon-button weak {{ layoutType === LAYOUT_TYPE.PepperiTable ? 'sm' : 'md' }}\"\r\n        [ngClass]=\"{\r\n            'lock-events': disabled,\r\n            'left-alignment': xAlignment == '1' || xAlignment == '0',\r\n            'right-alignment': xAlignment == '2',\r\n            'center-alignment': xAlignment == '3',\r\n            'invert': invertClass\r\n        }\">\r\n        <mat-icon>\r\n            <pep-icon name=\"system_menu\">\r\n            </pep-icon>\r\n        </mat-icon>\r\n    </button>\r\n</ng-template>\r\n\r\n<ng-template #subMenuBlock>\r\n    <button mat-button [matMenuTriggerFor]=\"menu\" menu-blur\r\n        class=\"pepperi-menu pepperi-button icon-button weak {{ layoutType === LAYOUT_TYPE.PepperiTable ? 'sm' : 'md' }}\"\r\n        [ngClass]=\"{\r\n            'left-alignment': xAlignment == '1' || xAlignment == '0',\r\n            'right-alignment': xAlignment == '2',\r\n            'center-alignment': xAlignment == '3',\r\n            'invert': invertClass\r\n        }\" title=\"{{ label }}\">\r\n        <mat-icon>\r\n            <pep-icon name=\"system_menu\">\r\n            </pep-icon>\r\n        </mat-icon>\r\n    </button>\r\n\r\n    <mat-menu #menu=\"matMenu\" xPosition=\"{{xAlignment == '2' ? 'after' : 'before'}}\"\r\n        [ngClass]=\"{ rtlMenu: xAlignment == '2' }\">\r\n        <button *ngFor=\"let option of options\" mat-menu-item (click)=\"menuItemClicked(option.Key)\">\r\n            <span>{{ option.Value | translate }}</span>\r\n        </button>\r\n    </mat-menu>\r\n\r\n</ng-template>\r\n","import { Component, Input, Output, EventEmitter, ChangeDetectorRef, ChangeDetectionStrategy, OnDestroy } from '@angular/core';\r\nimport { LAYOUT_TYPE, PepperiOption } from '@pepperi-addons/ngx-lib';\r\n\r\n@Component({\r\n    selector: 'pep-menu',\r\n    templateUrl: './menu.component.html',\r\n    styleUrls: ['./menu.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PepperiMenuComponent implements OnDestroy {\r\n    @Input() key = '';\r\n    @Input() label = '';\r\n    @Input() disabled = false;\r\n    @Input() xAlignment = '0';\r\n    // @Input() hasSubMenu = false;\r\n    @Input() options: PepperiOption[] = [];\r\n    @Input() invertClass = true;\r\n\r\n    controlType = 'menu';\r\n\r\n    @Input() layoutType: LAYOUT_TYPE = LAYOUT_TYPE.PepperiForm;\r\n    @Output() elementClicked: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() notifyMenuItemClicked: EventEmitter<any> = new EventEmitter<any>();\r\n    LAYOUT_TYPE = LAYOUT_TYPE;\r\n\r\n    constructor() { }\r\n\r\n    ngOnDestroy(): void {\r\n        if (this.elementClicked) {\r\n            this.elementClicked.unsubscribe();\r\n        }\r\n\r\n        if (this.notifyMenuItemClicked) {\r\n            this.notifyMenuItemClicked.unsubscribe();\r\n        }\r\n    }\r\n\r\n    menuClicked(event: any): void {\r\n        this.elementClicked.emit({ apiName: this.key, eventWhich: event.which });\r\n    }\r\n\r\n    menuItemClicked(itemKey: any): void {\r\n        this.notifyMenuItemClicked.emit({ apiName: itemKey });\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { MatCommonModule } from '@angular/material/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\nimport { PepperiModule } from '@pepperi-addons/ngx-lib';\r\nimport { PepperiIconModule, PepperiIconRegistry, pepperiIconSystemMenu } from '@pepperi-addons/ngx-lib/icon';\r\n\r\nimport { PepperiMenuComponent } from './menu.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        // Material modules,\r\n        MatCommonModule,\r\n        MatFormFieldModule,\r\n        MatMenuModule,\r\n        MatIconModule,\r\n        // Pepperi modules\r\n        PepperiModule,\r\n        PepperiIconModule\r\n    ],\r\n    exports: [ PepperiMenuComponent ],\r\n    declarations: [ PepperiMenuComponent ],\r\n})\r\nexport class PepperiMenuModule {\r\n    constructor(private pepperiIconRegistry: PepperiIconRegistry) {\r\n        this.pepperiIconRegistry.registerIcons([\r\n            pepperiIconSystemMenu\r\n        ]);\r\n    }\r\n}\r\n","/*\r\n * Public API Surface of ngx-lib/menu\r\n */\r\nexport * from './menu.module';\r\nexport * from './menu.component';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i0.ɵɵelementContainer","i0.ɵɵelementStart","i0.ɵɵlistener","i0.ɵɵelement","i0.ɵɵelementEnd","i0.ɵɵclassMapInterpolate1","i0.ɵɵpropertyInterpolate","i0.ɵɵproperty","i0.ɵɵtext","i0.ɵɵadvance","i0.ɵɵtextInterpolate","i0.ɵɵtemplate","LAYOUT_TYPE","EventEmitter","Component","ChangeDetectionStrategy","Input","Output","pepperiIconSystemMenu","CommonModule","MatCommonModule","MatFormFieldModule","MatMenuModule","MatIconModule","PepperiModule","PepperiIconModule","NgModule"],"mappings":"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"}