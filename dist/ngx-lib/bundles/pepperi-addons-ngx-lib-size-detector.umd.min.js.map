{"version":3,"sources":["../../../projects/ngx-lib/size-detector/size-detector.component.html","../../../projects/ngx-lib/size-detector/size-detector.component.ts","../../../projects/ngx-lib/size-detector/size-detector.module.ts"],"names":["i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵclassMap","i0.ɵɵpropertyInterpolate","i0.ɵɵadvance","i0.ɵɵtextInterpolate1","SizeDetectorComponent","element","layoutService","this","prefix","sizes","id","SCREEN_SIZE","XS","name","css","SM","MD","LG","XL","prototype","onResize","event","detectScreenSize","ngAfterViewInit","_this","currentSize","find","x","el","nativeElement","querySelector","window","getComputedStyle","display","i0","ɵɵdirectiveInject","ElementRef","i1","LayoutService","selectors","hostBindings","rf","ctx","$event","ɵɵresolveWindow","i0.ɵɵtemplate","i0.ɵɵproperty","PepperiSizeDetectorModule","imports","CommonModule","ReactiveFormsModule","FormsModule","FlexLayoutModule","PepperiModule","declarations","exports"],"mappings":"+0BAIAA,EAAAA,eAAAA,EAAAA,MAAAA,GAE6CC,EAAAA,OAAAA,GAC7CC,EAAAA,2DADEC,EAAAA,WAAAA,EAAAA,IAAAA,KAAAA,EAAAA,OAAAA,EAAAA,KAF2BC,EAAAA,sBAAAA,YAAAA,MAAAA,EAAAA,MAA+BA,EAAAA,sBAAAA,YAAAA,MAAAA,EAAAA,MAC1DA,EAAAA,sBAAAA,YAAAA,MAAAA,EAAAA,MAA+BA,EAAAA,sBAAAA,YAAAA,MAAAA,EAAAA,MAA+BA,EAAAA,sBAAAA,YAAAA,MAAAA,EAAAA,MACnBC,EAAAA,UAAAA,GAAAC,EAAAA,mBAAAA,gCAAAA,EAAAA,KAAAA,wBCgCzC,SAAAC,EAAoBC,EAA6BC,GAA7BC,KAAAF,QAAAA,EAA6BE,KAAAD,cAAAA,EA7BjDC,KAAAC,OAAS,MACTD,KAAAE,MAAQ,CACJ,CACIC,GAAIC,EAAAA,YAAYC,GAChBC,KAAM,KACNC,IAAK,qBAET,CACIJ,GAAIC,EAAAA,YAAYI,GAChBF,KAAM,KACNC,IAAK,+BAET,CACIJ,GAAIC,EAAAA,YAAYK,GAChBH,KAAM,KACNC,IAAK,+BAET,CACIJ,GAAIC,EAAAA,YAAYM,GAChBJ,KAAM,KACNC,IAAK,+BAET,CACIJ,GAAIC,EAAAA,YAAYO,GAChBL,KAAM,KACNC,IAAK,6BAObV,EAAAe,UAAAC,SAAA,SAASC,GACLd,KAAKe,oBAGTlB,EAAAe,UAAAI,gBAAA,WACIhB,KAAKe,oBAGDlB,EAAAe,UAAAG,iBAAA,WAAA,IAAAE,EAAAjB,KACEkB,EAAclB,KAAKE,MAAMiB,MAAK,SAAAC,GAChC,IAAMC,EAAKJ,EAAKnB,QAAQwB,cAAcC,cAAc,IAAIN,EAAKhB,OAASmB,EAAEjB,IAGxE,MAF0D,SAAxCqB,OAAOC,iBAAiBJ,GAAIK,WAKlD1B,KAAKD,cAAcc,SAASK,EAAYf,2CAlDnCN,GAAqB8B,EAAAC,kBAAAD,EAAAE,YAAAF,EAAAC,kBAAAE,EAAAC,kDAArBlC,EAAqBmC,UAAA,CAAA,CAAA,sBAAAC,aAAA,SAAAC,EAAAC,kDAArBA,EAAAtB,SAAAuB,MAAgB,EAAAT,EAAAU,kODH7BC,EAAAA,WAAAA,EAAAA,EAAAA,EAAAA,EAAAA,MAAAA,QAAKC,EAAAA,WAAAA,UAAAA,EAAAA,kFEkBL,6CAAaC,iEAAAA,IAAyBC,QAAA,CAXzB,CACLC,EAAAA,aACAC,EAAAA,oBACAC,EAAAA,YACAC,EAAAA,iBAEAC,EAAAA,mFAKKN,EAAyB,CAAAO,aAAA,CAFnBlD,GAAqB4C,QAAA,CARhCC,EAAAA,aACAC,EAAAA,oBACAC,EAAAA,YACAC,EAAAA,iBAEAC,EAAAA,eAAaE,QAAA,CAEPnD","sourcesContent":["<!-- Bootstrap -->\r\n<!-- <div *ngFor=\"let s of sizes\" class=\"{{s.css + ' ' + (prefix + s.id) }}\">{{s.name}}</div> -->\r\n\r\n<!-- Angular flex-layout -->\r\n<div *ngFor=\"let s of sizes\" fxShow.xs=\"{{s.name == 'xs'}}\" fxShow.sm=\"{{s.name == 'sm'}}\"\r\n  fxShow.md=\"{{s.name == 'md'}}\" fxShow.lg=\"{{s.name == 'lg'}}\" fxShow.xl=\"{{s.name == 'xl'}}\"\r\n  class=\"{{s.css + ' ' + (prefix + s.id) }}\">The current screen size is - {{s.name}}\r\n</div>","import { Component, OnInit, AfterViewInit, HostListener, ElementRef } from '@angular/core';\r\nimport { LayoutService, SCREEN_SIZE } from '@pepperi-addons/ngx-lib';\r\n\r\n@Component({\r\n    selector: 'pep-size-detector',\r\n    templateUrl: './size-detector.component.html'\r\n})\r\nexport class SizeDetectorComponent implements AfterViewInit {\r\n\r\n    prefix = 'is-';\r\n    sizes = [\r\n        {\r\n            id: SCREEN_SIZE.XS,\r\n            name: 'xs',\r\n            css: `d-block d-sm-none`\r\n        },\r\n        {\r\n            id: SCREEN_SIZE.SM,\r\n            name: 'sm',\r\n            css: `d-none d-sm-block d-md-none`\r\n        },\r\n        {\r\n            id: SCREEN_SIZE.MD,\r\n            name: 'md',\r\n            css: `d-none d-md-block d-lg-none`\r\n        },\r\n        {\r\n            id: SCREEN_SIZE.LG,\r\n            name: 'lg',\r\n            css: `d-none d-lg-block d-xl-none`\r\n        },\r\n        {\r\n            id: SCREEN_SIZE.XL,\r\n            name: 'xl',\r\n            css: `d-none d-xl-block`\r\n        },\r\n    ];\r\n\r\n    constructor(private element: ElementRef, private layoutService: LayoutService) { }\r\n\r\n    @HostListener('window:resize', ['$event'])\r\n    onResize(event): void {\r\n        this.detectScreenSize();\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        this.detectScreenSize();\r\n    }\r\n\r\n    private detectScreenSize(): void {\r\n        const currentSize = this.sizes.find(x => {\r\n            const el = this.element.nativeElement.querySelector(`.${this.prefix}${x.id}`);\r\n            const isVisible = window.getComputedStyle(el).display !== 'none';\r\n\r\n            return isVisible;\r\n        });\r\n\r\n        this.layoutService.onResize(currentSize.id);\r\n    }\r\n}\r\n","\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\n\r\nimport { PepperiModule } from '@pepperi-addons/ngx-lib';\r\n\r\nimport { SizeDetectorComponent} from './size-detector.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        ReactiveFormsModule,\r\n        FormsModule,\r\n        FlexLayoutModule,\r\n        // Pepperi modules\r\n        PepperiModule,\r\n    ],\r\n    exports: [SizeDetectorComponent],\r\n    declarations: [SizeDetectorComponent],\r\n})\r\nexport class PepperiSizeDetectorModule {}\r\n"]}