{"version":3,"sources":["../../../projects/ngx-lib/textbox-icon/textbox-icon.component.html","../../../projects/ngx-lib/textbox-icon/textbox-icon.component.ts","../../../projects/ngx-lib/textbox-icon/textbox-icon.module.ts"],"names":["i0.ɵɵelementStart","i0.ɵɵelement","i0.ɵɵelementEnd","i0.ɵɵlistener","i0.ɵɵproperty","i0","ɵɵpureFunction1","_c0","ctx_r4","value","length","ctx_r5","ctx_r6","i0.ɵɵadvance","i0.ɵɵpropertyInterpolate","PepperiTextboxIconComponent","this","test","iconClicked","EventEmitter","prototype","iconButtonClicked","currentValue","toString","trim","type","window","open","emit","selectors","inputs","label","disabled","outputs","decls","vars","consts","template","rf","ctx","i0.ɵɵtemplate","pepperiIconRegistry","registerIcons","pepperiIconNumberCoins","pepperiIconNumberPercent","pepperiIconNumberNumber","pepperiIconNumberDecimal","pepperiIconSystemPhone","pepperiIconSystemEmail","pepperiIconSystemLink","pepperiIconSystemFullScreen","pepperiIconSystemEdit","pepperiIconTimeDatetime","pepperiIconTimeCal","PepperiTextboxIconModule","ɵɵinject","i1$1","PepperiIconRegistry","imports","CommonModule","MatCommonModule","MatButtonModule","MatFormFieldModule","MatIconModule","PepperiIconModule","declarations","exports"],"mappings":"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","sourcesContent":["<mat-icon *ngIf=\"!disabled && type === 'currency'\" class=\"text-icon\">\r\n    <pep-icon name=\"number_coins\">\r\n    </pep-icon>\r\n</mat-icon>\r\n<mat-icon *ngIf=\"!disabled && type === 'percentage'\" class=\"text-icon\">\r\n    <pep-icon name=\"number_percent\">\r\n    </pep-icon>\r\n</mat-icon>\r\n<mat-icon *ngIf=\"!disabled && type === 'int'\" class=\"text-icon\">\r\n    <pep-icon name=\"number_number\">\r\n    </pep-icon>\r\n</mat-icon>\r\n<mat-icon *ngIf=\"!disabled && type === 'real'\" class=\"text-icon\">\r\n    <pep-icon name=\"number_decimal\">\r\n    </pep-icon>\r\n</mat-icon>\r\n<button *ngIf=\"type === 'phone'\" class=\"pepperi-button md regular\" mat-button (click)=\"iconButtonClicked()\"\r\n    [disabled]=\"value.length === 0\" [ngClass]=\"{ disabled: value.length === 0 }\">\r\n    <mat-icon>\r\n        <pep-icon name=\"system_phone\">\r\n        </pep-icon>\r\n    </mat-icon>\r\n</button>\r\n<button *ngIf=\"type === 'email'\" class=\"pepperi-button md regular\" mat-button (click)=\"iconButtonClicked()\"\r\n    [disabled]=\"value.length === 0\" [ngClass]=\"{ disabled: value.length === 0 }\">\r\n    <mat-icon>\r\n        <pep-icon name=\"system_email\">\r\n        </pep-icon>\r\n    </mat-icon>\r\n</button>\r\n<button *ngIf=\"type === 'link'\" class=\"pepperi-button md regular\" mat-button (click)=\"iconButtonClicked()\"\r\n    [disabled]=\"value.length === 0\" [ngClass]=\"{ disabled: value.length === 0 }\">\r\n    <mat-icon>\r\n        <pep-icon name=\"system_link\">\r\n        </pep-icon>\r\n    </mat-icon>\r\n</button>\r\n<button *ngIf=\"type === 'textarea'\" class=\"pepperi-button md regular\" mat-button (click)=\"iconButtonClicked()\">\r\n    <mat-icon>\r\n        <pep-icon name=\"system_full_screen\">\r\n        </pep-icon>\r\n    </mat-icon>\r\n</button>\r\n<button *ngIf=\"type === 'richhtmltextarea'\" class=\"pepperi-button md regular\" mat-button (click)=\"iconButtonClicked()\">\r\n    <mat-icon>\r\n        <pep-icon name=\"{{ disabled ? 'system_full_screen' : 'system_edit'}}\">\r\n        </pep-icon>\r\n    </mat-icon>\r\n</button>\r\n\r\n<button *ngIf=\"!disabled && type === 'datetime'\" class=\"pepperi-button md regular\" mat-button\r\n    (click)=\"iconButtonClicked()\">\r\n    <mat-icon>\r\n        <pep-icon name=\"time_datetime\">\r\n        </pep-icon>\r\n    </mat-icon>\r\n</button>\r\n\r\n<button *ngIf=\"!disabled && type === 'date'\" class=\"pepperi-button md regular\" mat-button (click)=\"iconButtonClicked()\">\r\n    <mat-icon>\r\n        <pep-icon name=\"time_cal\">\r\n        </pep-icon>\r\n    </mat-icon>\r\n</button>\r\n\r\n<!-- <span class=\"text-icon\" *ngIf=\"type === 'percentage'\">%</span> -->\r\n<!-- <mat-icon matSuffix>sentiment_very_satisfied</mat-icon> -->\r\n<!-- <mat-icon matPrefix>sentiment_very_satisfied</mat-icon> -->\r\n<!-- <mat-hint>Hint</mat-hint> -->\r\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'pep-textbox-icon',\r\n    templateUrl: './textbox-icon.component.html',\r\n    styleUrls: ['./textbox-icon.component.scss'],\r\n})\r\nexport class PepperiTextboxIconComponent {\r\n    @Input() value: string;\r\n    @Input() label: string;\r\n    @Input() type?: string;\r\n    @Input() disabled: boolean;\r\n\r\n    test = true;\r\n    @Output() iconClicked: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n    constructor() { }\r\n\r\n    iconButtonClicked(): void {\r\n        const currentValue = this.value;\r\n        if (currentValue.toString().trim().length > 0) {\r\n            switch (this.type) {\r\n                case 'email':\r\n                    window.open('mailto:' + currentValue, 'email');\r\n                    break;\r\n                case 'phone':\r\n                    window.open('tel:' + currentValue, 'tel');\r\n                    break;\r\n                case 'link':\r\n                    window.open(currentValue);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n\r\n        this.iconClicked.emit();\r\n    }\r\n}\r\n","\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { MatCommonModule } from '@angular/material/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\n// import { PepperiModule } from '@pepperi-addons/ngx-lib';\r\nimport {\r\n    PepperiIconModule,\r\n    PepperiIconRegistry,\r\n    pepperiIconNumberCoins,\r\n    pepperiIconNumberPercent,\r\n    pepperiIconNumberNumber,\r\n    pepperiIconNumberDecimal,\r\n    pepperiIconSystemPhone,\r\n    pepperiIconSystemEmail,\r\n    pepperiIconSystemLink,\r\n    pepperiIconSystemFullScreen,\r\n    pepperiIconSystemEdit,\r\n    pepperiIconTimeDatetime,\r\n    pepperiIconTimeCal\r\n} from '@pepperi-addons/ngx-lib/icon';\r\n\r\nimport { PepperiTextboxIconComponent} from './textbox-icon.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        // Material modules,\r\n        MatCommonModule,\r\n        MatButtonModule,\r\n        MatFormFieldModule,\r\n        MatIconModule,\r\n        // Pepperi modules\r\n        PepperiIconModule\r\n    ],\r\n    exports: [PepperiTextboxIconComponent],\r\n    declarations: [PepperiTextboxIconComponent],\r\n})\r\nexport class PepperiTextboxIconModule {\r\n\r\n    constructor(private pepperiIconRegistry: PepperiIconRegistry) {\r\n        this.pepperiIconRegistry.registerIcons([\r\n            pepperiIconNumberCoins,\r\n            pepperiIconNumberPercent,\r\n            pepperiIconNumberNumber,\r\n            pepperiIconNumberDecimal,\r\n            pepperiIconSystemPhone,\r\n            pepperiIconSystemEmail,\r\n            pepperiIconSystemLink,\r\n            pepperiIconSystemFullScreen,\r\n            pepperiIconSystemEdit,\r\n            pepperiIconTimeDatetime,\r\n            pepperiIconTimeCal\r\n        ]);\r\n    }\r\n}\r\n"]}