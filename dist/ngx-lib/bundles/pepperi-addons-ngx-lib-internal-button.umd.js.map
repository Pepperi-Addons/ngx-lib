{"version":3,"file":"pepperi-addons-ngx-lib-internal-button.umd.js","sources":["../../../projects/ngx-lib/internal-button/internal-button.component.html","../../../projects/ngx-lib/internal-button/internal-button.component.ts","../../../projects/ngx-lib/internal-button/internal-button.module.ts","../../../projects/ngx-lib/internal-button/public-api.ts","../../../projects/ngx-lib/internal-button/pepperi-addons-ngx-lib-internal-button.ts"],"sourcesContent":["<ng-container [ngSwitch]=\"type\">\r\n    <ng-container *ngSwitchCase=\"'reference'\">\r\n        <ng-container *ngIf=\"layoutType === LAYOUT_TYPE.PepperiForm; then formBlock; else notFormBlock\"></ng-container>\r\n        <ng-template #formBlock>\r\n            <div class=\"pepperi-button-container reference-button\">\r\n                <pep-field-title [label]=\"label\" [required]=\"required\" [disabled]=\"disabled\" [xAlignment]=\"xAlignment\"\r\n                    [showTitle]=\"showTitle\">\r\n                </pep-field-title>\r\n                <ng-container *ngIf=\"createNewReference; then newBlock; else existingBlock\"></ng-container>\r\n                <ng-template #newBlock>\r\n                    <button [id]=\"key\" title=\"{{ formattedValue }}\" mat-button class=\"pepperi-button md regular\"\r\n                        (click)=\"onButtonClicked($event)\" [ngClass]=\"{\r\n                            disabled: disabled,\r\n                            'pull-left': xAlignment == '1' || xAlignment == '0',\r\n                            'pull-right': xAlignment == '2',\r\n                            'center-alignment': xAlignment == '3'\r\n                        }\">\r\n                        <span class=\"pull-left flip\">{{ 'ACTIONS.CREATE_NEW' | translate }}</span>\r\n                        <mat-icon class=\"pull-right flip\" pepRtlClass>\r\n                            <pep-icon name=\"number_plus\" (click)=\"onButtonClicked($event)\">\r\n                            </pep-icon>\r\n                        </mat-icon>\r\n                    </button>\r\n                </ng-template>\r\n                <ng-template #existingBlock>\r\n                    <pep-group-buttons [buttons]=\"referenceButtons\" [buttonsClass]=\"'md regular'\"\r\n                        [buttonsDisabled]=\"false\" [viewType]=\"GROUP_BUTTONS_VIEW_TYPE.Split\">\r\n                    </pep-group-buttons>\r\n                </ng-template>\r\n            </div>\r\n        </ng-template>\r\n        <ng-template #notFormBlock>\r\n            <ng-container *ngTemplateOutlet=\"linkTemplate\"></ng-container>\r\n        </ng-template>\r\n    </ng-container>\r\n\r\n    <ng-container *ngSwitchCase=\"'listofobjects'\">\r\n        <ng-container *ngIf=\"layoutType === LAYOUT_TYPE.PepperiForm; then formBlock; else notFormBlock\"></ng-container>\r\n        <ng-template #formBlock>\r\n            <ng-container *ngTemplateOutlet=\"buttonTemplate; context: {internal: true}\"></ng-container>\r\n        </ng-template>\r\n        <ng-template #notFormBlock>\r\n            <ng-container *ngTemplateOutlet=\"linkTemplate\"></ng-container>\r\n        </ng-template>\r\n    </ng-container>\r\n\r\n    <ng-container *ngSwitchCase=\"'button'\">\r\n        <ng-container [ngSwitch]=\"key\">\r\n            <ng-container *ngSwitchCase=\"'ObjectMenu'\">\r\n                <span (click)=\"onButtonClicked($event)\" title=\"{{ key }}\">\r\n                    <mat-icon>\r\n                        <pep-icon *ngIf=\"key == 'ObjectMenu'\" name=\"system_menu\">\r\n                        </pep-icon>\r\n                    </mat-icon>\r\n                </span>\r\n            </ng-container>\r\n\r\n            <ng-container *ngSwitchCase=\"'Agents' || 'ContactPersons' || 'Buyers'\">\r\n                <ng-container *ngIf=\"layoutType === LAYOUT_TYPE.PepperiTable; then tableBlock; else nonTableBlock\">\r\n                </ng-container>\r\n                <ng-template #nonTableBlock>\r\n                    <ng-container *ngTemplateOutlet=\"buttonTemplate; context: {internal: true}\"></ng-container>\r\n                </ng-template>\r\n                <ng-template #tableBlock>\r\n                    <span [id]=\"key\" title=\"{{ formattedValue }}\"\r\n                        class=\"pepperi-report-input readonly body-sm\">{{ formattedValue }}</span>\r\n                </ng-template>\r\n            </ng-container>\r\n\r\n            <ng-container *ngSwitchDefault>\r\n                <ng-container *ngIf=\"layoutType === LAYOUT_TYPE.PepperiForm; then buttonBlock; else linkBlock\">\r\n                </ng-container>\r\n\r\n                <ng-template #buttonBlock>\r\n                    <ng-container *ngTemplateOutlet=\"buttonTemplate; context: {internal: false}\"></ng-container>\r\n                </ng-template>\r\n                <ng-template #linkBlock>\r\n                    <ng-container *ngTemplateOutlet=\"linkTemplate\"></ng-container>\r\n                </ng-template>\r\n            </ng-container>\r\n        </ng-container>\r\n    </ng-container>\r\n</ng-container>\r\n\r\n<ng-template #buttonTemplate let-internal=\"internal\">\r\n    <div class=\"pepperi-button-container\">\r\n        <pep-field-title [label]=\"label\" [required]=\"required\" [disabled]=\"disabled\" [xAlignment]=\"xAlignment\"\r\n            [showTitle]=\"showTitle\">\r\n        </pep-field-title>\r\n\r\n        <ng-container *ngIf=\"internal; then internalButtonTemplate; else regularButtonTemplate\"></ng-container>\r\n        <ng-template #regularButtonTemplate>\r\n            <button [id]=\"key\" title=\"{{ formattedValue }}\" mat-button class=\"pepperi-button md regular\"\r\n                dir=\"{{ xAlignment == '2' ? 'rtl' : 'ltr' }}\" (click)=\"onButtonClicked($event)\" [disabled]=\"disabled\"\r\n                [ngClass]=\"{disabled: disabled, 'pull-left': xAlignment == '1' || xAlignment == '0', 'pull-right': xAlignment == '2', 'center-alignment': xAlignment == '3'}\">\r\n                {{ formattedValue }}\r\n            </button>\r\n        </ng-template>\r\n\r\n        <ng-template #internalButtonTemplate>\r\n            <button [id]=\"key\" title=\"{{ formattedValue }}\" mat-button class=\"pepperi-button md regular\"\r\n                dir=\"{{ xAlignment == '2' ? 'rtl' : 'ltr' }}\" (click)=\"openReferenceObjectInternal($event)\"\r\n                [disabled]=\"disabled\"\r\n                [ngClass]=\"{disabled: disabled, 'pull-left': xAlignment == '1' || xAlignment == '0', 'pull-right': xAlignment == '2', 'center-alignment': xAlignment == '3'}\">\r\n                <ng-container *ngIf=\"formattedValue == '0' || formattedValue == ''; then newBlock; else existingBlock\">\r\n                </ng-container>\r\n                <ng-template #newBlock>\r\n                    <span class=\"pull-left flip\">{{ 'LIST.SELECT' | translate }}&nbsp;</span>\r\n                    <mat-icon>\r\n                        <pep-icon name=\"number_plus\">\r\n                        </pep-icon>\r\n                    </mat-icon>\r\n                </ng-template>\r\n                <ng-template #existingBlock>\r\n                    <span\r\n                        class=\"pull-left flip\">{{ formattedValue }}&nbsp;{{ 'LIST.SELECTED' | translate }}&nbsp;</span>\r\n                    <mat-icon>\r\n                        <pep-icon name=\"system_edit\">\r\n                        </pep-icon>\r\n                    </mat-icon>\r\n                </ng-template>\r\n            </button>\r\n        </ng-template>\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #linkTemplate>\r\n    <ng-container *ngIf=\"formattedValue?.length > 0; then notEmptyBlock; else emptyBlock\"></ng-container>\r\n    <ng-template #notEmptyBlock>\r\n        <a href=\"{{ value }}\" (mousedown)=\"hrefFunction($event)\" class=\"color-link\">\r\n            <span *ngIf=\"layoutType === LAYOUT_TYPE.PepperiTable\" [id]=\"key\" title=\"{{ formattedValue }}\"\r\n                class=\"body-sm pepperi-report-input readonly\">\r\n                {{ formattedValue }}\r\n            </span>\r\n            <span *ngIf=\"layoutType !== LAYOUT_TYPE.PepperiTable\" [id]=\"key\" title=\"{{ formattedValue }}\"\r\n                class=\"body-sm pepperi-card-input\" style=\"display: block;\">\r\n                {{ formattedValue }}\r\n            </span>\r\n        </a>\r\n    </ng-template>\r\n    <ng-template #emptyBlock>\r\n        <span>&nbsp;</span>\r\n    </ng-template>\r\n</ng-template>","import { Component, OnInit, OnChanges, Input, Output, EventEmitter, ChangeDetectionStrategy, Renderer2, ElementRef, OnDestroy } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { LAYOUT_TYPE, CustomizationService } from '@pepperi-addons/ngx-lib';\r\nimport { GROUP_BUTTONS_VIEW_TYPE, PepperiGroupButton } from '@pepperi-addons/ngx-lib/group-buttons';\r\n\r\n@Component({\r\n    selector: 'pep-internal-button',\r\n    templateUrl: './internal-button.component.html',\r\n    styleUrls: ['./internal-button.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class PepperiInternalButtonComponent implements OnInit, OnChanges, OnDestroy {\r\n    @Input() key = '';\r\n    @Input() value = '';\r\n    @Input() formattedValue = '';\r\n    @Input() label = '';\r\n    @Input() referenceObjectInternalType: any;\r\n    @Input() type = 'button'; // || 'reference' || 'listofobjects' || 'Agents' || 'ContactPersons' || 'Buyers', etc\r\n    @Input() required = false;\r\n    @Input() disabled = false;\r\n    @Input() readonly = false;\r\n    @Input() xAlignment = '0';\r\n    @Input() rowSpan = 1;\r\n\r\n    controlType = 'button';\r\n\r\n    @Input() form: FormGroup = null;\r\n    @Input() showTitle = true;\r\n    @Input() layoutType: LAYOUT_TYPE = LAYOUT_TYPE.PepperiForm;\r\n\r\n    @Output() elementClicked: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() valueChanged: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    LAYOUT_TYPE = LAYOUT_TYPE;\r\n    GROUP_BUTTONS_VIEW_TYPE = GROUP_BUTTONS_VIEW_TYPE;\r\n\r\n    standAlone = false;\r\n    createNewReference = false;\r\n    referenceButtons: Array<PepperiGroupButton> = [\r\n        { Value: '', Class: '', Callback: () => this.onButtonClicked(event), Icon: null },\r\n        { Value: '', Class: 'caution', Callback: () => this.remove(event), Icon: 'system_bin' },\r\n    ];\r\n\r\n    constructor(\r\n        private customizationService: CustomizationService,\r\n        private renderer: Renderer2,\r\n        private element: ElementRef) { }\r\n\r\n    ngOnInit(): void {\r\n        if (this.form === null) {\r\n            this.standAlone = true;\r\n            this.form = this.customizationService.getDefaultFromGroup(this.key, this.value, this.required, this.readonly, this.disabled);\r\n            this.formattedValue = this.formattedValue || this.value;\r\n            this.renderer.addClass(this.element.nativeElement, CustomizationService.STAND_ALONE_FIELD_CLASS_NAME);\r\n        }\r\n    }\r\n\r\n    ngOnChanges(changes: any): void {\r\n        if (this.type === 'reference') {\r\n            this.createNewReference = this.value.length === 0;\r\n            this.referenceButtons[0].Value = this.formattedValue;\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        if (this.elementClicked) {\r\n            this.elementClicked.unsubscribe();\r\n        }\r\n    }\r\n\r\n    onButtonClicked(event): void {\r\n        if (this.type === 'reference') {\r\n            const valueArr = this.value.split('/');\r\n\r\n            this.elementClicked.emit({\r\n                apiName: this.key,\r\n                eventWhich: event.which,\r\n                value: valueArr[valueArr.length - 1], // .replace(/[^a-zA-Z0-9 ]/g, ''),\r\n                referenceObjectInternalType: this.referenceObjectInternalType,\r\n            });\r\n        } else if (this.type === 'button' && true) {\r\n            this.elementClicked.emit({\r\n                apiName: this.key,\r\n                eventWhich: event.which,\r\n                value: this.value // should contain the program name\r\n            });\r\n        }\r\n        else {\r\n            this.elementClicked.emit({ apiName: this.key, eventWhich: event.which });\r\n        }\r\n    }\r\n\r\n    hrefFunction(event): void {\r\n        if (event.which === 1 /*|| event.which === 2*/) {\r\n            this.onButtonClicked(event);\r\n        }\r\n    }\r\n\r\n    openReferenceObjectInternal(event): void {\r\n        this.elementClicked.emit({\r\n            apiName: this.key,\r\n            eventWhich: event.which,\r\n            value: this.value,\r\n            referenceObjectInternalType: this.referenceObjectInternalType\r\n        });\r\n    }\r\n\r\n    remove(event): void {\r\n        this.value = '';\r\n        this.valueChanged.emit({ apiName: this.key, value: this.value });\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { MatCommonModule } from '@angular/material/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\nimport { PepperiModule } from '@pepperi-addons/ngx-lib';\r\nimport {\r\n    PepperiIconModule,\r\n    PepperiIconRegistry,\r\n    pepperiIconSystemEdit,\r\n    pepperiIconSystemMenu,\r\n    pepperiIconNumberPlus\r\n} from '@pepperi-addons/ngx-lib/icon';\r\nimport { PepperiFieldTitleModule } from '@pepperi-addons/ngx-lib/field-title';\r\nimport { PepperiGroupButtonsModule } from '@pepperi-addons/ngx-lib/group-buttons';\r\n\r\nimport { PepperiInternalButtonComponent } from './internal-button.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        // Material modules,\r\n        MatFormFieldModule,\r\n        MatCommonModule,\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        // Pepperi modules\r\n        PepperiModule,\r\n        PepperiIconModule,\r\n        PepperiFieldTitleModule,\r\n        PepperiGroupButtonsModule\r\n    ],\r\n    exports: [ PepperiInternalButtonComponent ],\r\n    declarations: [ PepperiInternalButtonComponent ],\r\n})\r\nexport class PepperiInternalButtonModule {\r\n    constructor(private pepperiIconRegistry: PepperiIconRegistry) {\r\n        this.pepperiIconRegistry.registerIcons([\r\n            pepperiIconSystemEdit,\r\n            pepperiIconSystemMenu,\r\n            pepperiIconNumberPlus\r\n        ]);\r\n    }\r\n}\r\n","/*\r\n * Public API Surface of ngx-lib/internal-button\r\n */\r\nexport * from './internal-button.module';\r\nexport * from './internal-button.component';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i0.ɵɵelementContainer","i0.ɵɵelementStart","i0.ɵɵlistener","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵpropertyInterpolate","i0.ɵɵproperty","i0.ɵɵadvance","i0.ɵɵtextInterpolate","i0.ɵɵelement","i0.ɵɵtemplate","i0.ɵɵelementContainerStart","i0.ɵɵelementContainerEnd","i0.ɵɵtextInterpolate1","i0.ɵɵtextInterpolate2","LAYOUT_TYPE","EventEmitter","GROUP_BUTTONS_VIEW_TYPE","CustomizationService","Component","ChangeDetectionStrategy","Input","Output","pepperiIconSystemEdit","pepperiIconSystemMenu","pepperiIconNumberPlus","CommonModule","MatFormFieldModule","MatCommonModule","MatButtonModule","MatIconModule","PepperiModule","PepperiIconModule","PepperiFieldTitleModule","PepperiGroupButtonsModule","NgModule"],"mappings":"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"}