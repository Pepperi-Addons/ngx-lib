{"version":3,"file":"pepperi-addons-ngx-lib-checkbox.umd.js","sources":["../../../projects/ngx-lib/checkbox/checkbox.component.html","../../../projects/ngx-lib/checkbox/checkbox.component.ts","../../../projects/ngx-lib/checkbox/checkbox.module.ts","../../../projects/ngx-lib/checkbox/public-api.ts","../../../projects/ngx-lib/checkbox/pepperi-addons-ngx-lib-checkbox.ts"],"sourcesContent":["<ng-container [formGroup]=\"form\">\r\n    <!-- New code -->\r\n    <ng-template #pepperiTemplate>\r\n        <div class=\"pepperi-checkbox-container pepperi-input\" [ngClass]=\"{\r\n                'disable': disabled,\r\n                'pepperi-report-checkbox': layoutType === LAYOUT_TYPE.PepperiTable && !isActive,\r\n                'pepperi-card-checkbox': layoutType === LAYOUT_TYPE.PepperiCard,\r\n                'one-row': rowSpan === 1,\r\n                'no-title': label.length == 0,\r\n                'right-alignment pull-right flip': xAlignment == '2',\r\n                'center-alignment': xAlignment == '3'\r\n            }\" dir=\"{{ xAlignment == '2' ? 'rtl' : 'ltr' }}\">\r\n            <!-- (click)=\"toggleChecked($event)\" -->\r\n            <ng-container *ngIf=\"type == 'booleanText'; then booleanTextTemplate; else regularTemplate\"></ng-container>\r\n            <ng-template #booleanTextTemplate>\r\n                <div (click)=\"toggleChecked($event)\" class=\"mat-checkbox-layout body-sm\"\r\n                    [title]=\"(label.length > 0 ? label + ': ' : '') + (value.toLowerCase() == 'true' || value == '1' ? ('CHECKBOX.TRUE' | translate) : ('CHECKBOX.FALSE' | translate))\">\r\n                    <button [id]=\"key\" class=\"mat-icon-button emoji-icon pull-left flip\">\r\n                        {{ value.toLowerCase() == 'true' || value == '1' ? additionalValueObject.CheckedText : additionalValueObject.UncheckedText }}\r\n                    </button>\r\n                    <span *ngIf=\"label.length > 0 && layoutType !== LAYOUT_TYPE.PepperiTable\"\r\n                        class=\"mat-checkbox-label emoji-title\">{{ label }}</span>\r\n                </div>\r\n            </ng-template>\r\n            <ng-template #regularTemplate>\r\n                <mat-checkbox [name]=\"key\" class=\"body-sm ellipsis\" type=\"checkbox\" (change)=\"onMaterialChange($event)\"\r\n                    [title]=\"(label.length > 0 ? label + ': ' : '') + (value.toLowerCase() == 'true' || value == '1' ? ('CHECKBOX.TRUE' | translate) : ('CHECKBOX.FALSE' | translate))\"\r\n                    [checked]=\"value.toLowerCase() == 'true' || value == '1' ? true : false\" [disabled]=\"disabled\">\r\n                    <span *ngIf=\"label.length > 0 && layoutType !== LAYOUT_TYPE.PepperiTable\">{{ label }}</span>\r\n                </mat-checkbox>\r\n            </ng-template>\r\n        </div>\r\n    </ng-template>\r\n\r\n    <ng-container *ngIf=\"layoutType === LAYOUT_TYPE.PepperiForm\">\r\n        <pep-field-title [label]=\"label\" [required]=\"required\" [disabled]=\"disabled\" [xAlignment]=\"xAlignment\"\r\n            [showTitle]=\"false\">\r\n        </pep-field-title>\r\n        <ng-container *ngTemplateOutlet=\"pepperiTemplate\"></ng-container>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"layoutType === LAYOUT_TYPE.PepperiCard\">\r\n        <ng-container *ngTemplateOutlet=\"pepperiTemplate\"></ng-container>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"layoutType === LAYOUT_TYPE.PepperiTable\">\r\n        <ng-container *ngIf=\"key === 'ItemHasActiveCampaign'; then itemCampaignBlock; else checkboxBlock\">\r\n        </ng-container>\r\n        <ng-template #itemCampaignBlock>\r\n            <ng-container *ngIf=\"value.toLowerCase() == 'true' || value == '1'; then trueTemplate; else falseTemplate\">\r\n            </ng-container>\r\n            <ng-template #trueTemplate>\r\n                <mat-icon class=\"has-active-campaign\" title=\"{{ 'CHECKBOX.TRUE' | translate }}\">\r\n                    <pep-icon name=\"system_bolt\">\r\n                    </pep-icon>\r\n                </mat-icon>\r\n            </ng-template>\r\n            <ng-template #falseTemplate>\r\n                <span>&nbsp;</span>\r\n            </ng-template>\r\n        </ng-template>\r\n        <ng-template #checkboxBlock>\r\n            <ng-container *ngTemplateOutlet=\"pepperiTemplate\"></ng-container>\r\n        </ng-template>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"layoutType === LAYOUT_TYPE.Editmodal\">\r\n        <pep-field-title [label]=\"label\" [required]=\"required\" [disabled]=\"disabled\" [xAlignment]=\"xAlignment\"\r\n            [showTitle]=\"false\">\r\n        </pep-field-title>\r\n        <ng-container *ngTemplateOutlet=\"pepperiTemplate\"></ng-container>\r\n    </ng-container>\r\n</ng-container>","import { Component, OnInit, Input, Output, EventEmitter, ChangeDetectionStrategy, OnDestroy, Renderer2, ElementRef } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { CustomizationService, LAYOUT_TYPE } from '@pepperi-addons/ngx-lib';\r\n\r\n@Component({\r\n    selector: 'pep-checkbox',\r\n    templateUrl: './checkbox.component.html',\r\n    styleUrls: ['./checkbox.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class PepperiCheckboxComponent implements OnInit, OnDestroy {\r\n    @Input() key = '';\r\n    @Input() value = '';\r\n    @Input() label = '';\r\n    @Input() type = 'checkbox'; // || 'booleanText'\r\n    @Input() required = false;\r\n    @Input() disabled = false;\r\n    @Input() readonly = false;\r\n    @Input() xAlignment = '0';\r\n    @Input() rowSpan = 1;\r\n    @Input() additionalValue: any;\r\n\r\n    controlType = 'checkbox';\r\n\r\n    @Input() form: FormGroup = null;\r\n    @Input() isActive = false;\r\n    @Input() showTitle = true;\r\n    @Input() layoutType: LAYOUT_TYPE = LAYOUT_TYPE.PepperiForm;\r\n\r\n    @Output() valueChanged: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    LAYOUT_TYPE = LAYOUT_TYPE;\r\n    standAlone = false;\r\n\r\n    additionalValueObject: any;\r\n    public jsonLib = JSON;\r\n\r\n    constructor(\r\n        private renderer: Renderer2,\r\n        private customizationService: CustomizationService,\r\n        public translate: TranslateService,\r\n        private element: ElementRef\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        if (this.form === null) {\r\n            this.standAlone = true;\r\n            this.form = this.customizationService.getDefaultFromGroup(this.key, this.value, this.required, this.readonly, this.disabled, 0, '', true);\r\n\r\n            this.renderer.addClass(this.element.nativeElement, CustomizationService.STAND_ALONE_FIELD_CLASS_NAME);\r\n        }\r\n\r\n        if (this.type === 'booleanText') {\r\n            try {\r\n                if (typeof this.additionalValue === 'string') {\r\n                    this.additionalValueObject = JSON.parse(this.additionalValue);\r\n                } else {\r\n                    this.additionalValueObject = this.additionalValue;\r\n                }\r\n            } catch {\r\n                this.additionalValueObject = {\r\n                    CheckedText: this.translate.instant('CHECKBOX.TRUE'),\r\n                    UncheckedText: this.translate.instant('CHECKBOX.FALSE')\r\n                };\r\n            }\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        if (this.valueChanged) {\r\n            this.valueChanged.unsubscribe();\r\n        }\r\n    }\r\n\r\n    onMaterialChange(e: any): void {\r\n        this.changeValue(e.checked);\r\n    }\r\n\r\n    toggleChecked(event: any): void {\r\n        if (!this.disabled) {\r\n            const isChecked: boolean = this.value === 'true' || this.value === '1' ? true : false;\r\n            this.value = (!isChecked).toString();\r\n            this.changeValue(this.value);\r\n        }\r\n    }\r\n\r\n    changeValue(value: any): void {\r\n        this.customizationService.updateFormFieldValue(this.form, this.key, value);\r\n        this.valueChanged.emit({ apiName: this.key, value });\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\n\r\nimport { MatCommonModule } from '@angular/material/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\nimport { PepperiModule } from '@pepperi-addons/ngx-lib';\r\nimport { PepperiIconModule, PepperiIconRegistry, pepperiIconSystemBolt } from '@pepperi-addons/ngx-lib/icon';\r\nimport { PepperiFieldTitleModule } from '@pepperi-addons/ngx-lib/field-title';\r\n\r\nimport { PepperiCheckboxComponent } from './checkbox.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        ReactiveFormsModule,\r\n        FormsModule,\r\n        // Material modules\r\n        MatCommonModule,\r\n        MatFormFieldModule,\r\n        MatCheckboxModule,\r\n        MatIconModule,\r\n        // Pepperi modules\r\n        PepperiModule,\r\n        PepperiIconModule,\r\n        PepperiFieldTitleModule\r\n    ],\r\n    exports: [ PepperiCheckboxComponent ],\r\n    declarations: [ PepperiCheckboxComponent ],\r\n})\r\nexport class PepperiCheckboxModule {\r\n    constructor(private pepperiIconRegistry: PepperiIconRegistry) {\r\n        this.pepperiIconRegistry.registerIcons([\r\n            pepperiIconSystemBolt\r\n        ]);\r\n    }\r\n}\r\n","/*\r\n * Public API Surface of ngx-lib/checkbox\r\n */\r\nexport * from './checkbox.module';\r\nexport * from './checkbox.component';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i0.ɵɵelementContainer","i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵadvance","i0.ɵɵtextInterpolate","i0.ɵɵlistener","i0.ɵɵtemplate","i0.ɵɵproperty","i0.ɵɵtextInterpolate1","i0.ɵɵpropertyInterpolate","i0.ɵɵelementContainerStart","i0.ɵɵelement","i0.ɵɵelementContainerEnd","LAYOUT_TYPE","EventEmitter","CustomizationService","Component","ChangeDetectionStrategy","Input","Output","pepperiIconSystemBolt","CommonModule","ReactiveFormsModule","FormsModule","MatCommonModule","MatFormFieldModule","MatCheckboxModule","MatIconModule","PepperiModule","PepperiIconModule","PepperiFieldTitleModule","NgModule"],"mappings":"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"}