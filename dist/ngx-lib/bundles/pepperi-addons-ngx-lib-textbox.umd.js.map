{"version":3,"file":"pepperi-addons-ngx-lib-textbox.umd.js","sources":["../../../projects/ngx-lib/textbox/textbox.component.html","../../../projects/ngx-lib/textbox/textbox.component.ts","../../../projects/ngx-lib/textbox/textbox.module.ts","../../../projects/ngx-lib/textbox/public-api.ts","../../../projects/ngx-lib/textbox/pepperi-addons-ngx-lib-textbox.ts"],"sourcesContent":["<ng-container [formGroup]=\"form\">\r\n    <!-- New code -->\r\n    <ng-template #pepperiTemplate let-isFormView=\"isFormView\" let-hasParent=\"hasParent\">\r\n        <pep-field-title *ngIf=\"isFormView && !hasParent\" [label]=\"label\" [required]=\"required\" [disabled]=\"disabled\"\r\n            [maxFieldCharacters]=\"maxFieldCharacters\" [xAlignment]=\"xAlignment\" [showTitle]=\"showTitle\"\r\n            [inputLength]=\"input.value?.length\">\r\n        </pep-field-title>\r\n        <mat-form-field appearance=\"outline\">\r\n            <input #input [id]=\"key\" [name]=\"key\" class=\" body-sm \" matInput autocomplete=\"off\"\r\n                (keyup)=\"onKeyUp($event)\" (keypress)=\"onKeyPress($event)\"\r\n                maxlength=\"{{ maxFieldCharacters > 0 ? maxFieldCharacters : 99999 }}\"\r\n                [placeholder]=\"hasParent && !disabled ? placeholder : ''\"\r\n                [ngStyle]=\"{ color: textColor, 'text-align': xAlignment == '3' ? 'center' : xAlignment == '2' ? 'right' : 'left' }\"\r\n                title=\"{{ formattedValue }}\" [formControlName]=\"key\" [type]=\"type\"\r\n                [value]=\"type == 'link' ? formattedValue : (isFocus ? value : formattedValue)\" (blur)=\"onBlur($event)\"\r\n                (keyup.enter)=\"$event?.currentTarget?.blur()\" (focus)=\"onFocus($event)\" [disabled]=\"disabled\"\r\n                [ngClass]=\"{'disable-hidden': disabled && formattedValue.length > 0 && (type === 'phone' || type === 'email' || type === 'link')}\" />\r\n\r\n            <span\r\n                *ngIf=\"disabled && formattedValue.length > 0 && (type === 'phone' || type === 'email' || type === 'link')\"\r\n                class=\"dis-grid\">\r\n                <a href=\"javascript:void(0)\" (click)=\"anchorClicked()\" [id]=\"key\" [name]=\"key\"\r\n                    class=\"color-link body-sm \"> {{formattedValue}}</a>\r\n            </span>\r\n            <mat-error>\r\n                <ng-container *ngIf=\"required && input.value.length == 0 then requiredError else otherError\">\r\n                </ng-container>\r\n                <ng-template #requiredError>\r\n                    <span class=\"body-xs\" [title]=\"('MESSAGES.ERROR_IS_REQUIRED' | translate: { field: label })\"\r\n                        [innerText]=\"('MESSAGES.ERROR_IS_REQUIRED' | translate: { field: label })\">\r\n                    </span>\r\n                </ng-template>\r\n                <ng-template #otherError>\r\n                    <span class=\"body-xs\" [title]=\"(input.value | toNumber) > this.maxValue || (input.value | toNumber) < this.minValue ?\r\n                            ('MESSAGES.ERROR_RANGE_IS_NOT_VALID' | translate: { min: minValue, max: maxValue }) :\r\n                            ('MESSAGES.ERROR_IS_NOT_VALID' | translate: { field: label })\" [innerText]=\"(input.value | toNumber) > this.maxValue || (input.value | toNumber) < this.minValue ?\r\n                            ('MESSAGES.ERROR_RANGE_IS_NOT_VALID' | translate: { min: minValue, max: maxValue }) :\r\n                            ('MESSAGES.ERROR_IS_NOT_VALID' | translate: { field: label })\">\r\n                    </span>\r\n                </ng-template>\r\n            </mat-error>\r\n\r\n            <pep-textbox-icon *ngIf=\"isFormView && xAlignment == '2'\" matPrefix [value]=\"value\" [label]=\"label\"\r\n                [type]=\"type\" [disabled]=\"disabled\">\r\n            </pep-textbox-icon>\r\n            <pep-textbox-icon *ngIf=\"isFormView && (xAlignment == '1' || xAlignment == '0')\" matSuffix [value]=\"value\"\r\n                [label]=\"label\" [type]=\"type\" [disabled]=\"disabled\">\r\n            </pep-textbox-icon>\r\n        </mat-form-field>\r\n    </ng-template>\r\n\r\n    <ng-container *ngIf=\"layoutType === LAYOUT_TYPE.PepperiForm\">\r\n        <ng-container *ngIf=\"parentFieldKey; then groupedBlock; else regularBlock\"></ng-container>\r\n        <ng-template #regularBlock>\r\n            <ng-container *ngTemplateOutlet=\"pepperiTemplate; context: { isFormView: true, hasParent: false }\">\r\n            </ng-container>\r\n        </ng-template>\r\n        <ng-template #groupedBlock>\r\n            <ng-container [formGroupName]=\"parentFieldKey\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <input [id]=\"key\" [name]=\"key\" class=\" body-sm \" matInput autocomplete=\"off\"\r\n                        (keyup)=\"onKeyUp($event)\" (keypress)=\"onKeyPress($event)\"\r\n                        [placeholder]=\"!disabled ? placeholder : ''\" title=\"{{ formattedValue }}\"\r\n                        [formControlName]=\"key\" [value]=\"value\" (blur)=\"onBlur($event)\"\r\n                        (keyup.enter)=\"$event?.currentTarget?.blur()\" (focus)=\"onFocus($event)\" [disabled]=\"disabled\" />\r\n                </mat-form-field>\r\n                <!-- <ng-container *ngTemplateOutlet=\"pepperiTemplate; context: { isFormView: true, hasParent: true }\"></ng-container> -->\r\n            </ng-container>\r\n        </ng-template>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"layoutType === LAYOUT_TYPE.PepperiCard\">\r\n        <ng-container *ngIf=\"isInEditMode; then editBlock; else readOnlyBlock\"></ng-container>\r\n        <ng-template #editBlock>\r\n            <div [ngClass]=\"{'one-row': rowSpan === 1}\">\r\n                <ng-container *ngTemplateOutlet=\"pepperiTemplate; context: { isFormView: false, hasParent: false }\">\r\n                </ng-container>\r\n            </div>\r\n        </ng-template>\r\n        <ng-template #readOnlyBlock>\r\n            <div class=\"pepperi-card-input card-flex-container\"\r\n                [ngClass]=\"{'one-row': rowSpan === 1, 'pepperi-button weak': isActive && !disabled}\"\r\n                [class]=\"'text-align-' + xAlignment\" (click)=\"!disabled ? cardTemplateClicked($event) : ''\">\r\n                <span *ngIf=\"showTitle && label != ''\" class=\"body-xs title\"\r\n                    title=\"{{ label }}\">{{ label }}&nbsp;</span>\r\n                <span [id]=\"key\" title=\"{{ formattedValue }}\" class=\"body-sm value\">{{ formattedValue }}</span>\r\n                <button *ngIf=\"isActive && !disabled\" class=\"pepperi-button weak card-edit-button\" mat-button>\r\n                    <mat-icon>\r\n                        <pep-icon name=\"system_edit\">\r\n                        </pep-icon>\r\n                    </mat-icon>\r\n                </button>\r\n            </div>\r\n        </ng-template>\r\n\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"layoutType === LAYOUT_TYPE.PepperiTable\">\r\n        <ng-container *ngIf=\"isActive && !disabled; then selectedBlock; else notSelectedBlock\"></ng-container>\r\n        <ng-template #selectedBlock>\r\n            <ng-container *ngTemplateOutlet=\"pepperiTemplate; context: { isFormView: false, hasParent: false }\">\r\n            </ng-container>\r\n        </ng-template>\r\n        <ng-template #notSelectedBlock>\r\n            <ng-container *ngIf=\"formattedValue?.length > 0; then notEmptyBlock; else emptyBlock\"></ng-container>\r\n            <ng-template #notEmptyBlock>\r\n                <ng-container [ngSwitch]=\"type\">\r\n                    <ng-container *ngSwitchCase=\"'link'\">\r\n                        <a [id]=\"key\" class=\"color-link body-sm pepperi-report-input\"\r\n                            [ngClass]=\"{'disable': (disabled && value === '')}\" *ngIf=\"formattedValue != null\"\r\n                            title=\"{{ formattedValue }}\" target=\"_blank\"\r\n                            href=\"{{ value ? value : formattedValue }}\">{{ formattedValue }}</a>\r\n                    </ng-container>\r\n                    <ng-container *ngSwitchDefault>\r\n                        <span [id]=\"key\" class=\"body-sm pepperi-report-input\" [ngClass]=\"{'readonly': disabled}\"\r\n                            title=\"{{ formattedValue }}\" [ngStyle]=\"{ color: textColor }\">{{ formattedValue }}</span>\r\n                    </ng-container>\r\n                </ng-container>\r\n            </ng-template>\r\n            <ng-template #emptyBlock>\r\n                <span [id]=\"key\">&nbsp;</span>\r\n            </ng-template>\r\n        </ng-template>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"layoutType === LAYOUT_TYPE.Editmodal\">\r\n        <ng-container *ngTemplateOutlet=\"pepperiTemplate; context: { isFormView: true, hasParent: false }\">\r\n        </ng-container>\r\n    </ng-container>\r\n\r\n</ng-container>","import {\r\n    Component, OnInit, OnChanges, Input, Output, EventEmitter,\r\n    ChangeDetectionStrategy, ElementRef, ViewChild, Renderer2, OnDestroy\r\n} from '@angular/core';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { LAYOUT_TYPE, CustomizationService } from '@pepperi-addons/ngx-lib';\r\n\r\n@Component({\r\n    selector: 'pep-textbox',\r\n    templateUrl: './textbox.component.html',\r\n    styleUrls: ['./textbox.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PepperiTextboxComponent implements OnChanges, OnInit, OnDestroy {\r\n    @Input() key = '';\r\n    @Input() value = '';\r\n    @Input() formattedValue = '';\r\n    @Input() label = '';\r\n    @Input() placeholder = '';\r\n    @Input() type = 'text';\r\n    @Input() required = false;\r\n    @Input() disabled = false;\r\n    @Input() readonly = false;\r\n    @Input() maxFieldCharacters: number;\r\n    @Input() textColor = '';\r\n    @Input() xAlignment = '0';\r\n    @Input() rowSpan = 1;\r\n    @Input() lastFocusField: any;\r\n    @Input() minValue = NaN;\r\n    @Input() maxValue = NaN;\r\n\r\n    controlType = 'textbox';\r\n\r\n    @Input() form: FormGroup = null;\r\n    @Input() isActive = false;\r\n    @Input() showTitle = true;\r\n    @Input() layoutType: LAYOUT_TYPE = LAYOUT_TYPE.PepperiForm;\r\n    @Input() parentFieldKey: string = null;\r\n\r\n    @Output() valueChanged: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() formValidationChanged: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n    @ViewChild('input') input: ElementRef;\r\n\r\n    LAYOUT_TYPE = LAYOUT_TYPE;\r\n    standAlone = false;\r\n    isInEditMode = false;\r\n    isFocus = false;\r\n\r\n    constructor(\r\n        public fb: FormBuilder,\r\n        private customizationService: CustomizationService,\r\n        private renderer: Renderer2,\r\n        private element: ElementRef\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        if (this.form === null) {\r\n            this.standAlone = true;\r\n\r\n            this.minValue = isNaN(this.minValue) && !isNaN(this.maxValue) ? 0 : this.minValue;\r\n            this.maxValue = isNaN(this.maxValue) && !isNaN(this.minValue) ? 99999 : this.maxValue;\r\n            this.form = this.customizationService.getDefaultFromGroup(this.key, this.value, this.required, this.readonly, this.disabled,\r\n                this.maxFieldCharacters, this.type, false, true, this.minValue, this.maxValue);\r\n            this.formattedValue = this.formattedValue || this.value;\r\n\r\n            this.renderer.addClass(this.element.nativeElement, CustomizationService.STAND_ALONE_FIELD_CLASS_NAME);\r\n        }\r\n\r\n        this.readonly = this.type === 'duration' ? true : this.readonly; // Hack until we develop Timer UI for editing Duration field\r\n    }\r\n\r\n    ngOnChanges(changes: any): void {\r\n        this.readonly = this.type === 'duration' ? true : this.readonly; // Hack until we develop Timer UI for editing Duration field\r\n\r\n        const self = this;\r\n        setTimeout(() => {\r\n            if (self.lastFocusField) {\r\n                self.lastFocusField.focus();\r\n                self.lastFocusField = null;\r\n            } else {\r\n            }\r\n        }, 100);\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        if (this.valueChanged) {\r\n            this.valueChanged.unsubscribe();\r\n        }\r\n\r\n        if (this.formValidationChanged) {\r\n            this.formValidationChanged.unsubscribe();\r\n        }\r\n    }\r\n\r\n    onFocus(e: any): void {\r\n        this.isFocus = true;\r\n    }\r\n\r\n    onBlur(e: any): void {\r\n        this.isFocus = false;\r\n\r\n        const value = e.target ? e.target.value : e;\r\n        if (value !== this.value) {\r\n            this.formattedValue = this.value = value;\r\n\r\n            // There is formControl.setValue in the onKeyUp so we don't need it here.\r\n            // this.propagateChange(value, e.relatedTarget);\r\n            this.valueChanged.emit({\r\n                apiName: this.key,\r\n                value,\r\n                lastFocusedField: e.relatedTarget\r\n            });\r\n            // return true; // What this is for? Tomer.p comment this in 16.4.\r\n        }\r\n\r\n        if (this.isInEditMode) {\r\n            this.isInEditMode = false;\r\n        }\r\n    }\r\n\r\n    onKeyUp(event: any): void {\r\n        const value = event.target ? event.target.value : event;\r\n        this.customizationService.updateFormFieldValue(this.form, this.key, value, this.parentFieldKey);\r\n        this.formValidationChanged.emit(this.form.valid);\r\n    }\r\n\r\n    onKeyPress(event: any): any {\r\n        let inputChar = String.fromCharCode(event.charCode);\r\n        const e = event as KeyboardEvent;\r\n\r\n        if (\r\n            [8, 9, 13, 27, 190].indexOf(e.which) !== -1 ||\r\n            // Allow: Ctrl+A\r\n            (e.which === 65 && e.ctrlKey === true) ||\r\n            // Allow: Ctrl+C\r\n            (e.which === 67 && e.ctrlKey === true) ||\r\n            // Allow: Ctrl+V\r\n            (e.which === 86 && e.ctrlKey === true) ||\r\n            // Allow: Ctrl+X\r\n            (e.which === 88 && e.ctrlKey === true) /*||\r\n            // Allow: home, end, left, right\r\n            (e.which >= 35 && e.which <= 39)*/\r\n        ) {\r\n            // let it happen, don't do anything\r\n            return true;\r\n        }\r\n\r\n        switch (this.type) {\r\n            case 'int': {\r\n                const pattern = /[0-9\\+\\-\\ ]/;\r\n                if (!pattern.test(inputChar)) {\r\n                    e.preventDefault();\r\n                }\r\n                break;\r\n            }\r\n            case 'currency':\r\n            case 'real': {\r\n                const decPoint = '.';\r\n                const thousandSeparator = ',';\r\n                const pattern = /^\\d+(\\.\\d{1,9})?$/;\r\n                if (e.which === 46) {\r\n                    inputChar = inputChar + '0';\r\n                } else if (e.which === 44) {\r\n                    inputChar = inputChar + '000';\r\n                }\r\n                if (!pattern.test(event.target.value + inputChar)) {\r\n                    e.preventDefault();\r\n                }\r\n                break;\r\n            }\r\n            case 'phone': {\r\n                const pattern = /^[\\d\\.\\-\\+\\(\\)\\*\\#]+$/;\r\n                if (!pattern.test(event.target.value + inputChar)) {\r\n                    e.preventDefault();\r\n                }\r\n                break;\r\n            }\r\n            case 'text': {\r\n                // if (this.maxFieldCharacters !== 0 && event.target.value.length >= this.maxFieldCharacters) {\r\n                //     e.preventDefault();\r\n                // }\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    anchorClicked(): void {\r\n        const currentValue = this.value;\r\n        if (currentValue.trim().length > 0) {\r\n            switch (this.type) {\r\n                case 'email':\r\n                    window.open('mailto:' + currentValue, 'email');\r\n                    break;\r\n                case 'phone':\r\n                    window.open('tel:' + currentValue, 'tel');\r\n                    break;\r\n                case 'link':\r\n                    window.open(currentValue);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    cardTemplateClicked(event: any): void {\r\n        const self = this;\r\n        this.isInEditMode = true;\r\n\r\n        setTimeout(() => {\r\n            self.input.nativeElement.focus();\r\n        }, 0);\r\n    }\r\n}\r\n","\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\n\r\nimport { MatCommonModule } from '@angular/material/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\nimport { PepperiModule } from '@pepperi-addons/ngx-lib';\r\nimport { PepperiIconModule, PepperiIconRegistry, pepperiIconSystemEdit } from '@pepperi-addons/ngx-lib/icon';\r\nimport { PepperiTextboxIconModule } from '@pepperi-addons/ngx-lib/textbox-icon';\r\nimport { PepperiFieldTitleModule } from '@pepperi-addons/ngx-lib/field-title';\r\n\r\nimport { PepperiTextboxComponent} from './textbox.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        ReactiveFormsModule,\r\n        FormsModule,\r\n        // Material modules,\r\n        MatCommonModule,\r\n        MatButtonModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        MatIconModule,\r\n        // Pepperi modules\r\n        PepperiModule,\r\n        PepperiIconModule,\r\n        PepperiFieldTitleModule,\r\n        PepperiTextboxIconModule\r\n    ],\r\n    exports: [PepperiTextboxComponent, ],\r\n    declarations: [PepperiTextboxComponent],\r\n})\r\nexport class PepperiTextboxModule {\r\n    constructor(private pepperiIconRegistry: PepperiIconRegistry) {\r\n        this.pepperiIconRegistry.registerIcons([\r\n            pepperiIconSystemEdit\r\n        ]);\r\n    }\r\n}\r\n","/*\r\n * Public API Surface of ngx-lib/textbox\r\n */\r\nexport * from './textbox.module';\r\nexport * from './textbox.component';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i0.ɵɵelement","i0.ɵɵproperty","i0.ɵɵelementStart","i0.ɵɵlistener","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵadvance","i0.ɵɵtextInterpolate1","i0.ɵɵelementContainer","i0.ɵɵtemplate","i0.ɵɵpropertyInterpolate","i0.ɵɵelementContainerStart","i0.ɵɵelementContainerEnd","i0.ɵɵclassMap","i0.ɵɵtextInterpolate","LAYOUT_TYPE","EventEmitter","CustomizationService","Component","ChangeDetectionStrategy","Input","Output","ViewChild","pepperiIconSystemEdit","CommonModule","ReactiveFormsModule","FormsModule","MatCommonModule","MatButtonModule","MatFormFieldModule","MatInputModule","MatIconModule","PepperiModule","PepperiIconModule","PepperiFieldTitleModule","PepperiTextboxIconModule","NgModule"],"mappings":"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"}