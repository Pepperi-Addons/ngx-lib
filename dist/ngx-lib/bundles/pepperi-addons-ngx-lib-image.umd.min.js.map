{"version":3,"sources":["../../../projects/ngx-lib/image/image.component.html","../../../projects/ngx-lib/image/image.component.ts","../../../projects/ngx-lib/image/image.module.ts"],"names":["i0.ɵɵelementContainerStart","i0.ɵɵelementStart","i0.ɵɵelement","i0.ɵɵlistener","$event","i0","ɵɵrestoreView","_r8_1","ɵɵnextContext","onFileClicked","i0.ɵɵelementEnd","i0.ɵɵelementContainerEnd","i0.ɵɵadvance","i0.ɵɵproperty","ctx_r1","required","disabled","xAlignment","showTitle","key","layoutType","standAlone","srcLarge","src","label","rowSpan","controlType","form","acceptImagesType","sizeLimitMB","_r11_1","errorHandler","i0.ɵɵstyleProp","ctx_r2","ɵɵsanitizeUrl","_r14_1","setTitle","ɵɵpureFunction1","_c2","ctx_r3","ɵɵpureFunction4","_c3","ctx_r4","menuField","Layout","YAlignment","XAlignment","i0.ɵɵpropertyInterpolate","ctx_r5","hasCampaignField","i0.ɵɵtemplate","ctx_r6","indicatorsField","PepperiImageComponent","translate","dialogService","customizationService","fileService","renderer","element","this","options","type","readonly","objectId","LAYOUT_TYPE","PepperiForm","isActive","valueChanged","EventEmitter","elementClicked","fieldHeight","dataURI","prototype","ngOnInit","getDefaultFromGroup","addClass","nativeElement","CustomizationService","STAND_ALONE_FIELD_CLASS_NAME","calculateFieldHeight","ngOnChanges","changes","_b","_a","currentValue","length","ngOnDestroy","unsubscribe","event","target","getNoImagePath","title","instant","style","visibility","enterChildren","emit","apiName","ENTER_CHILDREN","eventWhich","which","onFileChanged","value","JSON","parse","fileStr","updateFormFieldValue","fileExt","objectIdIsNotEmpty","hasParentImage","indexOf","openImageModal","itemImageClick","$","attr","next","fileStrArr","split","win","window","open","contentType","base64","blob","convertFromb64toBlob","url","URL","createObjectURL","location","href","openDialog","PepperiImagesFilmstripComponent","currIndex","showThumbnails","ɵɵdirectiveInject","i1$1","TranslateService","i2","DialogService","i3","FileService","Renderer2","ElementRef","selectors","inputs","outputs","features","ɵɵNgOnChangesFeature","decls","vars","consts","template","rf","ctx","pepperiIconRegistry","registerIcons","pepperiIconSystemMenu","pepperiIconSystemBolt","pepperiIconIndicatorDotPlaceholder","PepperiImageModule","ɵɵinject","i1","PepperiIconRegistry","imports","CommonModule","ReactiveFormsModule","FormsModule","MatCommonModule","MatFormFieldModule","MatIconModule","PepperiModule","PepperiIconModule","PepperiFieldTitleModule","PepperiFilesUploaderModule","declarations","exports"],"mappings":"isDAKYA,EAAAA,wBAAAA,GACIC,EAAAA,eAAAA,EAAAA,MAAAA,GACIC,EAAAA,UAAAA,EAAAA,kBAAAA,GAGAD,EAAAA,eAAAA,EAAAA,iBAAAA,GAG4CE,EAAAA,WAAAA,eAAAA,SAAAA,GAAAA,OAAAA,EAAAA,cAAAA,GAAAA,EAAAA,cAAAA,GAAAA,cAAAA,KAAAA,CAAqC,kBAAA,SAAAC,GAAA,OAAAC,EAAAC,cAAAC,GAAAF,EAAAG,cAAA,GAAAC,cAAAL,MAEjFM,EAAAA,eACJA,EAAAA,eACJC,EAAAA,yDAXwDC,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,UAAAA,EAAAA,gBAAAA,GAAAA,EAAAA,GAAAA,EAAAA,UAC/BD,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,QAAAA,EAAAA,MAAAA,CAAe,WAAAC,EAAAC,SAAfF,CAAe,WAAAC,EAAAE,SAAfH,CAAe,aAAAC,EAAAG,WAAfJ,CAAe,YAAAC,EAAAI,WAGhBN,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,KAAAA,EAAAA,IAAAA,CAAU,MAAAC,EAAAK,IAAVN,CAAU,aAAAC,EAAAM,WAAVP,CAAU,aAAAC,EAAAO,WAAVR,CAAU,MAAAC,EAAAQ,UAAAR,EAAAS,IAAVV,CAAU,QAAAC,EAAAU,MAAVX,CAAU,WAAAC,EAAAC,SAAVF,CAAU,WAAAC,EAAAE,SAAVH,CAAU,aAAAC,EAAAG,WAAVJ,CAAU,UAAAC,EAAAW,QAAVZ,CAAU,cAAAC,EAAAY,YAAVb,CAAU,OAAAC,EAAAa,KAAVd,CAAU,qBAAAC,EAAAc,iBAAVf,CAAU,cAAAC,EAAAe,4JASlC7B,EAAAA,wBAAAA,GACIC,EAAAA,eAAAA,EAAAA,MAAAA,GAEIA,EAAAA,eAAAA,EAAAA,MAAAA,GACgBE,EAAAA,WAAAA,SAAAA,SAAAA,GAAAA,OAAAA,EAAAA,cAAAA,GAAAA,EAAAA,cAAAA,GAAAA,eAAAA,KAAAA,CAAgC,SAAA,SAAAC,GAAA,OAAAC,EAAAC,cAAAwB,GAAAzB,EAAAG,cAAA,GAAAuB,aAAA3B,MADhDM,EAAAA,eAEJA,EAAAA,eACJC,EAAAA,yDAJQC,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,UAAAA,EAAAA,gBAAAA,EAAAA,EAAAA,KAAAA,EAAAA,YAAAA,KAAAA,EAAAA,WAAAA,KAAAA,EAAAA,WAAAA,KAAAA,EAAAA,aACgBD,EAAAA,UAAAA,GAAAoB,EAAAA,YAAAA,aAAAA,EAAAA,aAAXnB,EAAAA,WAAAA,KAAAA,EAAAA,IAAAA,CAAU,MAAAoB,EAAAT,MAAVX,CAAU,MAAAoB,EAAAV,IAAAlB,EAAA6B,gGAKvBlC,EAAAA,wBAAAA,GACIC,EAAAA,eAAAA,EAAAA,MAAAA,GAKIA,EAAAA,eAAAA,EAAAA,MAAAA,GAEIE,EAAAA,WAAAA,SAAAA,SAAAA,GAAAA,OAAAA,EAAAA,cAAAA,GAAAA,EAAAA,cAAAA,GAAAA,eAAAA,KAAAA,CAAgC,SAAA,SAAAC,GAAA,OAAAC,EAAAC,cAAA6B,GAAA9B,EAAAG,cAAA,GAAAuB,aAAA3B,KAAhCD,CAAgC,QAAA,SAAAC,GAAA,OAAAC,EAAAC,cAAA6B,GAAA9B,EAAAG,cAAA,GAAA4B,SAAAhC,MAFpCM,EAAAA,eAGJA,EAAAA,eACJC,EAAAA,yDAT6BC,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,UAAAA,EAAAA,gBAAAA,EAAAA,EAAAA,KAAAA,EAAAA,YAAAA,KAAAA,EAAAA,WAAAA,KAAAA,EAAAA,WAAAA,KAAAA,EAAAA,aAKLD,EAAAA,UAAAA,GAAAoB,EAAAA,YAAAA,aAAAA,EAAAA,aAAXnB,EAAAA,WAAAA,KAAAA,EAAAA,IAAAA,CAAU,UAAAR,EAAAgC,gBAAA,GAAAC,EAAA,cAAAC,EAAAtB,YAAVJ,CAAU,MAAA0B,EAAAf,MAAVX,CAAU,MAAA0B,EAAAhB,IAAAlB,EAAA6B,kIAQ3BlC,EAAAA,wBAAAA,GACIC,EAAAA,eAAAA,EAAAA,SAAAA,GAAmBE,EAAAA,WAAAA,SAAAA,SAAAA,GAAAA,OAAAA,EAAAA,cAAAA,GAAAA,EAAAA,cAAAA,GAAAA,cAAAA,MAOfF,EAAAA,eAAAA,EAAAA,YACIC,EAAAA,UAAAA,EAAAA,WAAAA,GAEJQ,EAAAA,eACJA,EAAAA,eACJC,EAAAA,yDAZYC,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,KAAAA,EAAAA,IAAAA,CAAU,UAAAR,EAAAmC,gBAAA,EAAAC,EAAA,MAAA,MAAAC,EAAAC,WAAA,MAAAD,EAAAC,UAAAC,OAAA,KAAAF,EAAAC,UAAAC,OAAAC,YAAA,MAAA,MAAAH,EAAAC,WAAA,MAAAD,EAAAC,UAAAC,OAAA,KAAAF,EAAAC,UAAAC,OAAAC,YAAA,MAAA,MAAAH,EAAAC,WAAA,MAAAD,EAAAC,UAAAC,OAAA,KAAAF,EAAAC,UAAAC,OAAAE,YAAA,MAAA,MAAAJ,EAAAC,WAAA,MAAAD,EAAAC,UAAAC,OAAA,KAAAF,EAAAC,UAAAC,OAAAE,wCActB9C,EAAAA,wBAAAA,GACIC,EAAAA,eAAAA,EAAAA,OAAAA,IAMIA,EAAAA,eAAAA,EAAAA,WAAAA,IACIC,EAAAA,UAAAA,EAAAA,WAAAA,IAEJQ,EAAAA,eACJA,EAAAA,eACJC,EAAAA,uDAXqDC,EAAAA,UAAAA,GAAAmC,EAAAA,sBAAAA,QAAAA,MAAAA,EAAAA,iBAAAA,KAAAA,EAAAA,iBAAAA,gBAA3ClC,EAAAA,WAAAA,KAAAA,EAAAA,IAAAA,CAAU,UAAAR,EAAAmC,gBAAA,EAAAC,EAAA,MAAA,MAAAO,EAAAC,kBAAA,MAAAD,EAAAC,iBAAAL,OAAA,KAAAI,EAAAC,iBAAAL,OAAAC,YAAA,MAAA,MAAAG,EAAAC,kBAAA,MAAAD,EAAAC,iBAAAL,OAAA,KAAAI,EAAAC,iBAAAL,OAAAC,YAAA,MAAA,MAAAG,EAAAC,kBAAA,MAAAD,EAAAC,iBAAAL,OAAA,KAAAI,EAAAC,iBAAAL,OAAAE,YAAA,MAAA,MAAAE,EAAAC,kBAAA,MAAAD,EAAAC,iBAAAL,OAAA,KAAAI,EAAAC,iBAAAL,OAAAE,qCAsBR9C,EAAAA,wBAAAA,GACIE,EAAAA,UAAAA,EAAAA,WAAAA,IAEJS,EAAAA,+CACAX,EAAAA,wBAAAA,GACIE,EAAAA,UAAAA,EAAAA,WAAAA,IAEJS,EAAAA,kDAfZX,EAAAA,wBAAAA,GACIC,EAAAA,eAAAA,EAAAA,OAAAA,IAMIA,EAAAA,eAAAA,EAAAA,YACIiD,EAAAA,WAAAA,EAAAA,EAAAA,EAAAA,EAAAA,eAAAA,IAIAA,EAAAA,WAAAA,EAAAA,EAAAA,EAAAA,EAAAA,eAAAA,GAIJxC,EAAAA,eACJA,EAAAA,eACJC,EAAAA,uDAjBUC,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,KAAAA,EAAAA,IAAAA,CAAU,UAAAR,EAAAmC,gBAAA,EAAAC,EAAA,MAAA,MAAAU,EAAAC,iBAAA,MAAAD,EAAAC,gBAAAR,OAAA,KAAAO,EAAAC,gBAAAR,OAAAC,YAAA,MAAA,MAAAM,EAAAC,iBAAA,MAAAD,EAAAC,gBAAAR,OAAA,KAAAO,EAAAC,gBAAAR,OAAAC,YAAA,MAAA,MAAAM,EAAAC,iBAAA,MAAAD,EAAAC,gBAAAR,OAAA,KAAAO,EAAAC,gBAAAR,OAAAE,YAAA,MAAA,MAAAK,EAAAC,iBAAA,MAAAD,EAAAC,gBAAAR,OAAA,KAAAO,EAAAC,gBAAAR,OAAAE,cAOMlC,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,UAAAA,MAAAA,EAAAA,iBAAAA,MAAAA,EAAAA,gBAAAA,eAAAA,KAAAA,EAAAA,gBAAAA,eAAAA,MAAAA,MAIAD,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,QAAAA,MAAAA,EAAAA,iBAAAA,MAAAA,EAAAA,gBAAAA,eAAAA,KAAAA,EAAAA,gBAAAA,eAAAA,MAAAA,KAAAA,QAAAA,6BAjF9Bb,EAAAA,wBAAAA,GACIA,EAAAA,wBAAAA,GAEIkD,EAAAA,WAAAA,EAAAA,EAAAA,EAAAA,GAAAA,eAAAA,GAcAA,EAAAA,WAAAA,EAAAA,EAAAA,EAAAA,GAAAA,eAAAA,GAQAA,EAAAA,WAAAA,EAAAA,EAAAA,EAAAA,GAAAA,eAAAA,GAWJvC,EAAAA,wBAGAuC,EAAAA,WAAAA,EAAAA,EAAAA,EAAAA,EAAAA,eAAAA,GAeAA,EAAAA,WAAAA,EAAAA,EAAAA,EAAAA,EAAAA,eAAAA,GAeAA,EAAAA,WAAAA,EAAAA,EAAAA,EAAAA,EAAAA,eAAAA,GAmBJvC,EAAAA,sDArFsBC,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,OAAAA,EAAAA,aAAAA,EAAAA,YAAAA,aAcAD,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,OAAAA,EAAAA,aAAAA,EAAAA,YAAAA,aAQAD,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,OAAAA,EAAAA,aAAAA,EAAAA,YAAAA,cAcJD,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,OAAAA,EAAAA,WAeAD,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,OAAAA,EAAAA,mBAAAA,MAAAA,EAAAA,iBAAAA,KAAAA,EAAAA,iBAAAA,iBAeAD,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,OAAAA,EAAAA,iBAAAA,KAAAA,MAAAA,EAAAA,gBAAAA,KAAAA,EAAAA,gBAAAA,mCCjBlB,SAAAwC,EACYC,EACAC,EACAC,EACAC,EACAC,EACAC,GALAC,KAAAN,UAAAA,EACAM,KAAAL,cAAAA,EACAK,KAAAJ,qBAAAA,EACAI,KAAAH,YAAAA,EACAG,KAAAF,SAAAA,EACAE,KAAAD,QAAAA,EAvCHC,KAAAzC,IAAM,GACNyC,KAAAtC,SAAW,GACXsC,KAAArC,IAAM,GACNqC,KAAAC,QAAe,KACfD,KAAApC,MAAQ,GACRoC,KAAAE,KAAO,QACPF,KAAA7C,UAAW,EACX6C,KAAA5C,UAAW,EACX4C,KAAAG,UAAW,EACXH,KAAA3C,WAAa,IACb2C,KAAAnC,QAAU,EACVmC,KAAAR,gBAAuB,KACvBQ,KAAAjB,UAAiB,KACjBiB,KAAAX,iBAAwB,KAEjCW,KAAAlC,YAAc,QAELkC,KAAAjC,KAAkB,KAClBiC,KAAAI,SAAW,GACXJ,KAAA1C,WAAY,EACZ0C,KAAAxC,WAA0B6C,EAAAA,YAAYC,YACtCN,KAAAO,UAAW,EACXP,KAAA/B,YAAc,EACd+B,KAAAhC,iBAAmB,uBAElBgC,KAAAQ,aAAkC,IAAIC,EAAAA,aACtCT,KAAAU,eAAoC,IAAID,EAAAA,aAElDT,KAAAK,YAAcA,EAAAA,YACdL,KAAAW,YAAc,GACdX,KAAAvC,YAAa,EACbuC,KAAAY,QAAU,YAWVnB,EAAAoB,UAAAC,SAAA,WACsB,OAAdd,KAAKjC,OACLiC,KAAKvC,YAAa,EAClBuC,KAAKjC,KAAOiC,KAAKJ,qBAAqBmB,oBAAoBf,KAAKzC,IAAKyC,KAAKrC,IAAKqC,KAAK7C,SAAU6C,KAAKG,SAAUH,KAAK5C,UAEjH4C,KAAKF,SAASkB,SAAShB,KAAKD,QAAQkB,cAAeC,EAAAA,qBAAqBC,+BAG5EnB,KAAKW,YAAcX,KAAKJ,qBAAqBwB,qBAAqBpB,KAAKxC,WAAYwC,KAAKnC,QAASmC,KAAKvC,aAG1GgC,EAAAoB,UAAAQ,YAAA,SAAYC,YACqB,QAAzBC,EAAW,QAAXC,EAAAF,EAAQ3D,WAAG,IAAA6D,OAAA,EAAAA,EAAEC,oBAAY,IAAAF,OAAA,EAAAA,EAAEG,QAAS,IAEpC1B,KAAKY,QAAU,OAIvBnB,EAAAoB,UAAAc,YAAA,WACQ3B,KAAKU,gBACLV,KAAKU,eAAekB,cAGpB5B,KAAKQ,cACLR,KAAKQ,aAAaoB,eAI1BnC,EAAAoB,UAAA1C,aAAA,SAAa0D,GACTA,EAAMC,OAAOnE,IAAMqC,KAAKH,YAAYkC,iBACpCF,EAAMC,OAAOE,MAAQhC,KAAKN,UAAUuC,QAAQ,mBAGhDxC,EAAAoB,UAAArC,SAAA,SAASqD,GACLA,EAAMC,OAAOI,MAAMC,WAAa,UAChCN,EAAMC,OAAOE,MAAsC,IAA9BH,EAAMC,OAAOE,MAAMN,OAAe1B,KAAKN,UAAUuC,QAAQ,0BAA4BJ,EAAMC,OAAOE,OAG3HvC,EAAAoB,UAAAuB,cAAA,SAAcP,GACV7B,KAAKU,eAAe2B,KAAK,CAAEC,QAAS7C,EAAsB8C,eAAgBC,WAAYX,EAAMY,SAGhGhD,EAAAoB,UAAA6B,cAAA,SAAcC,GACV3C,KAAKY,QAAU+B,EAAMjB,OAAS,EAAIkB,KAAKC,MAAMF,GAAS,KACtD3C,KAAKrC,IAAMqC,KAAKtC,SAAWsC,KAAKvC,YAAcuC,KAAKY,QAAUZ,KAAKY,QAAQkC,QAAU,GAEpF9C,KAAKJ,qBAAqBmD,qBAAqB/C,KAAKjC,KAAMiC,KAAKzC,IAAKyC,KAAKY,QAAUZ,KAAKY,QAAQoC,QAAU,IAC1GhD,KAAKQ,aAAa6B,KAAK,CAAEC,QAAStC,KAAKzC,IAAKoF,MAAKA,EAAE7E,YAAakC,KAAKlC,eAGzE2B,EAAAoB,UAAAoC,mBAAA,iBACI,OAAqB,QAAbzB,EAAAxB,KAAKI,gBAAQ,IAAAoB,OAAA,EAAAA,EAAEE,QAAS,GAAuB,MAAlB1B,KAAKI,UAG9CX,EAAAoB,UAAAhE,cAAA,SAAcgF,GACV,IAAIqB,GAAiB,EACjBlD,KAAKiD,sBAAwBjD,KAAKrC,KAAOqC,KAAKrC,IAAIwF,QAAQ,aAAe,IACzED,GAAiB,GAGrBlD,KAAKoD,eAAeF,GACpBlD,KAAKU,eAAe2B,KAAK,CAAEC,QAAStC,KAAKzC,IAAKiF,WAAYX,EAAMY,SAGpEhD,EAAAoB,UAAAwC,eAAA,SAAexB,GACX,IAAIqB,GAAiB,GAChBI,EAAEzB,EAAMC,QAAQyB,KAAK,QAAUD,EAAEzB,EAAMC,QAAQyB,KAAK,OAAOJ,QAAQ,aAAe,GAClFG,EAAEzB,EAAMC,QAAQ0B,KAAK,OAAO9B,QAAU4B,EAAEzB,EAAMC,QAAQ0B,KAAK,OAAOD,KAAK,OAAOJ,QAAQ,aAAe,KACtGD,GAAiB,GAGrBlD,KAAKoD,eAAeF,IAGxBzD,EAAAoB,UAAAuC,eAAA,SAAeF,GACX,GAAIlD,KAAKY,QAAS,CACd,IAAM6C,EAAazD,KAAKY,QAAQkC,QAAQY,MAAM,KAC9C,GAA0B,IAAtBD,EAAW/B,OAAc,CACzB,IAAMiC,EAAMC,OAAOC,KAAK,GAAI,UACtBC,EAAcL,EAAW,GAAGC,MAAM,KAAK,GACvCK,EAASN,EAAW,GAAGC,MAAM,KAAK,GAClCM,EAAOhE,KAAKH,YAAYoE,qBAAqBF,EAAQD,GACrDI,EAAMC,IAAIC,gBAAgBJ,GAChCL,EAAIU,SAASC,KAAOJ,QAINlE,KAAKL,cAAc4E,WACjCC,EAAAA,gCACA,CACIC,UAAW,EACXlH,IAAKyC,KAAKzC,IACVoF,MAAO3C,KAAKtC,UAAYsC,KAAKrC,IAC7BC,MAAOoC,KAAKpC,MACZwC,SAAUJ,KAAKI,SACfsE,gBAAgB,UA3IlBjF,EAAA8C,eAAiB,mDADtB9C,GAAqBhD,EAAAkI,kBAAAC,EAAAC,kBAAApI,EAAAkI,kBAAAG,EAAAC,eAAAtI,EAAAkI,kBAAAK,EAAA9D,sBAAAzE,EAAAkI,kBAAAK,EAAAC,aAAAxI,EAAAkI,kBAAAlI,EAAAyI,WAAAzI,EAAAkI,kBAAAlI,EAAA0I,+CAArB1F,EAAqB2F,UAAA,CAAA,CAAA,cAAAC,OAAA,CAAA9H,IAAA,MAAAG,SAAA,WAAAC,IAAA,MAAAsC,QAAA,UAAArC,MAAA,QAAAsC,KAAA,OAAA/C,SAAA,WAAAC,SAAA,WAAA+C,SAAA,WAAA9C,WAAA,aAAAQ,QAAA,UAAA2B,gBAAA,kBAAAT,UAAA,YAAAM,iBAAA,mBAAAtB,KAAA,OAAAqC,SAAA,WAAA9C,UAAA,YAAAE,WAAA,aAAA+C,SAAA,WAAAtC,YAAA,cAAAD,iBAAA,oBAAAsH,QAAA,CAAA9E,aAAA,eAAAE,eAAA,kBAAA6E,SAAA,CAAA9I,EAAA+I,sBAAAC,MAAA,EAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,EAAA,aAAA,CAAA,EAAA,QAAA,CAAA,EAAA,yBAAA,kBAAA,EAAA,WAAA,CAAA,EAAA,QAAA,WAAA,WAAA,aAAA,aAAA,CAAA,EAAA,KAAA,MAAA,aAAA,aAAA,MAAA,QAAA,WAAA,WAAA,aAAA,UAAA,cAAA,OAAA,qBAAA,cAAA,cAAA,kBAAA,CAAA,EAAA,cAAA,EAAA,WAAA,CAAA,EAAA,sBAAA,EAAA,KAAA,MAAA,MAAA,QAAA,SAAA,CAAA,EAAA,sBAAA,qBAAA,EAAA,KAAA,UAAA,MAAA,MAAA,QAAA,QAAA,QAAA,CAAA,EAAA,iBAAA,iBAAA,cAAA,OAAA,SAAA,EAAA,KAAA,UAAA,SAAA,CAAA,OAAA,eAAA,CAAA,EAAA,WAAA,iBAAA,EAAA,KAAA,QAAA,WAAA,CAAA,EAAA,uBAAA,CAAA,OAAA,eAAA,CAAA,EAAA,uBAAA,iBAAA,EAAA,KAAA,WAAA,CAAA,EAAA,QAAA,WAAA,CAAA,OAAA,4BAAA,OAAA,QAAA,EAAA,YAAA,QAAA,CAAA,OAAA,4BAAA,EAAA,YAAA,SAAAC,SAAA,SAAAC,EAAAC,SDlBlC1J,EAAAA,wBAAAA,EAAAA,GAEIkD,EAAAA,WAAAA,EAAAA,EAAAA,EAAAA,EAAAA,eAAAA,GAyFJvC,EAAAA,+BA3FcE,EAAAA,WAAAA,YAAAA,EAAAA,MAEID,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,OAAAA,WAAAA,EAAAA,qnDEsCd,SAAoB8I,GAAA/F,KAAA+F,oBAAAA,EAChB/F,KAAK+F,oBAAoBC,cAAc,CACnCC,EAAAA,sBACAC,EAAAA,sBACAC,EAAAA,sEALCC,iEAAAA,GAAkB3J,EAAA4J,SAAAC,EAAAC,uBAAAC,QAAA,CAjBlB,CACLC,EAAAA,aACAC,EAAAA,oBACAC,EAAAA,YAEAC,EAAAA,gBACAC,EAAAA,mBACAC,EAAAA,cAEAC,EAAAA,cACAC,EAAAA,kBACAC,EAAAA,wBACAC,EAAAA,gGAKKd,EAAkB,CAAAe,aAAA,CAFX1H,GAAqB+G,QAAA,CAdjCC,EAAAA,aACAC,EAAAA,oBACAC,EAAAA,YAEAC,EAAAA,gBACAC,EAAAA,mBACAC,EAAAA,cAEAC,EAAAA,cACAC,EAAAA,kBACAC,EAAAA,wBACAC,EAAAA,4BAA0BE,QAAA,CAEnB3H","sourcesContent":["<ng-container [formGroup]=\"form\">\r\n    <!-- image OR attachment -->\r\n    <ng-container *ngIf=\"type !== 'images'\">\r\n        <ng-container>\r\n            <!-- New code -->\r\n            <ng-container *ngIf=\"layoutType === LAYOUT_TYPE.PepperiForm\">\r\n                <div class=\"pepperi-file-container image-container\" [ngClass]=\"{ 'one-row': rowSpan == 1}\">\r\n                    <pep-field-title [label]=\"label\" [required]=\"required\" [disabled]=\"disabled\"\r\n                        [xAlignment]=\"xAlignment\" [showTitle]=\"showTitle\">\r\n                    </pep-field-title>\r\n                    <files-uploader [id]=\"key\" [key]=\"key\" [layoutType]=\"layoutType\" [standAlone]=\"standAlone\"\r\n                        [src]=\"srcLarge || src\" [label]=\"label\" [required]=\"required\" [disabled]=\"disabled\"\r\n                        [xAlignment]=\"xAlignment\" [rowSpan]=\"rowSpan\" [controlType]=\"controlType\" [form]=\"form\"\r\n                        [acceptedExtensions]=\"acceptImagesType\" (fileChanged)=\"onFileChanged($event)\"\r\n                        (elementClicked)=\"onFileClicked($event)\" [sizeLimitMB]=\"sizeLimitMB\">\r\n                    </files-uploader>\r\n                </div>\r\n            </ng-container>\r\n\r\n            <ng-container *ngIf=\"layoutType === LAYOUT_TYPE.PepperiCard\">\r\n                <div class=\"img-wrapper \"\r\n                    [ngClass]=\"{ 'left-alignment': xAlignment == '1' || xAlignment == '0', 'right-alignment': xAlignment == '2', 'center-alignment': xAlignment == '3' }\">\r\n                    <img [id]=\"key\" [style.max-height]=\"fieldHeight\" class=\"pepperi-report-file\" [alt]=\"label\"\r\n                        [src]=\"src\" (click)=\"itemImageClick($event)\" (error)=\"errorHandler($event)\" />\r\n                </div>\r\n            </ng-container>\r\n\r\n            <ng-container *ngIf=\"layoutType === LAYOUT_TYPE.PepperiTable\">\r\n                <div class=\"img-wrapper\" [ngClass]=\"{\r\n                        'left-alignment': xAlignment == '1' || xAlignment == '0',\r\n                        'right-alignment': xAlignment == '2',\r\n                        'center-alignment': xAlignment == '3'\r\n                    }\">\r\n                    <img [id]=\"key\" [style.max-height]=\"fieldHeight\" class=\"pepperi-report-file pepperi-report-img\"\r\n                        [ngClass]=\"['text-align-' + xAlignment]\" [alt]=\"label\" [src]=\"src\"\r\n                        (click)=\"itemImageClick($event)\" (error)=\"errorHandler($event)\" (load)=\"setTitle($event)\" />\r\n                </div>\r\n            </ng-container>\r\n        </ng-container>\r\n\r\n        <!-- Menu -->\r\n        <ng-container *ngIf=\"menuField\">\r\n            <button [id]=\"key\" (click)=\"enterChildren($event)\"\r\n                class=\"floating-field pepperi-button icon-button weak invert\" [ngClass]=\"{\r\n                    bottom: menuField?.Layout?.YAlignment == '2',\r\n                    top: menuField?.Layout?.YAlignment == '1',\r\n                    left: menuField?.Layout?.XAlignment == '1',\r\n                    right: menuField?.Layout?.XAlignment == '2'\r\n                }\">\r\n                <mat-icon>\r\n                    <pep-icon name=\"system_menu\">\r\n                    </pep-icon>\r\n                </mat-icon>\r\n            </button>\r\n        </ng-container>\r\n        <!-- Campaign -->\r\n        <ng-container *ngIf=\"hasCampaignField && hasCampaignField?.FormattedValue\">\r\n            <span [id]=\"key\" class=\"campaign floating-field\" title=\"{{ hasCampaignField?.FormattedValue }}\" [ngClass]=\"{\r\n                    bottom: hasCampaignField?.Layout?.YAlignment == '2',\r\n                    top: hasCampaignField?.Layout?.YAlignment == '1',\r\n                    left: hasCampaignField?.Layout?.XAlignment == '1',\r\n                    right: hasCampaignField?.Layout?.XAlignment == '2'\r\n                }\">\r\n                <mat-icon class=\"has-active-campaign\">\r\n                    <pep-icon name=\"system_bolt\">\r\n                    </pep-icon>\r\n                </mat-icon>\r\n            </span>\r\n        </ng-container>\r\n\r\n        <!-- Indicators -->\r\n        <ng-container *ngIf=\"indicatorsField && indicatorsField?.FormattedValue != ''\">\r\n            <span [id]=\"key\" class=\"indicators-container floating-field\" [ngClass]=\"{\r\n                    bottom: indicatorsField?.Layout?.YAlignment == '2',\r\n                    top: indicatorsField?.Layout?.YAlignment == '1',\r\n                    left: indicatorsField?.Layout?.XAlignment == '1',\r\n                    right: indicatorsField?.Layout?.XAlignment == '2'\r\n                }\">\r\n                <mat-icon>\r\n                    <ng-container *ngFor=\"let value of indicatorsField?.FormattedValue?.split(';')\">\r\n                        <pep-icon class=\"pull-left flip\" name=\"indicator_dot_placeholder\" fill=\"value\">\r\n                        </pep-icon>\r\n                    </ng-container>\r\n                    <ng-container *ngIf=\"indicatorsField?.FormattedValue?.split(';').length < 4\">\r\n                        <pep-icon class=\"pull-left flip\" name=\"indicator_dot_placeholder\">\r\n                        </pep-icon>\r\n                    </ng-container>\r\n                </mat-icon>\r\n            </span>\r\n        </ng-container>\r\n    </ng-container>\r\n</ng-container>","import {\r\n    Component, OnInit, OnChanges, Input, Output, EventEmitter,\r\n    ChangeDetectorRef, ChangeDetectionStrategy, ElementRef, OnDestroy, Renderer2\r\n} from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { FileService, LAYOUT_TYPE, STYLE_TYPE, CustomizationService } from '@pepperi-addons/ngx-lib';\r\nimport { DialogService } from '@pepperi-addons/ngx-lib/dialog';\r\nimport { PepperiImagesFilmstripComponent, ImagesFilmstripDialogData } from '@pepperi-addons/ngx-lib/images-filmstrip';\r\n\r\nimport * as $ from 'jquery';\r\n\r\n@Component({\r\n    selector: 'pep-image',\r\n    templateUrl: './image.component.html',\r\n    styleUrls: ['./image.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PepperiImageComponent implements OnChanges, OnInit, OnDestroy {\r\n    public static ENTER_CHILDREN = '[EnterChildren]';\r\n\r\n    @Input() key = '';\r\n    @Input() srcLarge = '';\r\n    @Input() src = '';\r\n    @Input() options: any = null;\r\n    @Input() label = '';\r\n    @Input() type = 'image';\r\n    @Input() required = false;\r\n    @Input() disabled = false;\r\n    @Input() readonly = false;\r\n    @Input() xAlignment = '0';\r\n    @Input() rowSpan = 1;\r\n    @Input() indicatorsField: any = null;\r\n    @Input() menuField: any = null;\r\n    @Input() hasCampaignField: any = null;\r\n\r\n    controlType = 'image';\r\n\r\n    @Input() form: FormGroup = null;\r\n    @Input() objectId = '';\r\n    @Input() showTitle = true;\r\n    @Input() layoutType: LAYOUT_TYPE = LAYOUT_TYPE.PepperiForm;\r\n    @Input() isActive = false;\r\n    @Input() sizeLimitMB = 5;\r\n    @Input() acceptImagesType = 'bmp,jpg,jpeg,png,gif'; // \"image/bmp, image/jpg, image/jpeg, image/png, image/tif, image/tiff\";\r\n\r\n    @Output() valueChanged: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() elementClicked: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    LAYOUT_TYPE = LAYOUT_TYPE;\r\n    fieldHeight = '';\r\n    standAlone = false;\r\n    dataURI = null;\r\n\r\n    constructor(\r\n        private translate: TranslateService,\r\n        private dialogService: DialogService,\r\n        private customizationService: CustomizationService,\r\n        private fileService: FileService,\r\n        private renderer: Renderer2,\r\n        private element: ElementRef) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        if (this.form === null) {\r\n            this.standAlone = true;\r\n            this.form = this.customizationService.getDefaultFromGroup(this.key, this.src, this.required, this.readonly, this.disabled);\r\n\r\n            this.renderer.addClass(this.element.nativeElement, CustomizationService.STAND_ALONE_FIELD_CLASS_NAME);\r\n        }\r\n\r\n        this.fieldHeight = this.customizationService.calculateFieldHeight(this.layoutType, this.rowSpan, this.standAlone);\r\n    }\r\n\r\n    ngOnChanges(changes: any): void {\r\n        if (changes.src?.currentValue?.length > 0) {\r\n            // Empty dataURI if there is change in the src.\r\n            this.dataURI = null;\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        if (this.elementClicked) {\r\n            this.elementClicked.unsubscribe();\r\n        }\r\n\r\n        if (this.valueChanged) {\r\n            this.valueChanged.unsubscribe();\r\n        }\r\n    }\r\n\r\n    errorHandler(event: any): void {\r\n        event.target.src = this.fileService.getNoImagePath();\r\n        event.target.title = this.translate.instant('IMAGE.NO_IMAGE');\r\n    }\r\n\r\n    setTitle(event: any): void {\r\n        event.target.style.visibility = 'visible';\r\n        event.target.title = event.target.title.length === 0 ? this.translate.instant('IMAGE.CLICK_TO_ENLARGE') : event.target.title;\r\n    }\r\n\r\n    enterChildren(event: any): void {\r\n        this.elementClicked.emit({ apiName: PepperiImageComponent.ENTER_CHILDREN, eventWhich: event.which });\r\n    }\r\n\r\n    onFileChanged(value: any): void {\r\n        this.dataURI = value.length > 0 ? JSON.parse(value) : null;\r\n        this.src = this.srcLarge = this.standAlone && this.dataURI ? this.dataURI.fileStr : '';\r\n\r\n        this.customizationService.updateFormFieldValue(this.form, this.key, this.dataURI ? this.dataURI.fileExt : '');\r\n        this.valueChanged.emit({ apiName: this.key, value, controlType: this.controlType });\r\n    }\r\n\r\n    objectIdIsNotEmpty(): boolean {\r\n        return (this.objectId?.length > 0 && this.objectId !== '0');\r\n    }\r\n\r\n    onFileClicked(event: any): void {\r\n        let hasParentImage = true;\r\n        if (this.objectIdIsNotEmpty() && this.src && this.src.indexOf('no-image') > -1) {\r\n            hasParentImage = false;\r\n        }\r\n\r\n        this.openImageModal(hasParentImage);\r\n        this.elementClicked.emit({ apiName: this.key, eventWhich: event.which });\r\n    }\r\n\r\n    itemImageClick(event: any): void {\r\n        let hasParentImage = true;\r\n        if (($(event.target).attr('src') && $(event.target).attr('src').indexOf('no-image') > -1) ||\r\n            ($(event.target).next('img').length && $(event.target).next('img').attr('src').indexOf('no-image') > -1)) {\r\n            hasParentImage = false;\r\n        }\r\n\r\n        this.openImageModal(hasParentImage);\r\n    }\r\n\r\n    openImageModal(hasParentImage: boolean): void {\r\n        if (this.dataURI) {\r\n            const fileStrArr = this.dataURI.fileStr.split(';');\r\n            if (fileStrArr.length === 2) {\r\n                const win = window.open('', '_blank');\r\n                const contentType = fileStrArr[0].split(':')[1];\r\n                const base64 = fileStrArr[1].split(',')[1];\r\n                const blob = this.fileService.convertFromb64toBlob(base64, contentType);\r\n                const url = URL.createObjectURL(blob);\r\n                win.location.href = url;\r\n            }\r\n        } else {\r\n            // Show image in modal.\r\n            const dialogRef = this.dialogService.openDialog(\r\n                PepperiImagesFilmstripComponent,\r\n                {\r\n                    currIndex: 0,\r\n                    key: this.key,\r\n                    value: this.srcLarge || this.src,\r\n                    label: this.label,\r\n                    objectId: this.objectId,\r\n                    showThumbnails: true\r\n                });\r\n        }\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\n\r\nimport { MatCommonModule } from '@angular/material/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\nimport { PepperiModule } from '@pepperi-addons/ngx-lib';\r\nimport {\r\n    PepperiIconModule,\r\n    PepperiIconRegistry,\r\n    pepperiIconSystemMenu,\r\n    pepperiIconSystemBolt,\r\n    pepperiIconIndicatorDotPlaceholder\r\n} from '@pepperi-addons/ngx-lib/icon';\r\nimport { PepperiFieldTitleModule } from '@pepperi-addons/ngx-lib/field-title';\r\nimport { PepperiFilesUploaderModule } from '@pepperi-addons/ngx-lib/files-uploader';\r\n\r\nimport { PepperiImageComponent } from './image.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        ReactiveFormsModule,\r\n        FormsModule,\r\n        // Material modules,\r\n        MatCommonModule,\r\n        MatFormFieldModule,\r\n        MatIconModule,\r\n        // Pepperi modules\r\n        PepperiModule,\r\n        PepperiIconModule,\r\n        PepperiFieldTitleModule,\r\n        PepperiFilesUploaderModule,\r\n    ],\r\n    exports: [ PepperiImageComponent ],\r\n    declarations: [ PepperiImageComponent ],\r\n})\r\nexport class PepperiImageModule {\r\n    constructor(private pepperiIconRegistry: PepperiIconRegistry) {\r\n        this.pepperiIconRegistry.registerIcons([\r\n            pepperiIconSystemMenu,\r\n            pepperiIconSystemBolt,\r\n            pepperiIconIndicatorDotPlaceholder\r\n        ]);\r\n    }\r\n}\r\n"]}