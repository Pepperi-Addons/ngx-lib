{"version":3,"file":"pepperi-addons-ngx-lib-form.umd.js","sources":["../../../node_modules/tslib/tslib.es6.js","../../../projects/ngx-lib/form/indicators.component.html","../../../projects/ngx-lib/form/indicators.component.ts","../../../projects/ngx-lib/form/internal-page.service.ts","../../../projects/ngx-lib/form/internal-list.component.html","../../../projects/ngx-lib/form/internal-list.component.ts","../../../projects/ngx-lib/form/internal-page.component.html","../../../projects/ngx-lib/form/internal-page.component.ts","../../../projects/ngx-lib/form/field-generator.component.html","../../../projects/ngx-lib/form/field-generator.component.ts","../../../projects/ngx-lib/form/form.component.html","../../../projects/ngx-lib/form/form.component.ts","../../../projects/ngx-lib/form/form.module.ts","../../../projects/ngx-lib/form/public-api.ts","../../../projects/ngx-lib/form/pepperi-addons-ngx-lib-form.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","<div class=\"indicators-container\" [ngClass]=\"{ 'is-inside-table': layoutType === LAYOUT_TYPE.PepperiTable }\">\r\n    <ng-container *ngFor=\"let value of value?.split(';')\">\r\n        <pep-icon name=\"indicator_dot_placeholder\" class=\"pull-left flip\" [fill]=\"value\"></pep-icon>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"key != 'ItemIndicatorsWithoutCampaign' && value?.split(';').length < 4\">\r\n        <pep-icon name=\"indicator_dot_placeholder\" class=\"pull-left flip\"></pep-icon>\r\n    </ng-container>\r\n</div>","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\r\nimport { LAYOUT_TYPE } from '@pepperi-addons/ngx-lib';\r\n\r\n@Component({\r\n    selector: 'pep-indicators',\r\n    templateUrl: './indicators.component.html',\r\n    styleUrls: ['./indicators.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PepperiIndicatorsComponent {\r\n    @Input() key: string;\r\n    @Input() value: string;\r\n\r\n    controlType = 'indicators';\r\n\r\n    @Input() layoutType: LAYOUT_TYPE = LAYOUT_TYPE.PepperiTable;\r\n    LAYOUT_TYPE = LAYOUT_TYPE;\r\n\r\n    constructor() { }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpService } from '@pepperi-addons/ngx-lib';\r\n\r\n@Injectable()\r\nexport class PepperiInternalPageService {\r\n\r\n    private transactionUrl: string;\r\n    private objectId: string;\r\n    private parentId = '0';\r\n    private searchCode: string;\r\n    private viewType: string;\r\n    public additionalApiName = '';\r\n\r\n    constructor(private httpService: HttpService) {\r\n        this.transactionUrl = 'Service1.svc/v1/OrderCenter/Transaction/';\r\n    }\r\n\r\n    getBaseParentUrl(): string {\r\n        const url = `${this.transactionUrl}${this.objectId}/ParentLine/${this.parentId}/`;\r\n        return url;\r\n    }\r\n\r\n    getChildren(callbackFunc: any): void {\r\n        const body = JSON.stringify({\r\n            TransactionUID: this.objectId,\r\n            SearchCode: this.searchCode,\r\n            AdditionalApiName: this.additionalApiName,\r\n            ParentTransactionLineID: this.parentId,\r\n            ViewType: this.viewType\r\n        });\r\n\r\n        // Set the additional api name with view type string.\r\n        const moreParams = this.additionalApiName.length > 0 ?\r\n            `${this.additionalApiName}/${this.viewType}` :\r\n            `''/${this.viewType}`;\r\n\r\n        const url = `${this.getBaseParentUrl()}Items/${moreParams}`;\r\n\r\n        this.httpService.postWapiApiCall(\r\n            url,\r\n            body).subscribe(\r\n                (res) => { callbackFunc(res); },\r\n                (error) => { },\r\n                () => { }\r\n        );\r\n    }\r\n\r\n    initDetails(objectId: string, parentId: string, searchCode: string, callbackFunc: any): void {\r\n        if (!objectId || !parentId) {\r\n            return;\r\n        }\r\n\r\n        this.objectId = objectId;\r\n        this.parentId = parentId;\r\n        this.searchCode = searchCode;\r\n\r\n        this.httpService.getWapiApiCall(\r\n            `${this.getBaseParentUrl()}ViewTypes`).subscribe(\r\n                (res) => { callbackFunc(res); },\r\n                (error) => { },\r\n                () => { }\r\n        );\r\n    }\r\n\r\n    changeChildrenViewType(viewType: string, callbackFunc: any): void {\r\n        this.viewType = viewType;\r\n        this.getChildren(callbackFunc);\r\n    }\r\n\r\n    changeAdditionalApiName(additionalApiName: string, callbackFunc: any): void {\r\n        this.additionalApiName = additionalApiName;\r\n        this.getChildren(callbackFunc);\r\n    }\r\n\r\n    childPlusClick(itemId: string, fieldApiName: string, callbackFunc: any): void {\r\n        const body = JSON.stringify({\r\n            TransactionUID: this.objectId,\r\n            SearchCode: this.searchCode,\r\n            ParentTransactionLineID: this.parentId,\r\n            TransactionLineUID: itemId,\r\n            FieldApiName: fieldApiName,\r\n            ViewType: this.viewType\r\n        });\r\n\r\n        this.httpService.postWapiApiCall(\r\n            `${this.getBaseParentUrl()}IncrementValue`,\r\n            body).subscribe(\r\n                (res) => { callbackFunc(res); },\r\n                (error) => { },\r\n                () => { }\r\n        );\r\n    }\r\n\r\n    childMinusClick(itemId: string, fieldApiName: string, callbackFunc: any): void {\r\n        const body = JSON.stringify({\r\n            TransactionUID: this.objectId,\r\n            SearchCode: this.searchCode,\r\n            ParentTransactionLineID: this.parentId,\r\n            TransactionLineUID: itemId,\r\n            FieldApiName: fieldApiName,\r\n            ViewType: this.viewType\r\n        });\r\n\r\n        this.httpService.postWapiApiCall(\r\n            `${this.getBaseParentUrl()}DecrementValue`,\r\n            body).subscribe(\r\n                (res) => { callbackFunc(res); },\r\n                (error) => { },\r\n                () => { }\r\n        );\r\n    }\r\n\r\n    childValueChanged(itemId: string, fieldApiName: string, value: string, callbackFunc: any): void {\r\n        const body = JSON.stringify({\r\n            TransactionUID: this.objectId,\r\n            SearchCode: this.searchCode,\r\n            ParentTransactionLineID: this.parentId,\r\n            TransactionLineUID: itemId,\r\n            FieldApiName: fieldApiName,\r\n            FieldValue: value,\r\n            ViewType: this.viewType\r\n        });\r\n\r\n        this.httpService.postWapiApiCall(\r\n            `${this.getBaseParentUrl()}SetFieldValue`,\r\n            body).subscribe(\r\n                (res) => { callbackFunc(res); },\r\n                (error) => { },\r\n                () => { }\r\n        );\r\n    }\r\n\r\n}\r\n","<ng-container *ngIf=\"totalRows == 0\">\r\n    <div class=\"no-data\">{{ noDataFoundMsg }}</div>\r\n</ng-container>\r\n<ng-container *ngIf=\"totalRows > 0\">\r\n    <div *ngIf=\"isTable\" #tableHeader class=\"table-header\"\r\n        [ngClass]=\"{ 'below-header-and-top-bar' : parentScroll == null }\" (mouseup)=\"onListResizeEnd($event)\"\r\n        (mouseenter)=\"onListHeaderMouseEnter($event)\" (mouseleave)=\"onListHeaderMouseLeave($event)\"\r\n        (mousemove)=\"onListResize($event)\">\r\n        <fieldset class=\"table-header-fieldset\">\r\n            <fieldset>\r\n                <div *ngFor=\"let field of uiControl?.ControlFields; let j = index\" class=\"header-column pull-left flip\"\r\n                    [ngStyle]=\"{ width: field.calcTitleColumnWidthString }\" [ngClass]=\"{\r\n                            'is-resizing': field.ApiName === pressedColumn,\r\n                            'is-first': j === 0,\r\n                            'is-last': j === uiControl?.ControlFields?.length - 1\r\n                        }\">\r\n                    <label *ngIf=\"field.Title != ''\" id=\"{{ field.ApiName }}\"\r\n                        class=\"header-label body-sm pull-left flip text-align-{{ field.Layout.XAlignment }}\"\r\n                        title=\"{{ field.Title }}\">\r\n                        {{ field.Title }}\r\n                    </label>\r\n                    <label *ngIf=\"field.Title == ''\" id=\"{{ field.ApiName }}\"\r\n                        class=\"header-label body-sm pull-left flip\">&nbsp;</label>\r\n\r\n                    <div *ngIf=\"supportResizing\" class=\"resizeBox pull-right flip\"\r\n                        (mousedown)=\"onListResizeStart($event, field.ApiName)\">\r\n                        <mat-icon>\r\n                            <pep-icon name=\"arrow-up\" class=\"asc\"></pep-icon>\r\n                        </mat-icon>\r\n                    </div>\r\n                </div>\r\n            </fieldset>\r\n        </fieldset>\r\n    </div>\r\n\r\n    <div #noVirtualScrollCont [ngClass]=\"{ 'table-body': isTable, 'cards-body': !isTable }\">\r\n        <ng-container *ngTemplateOutlet=\"listData\"></ng-container>\r\n    </div>\r\n    <ng-container *ngTemplateOutlet=\"listTotals\"></ng-container>\r\n</ng-container>\r\n\r\n<ng-template #listData>\r\n    <ng-container *ngFor=\"let pepperiObjectInput of scrollItems; let index; let isFirst = first; trackBy: trackByFunc\">\r\n        <ng-container *ngIf=\"isTable\">\r\n            <div class=\"table-row\"\r\n                (mouseenter)=\"onTableRowMouseEnter($event, pepperiObjectInput?.Data?.UID, pepperiObjectInput?.Data?.Type)\"\r\n                (mouseleave)=\"onTableRowMouseLeave($event, pepperiObjectInput?.Data?.UID, pepperiObjectInput?.Data?.Type)\"\r\n                [ngClass]=\"{\r\n                        highlighted: pepperiObjectInput?.Data?.UID + SEPARATOR + pepperiObjectInput?.Data?.Type === selectedItemId\r\n                    }\"\r\n                [ngStyle]=\"{ height: calculatedObjectHeight, visibility: showItems || pepperiObjectInput ? 'visible' : 'hidden' }\">\r\n                <fieldset class=\"table-row-fieldset\"\r\n                    [ngStyle]=\"{ 'background-color': pepperiObjectInput?.Data?.BackgroundColor }\">\r\n                    <pep-form [checkForChanges]=\"checkForChanges\" [uiControlHeader]=\"uiControl\"\r\n                        [firstFieldAsLink]=\"firstFieldAsLink\" [pepperiObjectInput]=\"pepperiObjectInput\"\r\n                        [canEditObject]=\"!disabled && pepperiObjectInput?.IsEditable\" [objectId]=\"objectId\"\r\n                        [parentId]=\"parentId\" [searchCode]=\"searchCode\" [lockEvents]=\"disableSelectionItems\"\r\n                        [layoutType]=\"LAYOUT_TYPE.PepperiTable\" [listType]=\"listType\" [isActive]=\"\r\n                                (pepperiObjectInput?.Data?.UID + SEPARATOR + pepperiObjectInput?.Data?.Type === selectedItemId ||\r\n                                pepperiObjectInput?.Data?.UID + SEPARATOR + pepperiObjectInput?.Data?.Type === hoveredItemId) && !isTouchDevice\r\n                            \" (notifyValueChanged)=\"onValueChanged($event)\"\r\n                        (notifyFieldClicked)=\"onCustomizeFieldClick($event)\"\r\n                        (notifyMenuItemClicked)=\"onCustomizeFieldMenuClicked($event)\"\r\n                        (click)=\"itemClicked($event, pepperiObjectInput)\" [pageType]=\"pageType\">\r\n                    </pep-form>\r\n                </fieldset>\r\n            </div>\r\n        </ng-container>\r\n\r\n        <ng-container *ngIf=\"!isTable\">\r\n            <div [class]=\"itemClass\"\r\n                (mouseenter)=\"onCardMouseEnter($event, pepperiObjectInput?.Data?.UID, pepperiObjectInput?.Data?.Type)\"\r\n                (mouseleave)=\"onCardMouseLeave($event, pepperiObjectInput?.Data?.UID, pepperiObjectInput?.Data?.Type)\"\r\n                [ngClass]=\"{\r\n                        highlighted: pepperiObjectInput?.Data?.UID + SEPARATOR + pepperiObjectInput?.Data?.Type === selectedItemId,\r\n                        cardView: isCardView\r\n                    }\" class=\"pull-left flip\"\r\n                [ngStyle]=\"{ height: calculatedObjectHeight, visibility: showItems || pepperiObjectInput ? 'visible' : 'hidden' }\">\r\n                <pep-form [firstFieldAsLink]=\"isCardView ? firstFieldAsLink : false\" [checkForChanges]=\"checkForChanges\"\r\n                    [uiControlHeader]=\"uiControl\" [pepperiObjectInput]=\"pepperiObjectInput\" [isCardView]=\"isCardView\"\r\n                    [canEditObject]=\"!disabled && pepperiObjectInput?.IsEditable\" [objectId]=\"objectId\"\r\n                    [parentId]=\"parentId\" [searchCode]=\"searchCode\" [lockEvents]=\"disableSelectionItems\"\r\n                    [layoutType]=\"getThumbnailsLayout()\" [listType]=\"listType\" [isActive]=\"\r\n                            (pepperiObjectInput?.Data?.UID + SEPARATOR + pepperiObjectInput?.Data?.Type === selectedItemId ||\r\n                                pepperiObjectInput?.Data?.UID + SEPARATOR + pepperiObjectInput?.Data?.Type === hoveredItemId) && !isTouchDevice\r\n                        \" (notifyValueChanged)=\"onValueChanged($event)\"\r\n                    (notifyFieldClicked)=\"onCustomizeFieldClick($event)\"\r\n                    (notifyMenuItemClicked)=\"onCustomizeFieldMenuClicked($event)\"\r\n                    (click)=\"itemClicked($event, pepperiObjectInput)\" [pageType]=\"pageType\">\r\n                </pep-form>\r\n            </div>\r\n        </ng-container>\r\n    </ng-container>\r\n</ng-template>\r\n\r\n<ng-template #listTotals>\r\n    <div *ngIf=\"totalsRow?.length > 0 && totalsRow.length <= uiControl?.ControlFields.length\" class=\"table-total\">\r\n        <fieldset class=\"table-header-fieldset\">\r\n            <div *ngFor=\"let field of uiControl?.ControlFields; let j = index\" class=\"total-column pull-left flip\"\r\n                [ngStyle]=\"{ width: field.calcTitleColumnWidthString }\">\r\n                <label class=\"total-label body-sm text-align-{{ field.Layout.XAlignment }}\">\r\n                    {{ totalsRow[j] }}\r\n                </label>\r\n            </div>\r\n        </fieldset>\r\n    </div>\r\n</ng-template>","import {\r\n    Component, Input, Output, EventEmitter, OnInit, Renderer2, ViewChild, ElementRef,\r\n    ChangeDetectorRef, OnDestroy, OnChanges\r\n} from '@angular/core';\r\nimport { delay } from 'rxjs/operators';\r\nimport {\r\n    LAYOUT_TYPE, LayoutService, ObjectSingleData, UIControl, UIControlField,\r\n    FIELD_TYPE, ObjectsDataRow, SCREEN_SIZE, PepperiObjectChangedData, PepperiFieldClickedData\r\n} from '@pepperi-addons/ngx-lib';\r\n\r\nexport enum VIEW_TYPE {\r\n    Card,\r\n    Line,\r\n    Table\r\n}\r\n\r\n@Component({\r\n    selector: 'pep-internal-list',\r\n    templateUrl: './internal-list.component.html',\r\n    styleUrls: ['./internal-list.component.scss'],\r\n    host: {\r\n        '(window:resize)': 'winResize($event)'\r\n    }\r\n})\r\nexport class PepperiInternalListComponent implements OnInit, OnChanges, OnDestroy {\r\n    @Input() currentListTypeTranslation = '';\r\n    @Input() noDataFoundMsg = 'Items not found';\r\n    @Input() hideAllSelectionInMulti = false;\r\n\r\n    @Input() top = -1;\r\n    @Input() listType = '';\r\n    @Input() objectId = '0';\r\n    @Input() parentId = '0';\r\n    @Input() searchCode = '0';\r\n    // @Input() showTopBorder = false;\r\n    @Input() firstFieldAsLink = false;\r\n    @Input() supportResizing = true;\r\n    @Input() parentScroll: Element | Window = null;\r\n    @Input() disabled = false;\r\n    @Input() isPrinting = false;\r\n    @Input() disableSelectionItems = false;\r\n    @Input() layoutType: LAYOUT_TYPE = null;\r\n    @Input() pageType = '';\r\n    @Input() totalsRow = [];\r\n    @Input() isTouchDevice = false;\r\n\r\n    @Output() notifyThumbnailClicked: EventEmitter<ObjectSingleData> = new EventEmitter<ObjectSingleData>();\r\n    @Output() notifyFieldClicked: EventEmitter<any> = new EventEmitter<PepperiFieldClickedData>();\r\n    @Output() notifyMenuItemClicked: EventEmitter<any> = new EventEmitter<PepperiFieldClickedData>();\r\n    @Output() notifyValueChanged: EventEmitter<PepperiObjectChangedData> = new EventEmitter<PepperiObjectChangedData>();\r\n    @Output() notifySelectAllSingleActionClicked: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() notifySingleActionClicked: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    @Output() notifyListLoad: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    @ViewChild('noVirtualScrollCont') noVirtualScrollCont: ElementRef;\r\n    @ViewChild('tableHeader') tableHeader: ElementRef;\r\n    @ViewChild('selectAllCB') selectAllCB: any;\r\n\r\n    LAYOUT_TYPE = LAYOUT_TYPE;\r\n\r\n    public uiControl: UIControl = null;\r\n    public totalRows = -1;\r\n    itemClass: string;\r\n    isTable = false;\r\n    private hasColumnWidthOfTypePercentage = true;\r\n    public items: Array<ObjectSingleData> = null;\r\n    isCardView = false;\r\n    private itemsCounter = 0;\r\n    showItems = true;\r\n    scrollItems: Array<ObjectSingleData>;\r\n\r\n    public SEPARATOR = ',';\r\n\r\n    nativeWindow: any = null;\r\n\r\n    selectedItemId = '';\r\n    hoveredItemId = '';\r\n\r\n    private lockEvents = false;\r\n    private containerWidth = 0;\r\n\r\n    screenSize: SCREEN_SIZE;\r\n\r\n    // headerIsInFocus = false;\r\n\r\n    // For resize\r\n    pressedColumn = '';\r\n    startX = 0;\r\n    startWidth = 0;\r\n    tableStartWidth = 0;\r\n\r\n    isUserSelected = false;\r\n    checkForChanges: any = null;\r\n    useVirtualScroll = true;\r\n    calculatedObjectHeight: string;\r\n\r\n    constructor(\r\n        private element: ElementRef,\r\n        private layoutService: LayoutService,\r\n        private cd: ChangeDetectorRef,\r\n        private renderer: Renderer2,\r\n    ) {\r\n        this.layoutService.onResize$\r\n            .pipe(delay(0))\r\n            .subscribe(size => {\r\n                this.screenSize = size;\r\n            });\r\n        this.nativeWindow = window;\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.containerWidth = 0;\r\n    }\r\n\r\n    ngOnChanges(changes): void {\r\n        if (this.containerWidth <= 0) {\r\n            this.setContainerWidth();\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        if (this.notifyValueChanged) {\r\n            this.notifyValueChanged.unsubscribe();\r\n        }\r\n\r\n        if (this.notifyFieldClicked) {\r\n            this.notifyFieldClicked.unsubscribe();\r\n        }\r\n\r\n        if (this.notifyMenuItemClicked) {\r\n            this.notifyMenuItemClicked.unsubscribe();\r\n        }\r\n\r\n        if (this.notifyThumbnailClicked) {\r\n            this.notifyThumbnailClicked.unsubscribe();\r\n        }\r\n    }\r\n\r\n    setContainerWidth(): void {\r\n        const selectionCheckBoxWidth = 0;\r\n\r\n        const rowHeight = 40; // the table row height (2.5rem * 16font-size).\r\n        const style = window.getComputedStyle(this.element.nativeElement.parentElement);\r\n        // The container-fluid class padding left + right + border\r\n        const containerFluidSpacing = parseInt(style.paddingLeft, 10) + parseInt(style.paddingRight, 10);\r\n\r\n        const parentContainer = this.element.nativeElement.parentElement.parentElement > 0 ?\r\n            this.element.nativeElement.parentElement.parentElement : this.element.nativeElement.parentElement;\r\n\r\n        // Calculate if vertical scroll should appear, if so set the scroll width. (this.totalRows + 1) + 1 is for the header row.\r\n        const scrollWidth = parentContainer.clientHeight < rowHeight * (this.totalRows + 1) ? 18 : 0; // 18 is the default scroll width.\r\n\r\n        // The selectionCheckBoxWidth width + containerFluidSpacing + scrollWidth.\r\n        const rowHeaderWidthToSub = containerFluidSpacing + selectionCheckBoxWidth + scrollWidth;\r\n        this.containerWidth = parentContainer.offsetWidth - rowHeaderWidthToSub;\r\n    }\r\n\r\n    removeTable(): void {\r\n        this.cleanItems();\r\n        this.uiControl = null;\r\n    }\r\n\r\n    private toggleItems(isVisible: boolean): void {\r\n        this.showItems = isVisible;\r\n        this.lockEvents = !isVisible;\r\n    }\r\n\r\n    private updateScrollItems(startIndex, endIndex, loadInChunks = true): void {\r\n        this.scrollItems = this.items.slice(startIndex, endIndex);\r\n    }\r\n\r\n    getUniqItemId(itemId: string, itemType: string = ''): string {\r\n        return itemId + this.SEPARATOR + itemType;\r\n    }\r\n\r\n    setLayout(): void {\r\n        const self = this;\r\n        if (this.totalRows === 0 ||\r\n            !this.uiControl ||\r\n            !this.uiControl.ControlFields ||\r\n            this.uiControl.ControlFields.length === 0) {\r\n            return;\r\n        }\r\n\r\n        this.uiControl.ControlFields.forEach((cf) => {\r\n            if (cf.ColumnWidth === 0) {\r\n                cf.ColumnWidth = 10;\r\n            }\r\n\r\n            if (self.isTable &&\r\n                (cf.FieldType === FIELD_TYPE.Image ||\r\n                    // cf.FieldType === FIELD_TYPE.Indicators || ???\r\n                    cf.FieldType === FIELD_TYPE.Signature ||\r\n                    cf.FieldType === FIELD_TYPE.NumberIntegerQuantitySelector ||\r\n                    cf.FieldType === FIELD_TYPE.NumberRealQuantitySelector ||\r\n                    cf.FieldType === FIELD_TYPE.NumberIntegerForMatrix ||\r\n                    cf.FieldType === FIELD_TYPE.NumberRealForMatrix ||\r\n                    cf.FieldType === FIELD_TYPE.Package ||\r\n                    cf.ApiName === 'UnitsQuantity' ||\r\n                    cf.ApiName === 'QuantitySelector')\r\n            ) {\r\n                cf.Layout.XAlignment = 3;\r\n            }\r\n        });\r\n\r\n        if (!this.cd['destroyed']) {\r\n            this.cd.detectChanges();\r\n        }\r\n\r\n        // Set the columns width.\r\n        if (this.containerWidth <= 0) {\r\n            this.setContainerWidth();\r\n        }\r\n\r\n        this.calcColumnsWidth();\r\n        this.checkForChanges = new Date().getTime();\r\n    }\r\n\r\n    private calcColumnsWidth(): void {\r\n        const fixedMultiple = 3.78; // for converting em to pixel.\r\n        const length = this.uiControl.ControlFields.length;\r\n        const selectionCheckBoxWidth = 0;\r\n\r\n        // Is table AND there is at least one column of width type of percentage.\r\n        if (this.isTable) {\r\n            if (this.uiControl && this.uiControl.ControlFields) {\r\n                this.hasColumnWidthOfTypePercentage = this.uiControl.ControlFields.filter(cf => cf.ColumnWidthType === 1).length === 0;\r\n            }\r\n        }\r\n\r\n        // If the columns size is fixed and the total is small then the container change it to percentage.\r\n        if (!this.hasColumnWidthOfTypePercentage) {\r\n            const totalFixedColsWidth = this.uiControl.ControlFields\r\n                .map(cf => cf.ColumnWidth * fixedMultiple)\r\n                .reduce((sum, current) => sum + current);\r\n\r\n            if (window.innerWidth > totalFixedColsWidth) {\r\n                this.hasColumnWidthOfTypePercentage = true;\r\n            }\r\n        }\r\n\r\n        let totalCalcColsWidth = 0;\r\n\r\n        // Calc by percentage\r\n        if (this.hasColumnWidthOfTypePercentage) {\r\n            const totalColsWidth: number = this.uiControl.ControlFields.map(cf => cf.ColumnWidth).reduce((sum, current) => sum + current);\r\n\r\n            for (let index = 0; index < length; index++) {\r\n                const uiControlField: UIControlField = this.uiControl.ControlFields[index];\r\n                const calcColumnWidthPercentage = (100 / totalColsWidth) * uiControlField.ColumnWidth;\r\n\r\n                uiControlField.calcColumnWidth = Math.floor((this.containerWidth * calcColumnWidthPercentage) / 100);\r\n\r\n                if (index === length - 1) {\r\n                    uiControlField.calcTitleColumnWidthString = uiControlField.calcColumnWidthString =\r\n                        'calc(100% - ' + totalCalcColsWidth + 'px)'; // For 100%\r\n                } else {\r\n                    uiControlField.calcTitleColumnWidthString = uiControlField.calcColumnWidthString =\r\n                        uiControlField.calcColumnWidth + 'px';\r\n                    totalCalcColsWidth += uiControlField.calcColumnWidth;\r\n                }\r\n            }\r\n\r\n            this.renderer.setStyle(this.element.nativeElement, 'width', 'inherit');\r\n        } else {\r\n            for (let index = 0; index < length; index++) {\r\n                const uiControlField: UIControlField = this.uiControl.ControlFields[index];\r\n                const currentFixedWidth = Math.floor(uiControlField.ColumnWidth * fixedMultiple);\r\n\r\n                if (index === length - 1) {\r\n                    uiControlField.calcTitleColumnWidthString = currentFixedWidth + 'px';\r\n                    uiControlField.calcColumnWidthString = currentFixedWidth - 4 + 'px'; // -4 for the row padding.\r\n                } else {\r\n                    uiControlField.calcTitleColumnWidthString = uiControlField.calcColumnWidthString =\r\n                        currentFixedWidth + 'px';\r\n                }\r\n\r\n                totalCalcColsWidth += currentFixedWidth;\r\n            }\r\n\r\n            this.renderer.setStyle(this.element.nativeElement, 'width', totalCalcColsWidth + selectionCheckBoxWidth + 'px');\r\n        }\r\n    }\r\n\r\n    private initResizeData(): void {\r\n        this.startX = 0;\r\n        this.startWidth = 0;\r\n        this.tableStartWidth = 0;\r\n        this.pressedColumn = '';\r\n    }\r\n\r\n    onListResizeStart(event, apiName): void {\r\n        this.pressedColumn = apiName;\r\n        this.startX = event.x;\r\n        this.startWidth = event.target.closest('.header-column').offsetWidth;\r\n        // Set the tableStartWidth to the container offsetWidth\r\n        this.tableStartWidth = this.noVirtualScrollCont.nativeElement.offsetWidth;\r\n    }\r\n\r\n    onListResize(event): void {\r\n        if (this.pressedColumn.length > 0) {\r\n            const widthToAdd = this.layoutService.isRtl() ? this.startX - event.x : event.x - this.startX;\r\n\r\n            // Set the width of the column and the container of the whole columns.\r\n            if (this.startWidth + widthToAdd >= 48 || widthToAdd > 0) {\r\n                const length = this.uiControl.ControlFields.length;\r\n                let totalCalcColsWidth = 0;\r\n\r\n                for (let index = 0; index < length; index++) {\r\n                    const uiControlField: UIControlField = this.uiControl.ControlFields[index];\r\n\r\n                    if (index === length - 1) {\r\n                        // Calc the last column only in percentage type.\r\n                        if (this.hasColumnWidthOfTypePercentage) {\r\n                            uiControlField.calcTitleColumnWidthString = uiControlField.calcColumnWidthString =\r\n                                'calc(100% - ' + totalCalcColsWidth + 'px)'; // For 100%\r\n                        } else {\r\n                            if (uiControlField.ApiName === this.pressedColumn) {\r\n                                uiControlField.calcColumnWidth = this.startWidth + widthToAdd;\r\n                                uiControlField.calcTitleColumnWidthString = uiControlField.calcColumnWidth + 'px';\r\n                                uiControlField.calcColumnWidthString = uiControlField.calcColumnWidth - 4 + 'px';\r\n                            }\r\n                        }\r\n                    } else if (uiControlField.ApiName === this.pressedColumn) {\r\n                        uiControlField.calcColumnWidth = this.startWidth + widthToAdd;\r\n                        uiControlField.calcTitleColumnWidthString = uiControlField.calcColumnWidthString =\r\n                            uiControlField.calcColumnWidth + 'px';\r\n                    }\r\n\r\n                    totalCalcColsWidth += uiControlField.calcColumnWidth;\r\n                }\r\n\r\n                this.renderer.setStyle(this.element.nativeElement, 'width', this.tableStartWidth + widthToAdd + 'px');\r\n            }\r\n\r\n            this.checkForChanges = new Date().getTime();\r\n        }\r\n    }\r\n\r\n    onListResizeEnd(event): void {\r\n        if (this.pressedColumn.length > 0) {\r\n            if (event && $(event.srcElement).parents('.resizeBox').length > 0) {\r\n                this.initResizeData();\r\n            } else {\r\n                const self = this;\r\n                setTimeout(() => {\r\n                    self.initResizeData();\r\n                }, 0);\r\n            }\r\n        }\r\n    }\r\n\r\n    onListHeaderMouseEnter(event): void {\r\n        // this.headerIsInFocus = true;\r\n    }\r\n\r\n    onListHeaderMouseLeave(event): void {\r\n        // this.headerIsInFocus = false;\r\n        this.onListResizeEnd(event);\r\n        this.initResizeData();\r\n    }\r\n\r\n    onListChange(event: any): void {\r\n        if (this.isPrinting) {\r\n            return;\r\n        }\r\n\r\n        // For other events do nothing.\r\n        if (typeof event.start === 'undefined' || typeof event.end === 'undefined') {\r\n            return;\r\n        }\r\n\r\n        this.calculatedObjectHeight = event.calculatedChildHeight + 'px';\r\n\r\n        if (!this.lockEvents) {\r\n            this.toggleItems(false);\r\n            this.updateScrollItems(event.start, event.end, false);\r\n            this.toggleItems(true);\r\n        }\r\n    }\r\n\r\n    onListLoad(event: any): void {\r\n        this.notifyListLoad.emit(event);\r\n    }\r\n\r\n    getParentContainer(): Element | Window {\r\n        return this.parentScroll ? this.parentScroll : window;\r\n    }\r\n\r\n    onValueChanged(valueChanged: any): void {\r\n        if (this.disabled) {\r\n            return;\r\n        }\r\n\r\n        this.notifyValueChanged.emit(valueChanged);\r\n    }\r\n\r\n    onCustomizeFieldClick(customizeFieldClickedData: PepperiFieldClickedData): void {\r\n        if (this.disabled) {\r\n            return;\r\n        }\r\n\r\n        this.notifyFieldClicked.emit(customizeFieldClickedData);\r\n    }\r\n\r\n    onCustomizeFieldMenuClicked(customizeFieldClickedData: PepperiFieldClickedData): void {\r\n        if (this.disabled) {\r\n            return;\r\n        }\r\n\r\n        this.notifyMenuItemClicked.emit(customizeFieldClickedData);\r\n    }\r\n\r\n    getIsDisabled(pepperiObjectInput: ObjectSingleData): boolean {\r\n        if (this.disableSelectionItems) {\r\n            return true;\r\n        } else {\r\n            const IsNotSelectableForActions = pepperiObjectInput?.Data && !pepperiObjectInput.Data.IsSelectableForActions;\r\n            return IsNotSelectableForActions;\r\n        }\r\n    }\r\n\r\n    itemClicked(e: any, objectSingleData: ObjectSingleData): void {\r\n        // Set seleted item\r\n        const itemId = objectSingleData.Data.UID.toString();\r\n        const itemType = objectSingleData.Data.Type.toString();\r\n        let isChecked = false;\r\n\r\n        if (objectSingleData && objectSingleData.Data && objectSingleData.Data.IsSelectableForActions) {\r\n            this.selectedItemId = this.getUniqItemId(itemId, itemType);\r\n            isChecked = true;\r\n        }\r\n\r\n        if (!this.isTable) {\r\n            if (this.disabled) {\r\n                return;\r\n            }\r\n\r\n            this.notifyThumbnailClicked.emit(objectSingleData);\r\n        }\r\n    }\r\n\r\n    onTableRowMouseEnter(event: any, itemId: string, itemType: string): void {\r\n        if (this.isTouchDevice) {\r\n            return;\r\n        }\r\n\r\n        const uniqItemId = this.getUniqItemId(itemId, itemType);\r\n        this.hoveredItemId = uniqItemId;\r\n    }\r\n\r\n    onTableRowMouseLeave(event: any, itemId: string, itemType: string): void {\r\n        this.hoveredItemId = '';\r\n    }\r\n\r\n    onCardMouseEnter(event: any, itemId: string, itemType: string): void {\r\n        if (this.isTouchDevice) {\r\n            return;\r\n        }\r\n\r\n        const uniqItemId = this.getUniqItemId(itemId, itemType);\r\n        this.hoveredItemId = uniqItemId;\r\n    }\r\n\r\n    onCardMouseLeave(event: any, itemId: string, itemType: string): void {\r\n        this.hoveredItemId = '';\r\n    }\r\n\r\n    getThumbnailsLayout(): LAYOUT_TYPE {\r\n        return this.layoutType == null ? LAYOUT_TYPE.PepperiCard : this.layoutType;\r\n    }\r\n\r\n    // call this function after resize + animation end\r\n    winResize(e): void {\r\n        this.containerWidth = 0;\r\n        this.setLayout();\r\n    }\r\n\r\n    trackByFunc(index: number, item: ObjectSingleData): any {\r\n        return item && item.Data && item.Data.UID ? item.Data.UID : index;\r\n    }\r\n\r\n    cleanItems(): void {\r\n        this.itemsCounter = 0;\r\n        this.items = this.totalRows > 0 ? Array<ObjectSingleData>(this.totalRows) : [];\r\n        this.scrollItems = [];\r\n        this.calculatedObjectHeight = '';\r\n    }\r\n\r\n    getUIControl(): UIControl {\r\n        return this.uiControl;\r\n    }\r\n\r\n    initListData(uiControl: UIControl, totalRows: number, items: ObjectSingleData[], viewType: VIEW_TYPE = VIEW_TYPE.Table,\r\n                 itemClass: string = ''): void {\r\n        this.isCardView = viewType === VIEW_TYPE.Card;\r\n        this.uiControl = uiControl;\r\n        this.itemClass = itemClass;\r\n        this.selectedItemId = '';\r\n        this.isTable = viewType === VIEW_TYPE.Table;\r\n        this.totalRows = totalRows;\r\n\r\n        // fix bug for the scrollTo that doesn't work on edge div , not window\r\n        const scrollingElement = this.getParentContainer();\r\n        scrollingElement.scrollTo(0, 0);\r\n\r\n        this.cleanItems();\r\n\r\n        this.updateListItems(items, null);\r\n        this.onListLoad(null);\r\n\r\n        this.setLayout();\r\n    }\r\n\r\n    updateListItems(items: ObjectSingleData[], event: any): void {\r\n        this.scrollItems = this.items = items;\r\n        this.itemsCounter = items.length;\r\n    }\r\n\r\n    updateListItem(data: any): void {\r\n        let index = 0;\r\n\r\n        // Update items list\r\n        index = this.items.findIndex(i => i && i.Data && i.Data.UID === data.UID);\r\n        if (index >= 0 && index < this.items.length) {\r\n            this.items[index].Data = data;\r\n        }\r\n        // Update scrollItems list\r\n        index = this.scrollItems.findIndex(i => i && i.Data && i.Data.UID === data.UID);\r\n        if (index >= 0 && index < this.scrollItems.length) {\r\n            this.scrollItems[index].Data = data;\r\n            this.checkForChanges = new Date().getTime();\r\n        }\r\n    }\r\n\r\n    getIsItemEditable(uid: string): boolean {\r\n        const item = this.items.filter(x => x.Data.UID.toString() === uid);\r\n        if (item.length > 0) {\r\n            return item[0].Data.IsEditable;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    getItemDataByID(uid: string): ObjectsDataRow {\r\n        return this.items.find(item => item.Data.UID.toString() === uid)?.Data;\r\n    }\r\n}\r\n","<ng-template #matrixTemplate>\r\n    <div class=\"matrix-title-container pepperi-border-bottom align-{{ field.xAlignment }}\" title=\"{{ field.label }}\">\r\n        <span class=\"block-with-text body-md\">{{ field.label }}</span>\r\n\r\n        <div class=\"buttons-container spacing-element-negative pull-right flip\">\r\n            <ng-container\r\n                *ngIf=\"currentViewType?.Key == 'OrderCenterMatrix' && additionalApiNames && additionalApiNames.length > 0\">\r\n                <button class=\"spacing-element pepperi-button icon-button sm weak\" mat-button [matMenuTriggerFor]=\"menu\"\r\n                    menu-blur>\r\n                    <span class=\"pull-left flip\"\r\n                        *ngIf=\"currentAdditionalApiName\">&nbsp;{{ currentAdditionalApiName?.Value }}&nbsp;</span>\r\n\r\n                    <mat-icon [ngClass]=\"{ 'pull-left flip': currentAdditionalApiName}\">\r\n                        <pep-icon name=\"system_info\"></pep-icon>\r\n                    </mat-icon>\r\n                </button>\r\n                <mat-menu #menu=\"matMenu\" xPosition=\"before\">\r\n                    <button mat-menu-item [ngClass]=\"{ selected: currentAdditionalApiName === null }\"\r\n                        (click)=\"changeAdditionalApiName(null)\">\r\n                        <span>{{ 'LIST.NONE' | translate }}</span>\r\n                    </button>\r\n                    <button mat-menu-item\r\n                        [ngClass]=\"{ selected: currentAdditionalApiName?.Key == additionalApiName?.Key }\"\r\n                        *ngFor=\"let additionalApiName of additionalApiNames\"\r\n                        (click)=\"changeAdditionalApiName(additionalApiName)\">\r\n                        <span>{{ additionalApiName.Value }}</span>\r\n                    </button>\r\n                </mat-menu>\r\n            </ng-container>\r\n            <ng-container *ngIf=\"childViewTypes && childViewTypes.length > 1\">\r\n                <button class=\"spacing-element pepperi-button icon-button sm weak\" mat-button\r\n                    [matMenuTriggerFor]=\"viewsMenu\" menu-blur>\r\n                    <mat-icon>\r\n                        <pep-icon name=\"view_card_md\"></pep-icon>\r\n                    </mat-icon>\r\n                </button>\r\n\r\n                <mat-menu #viewsMenu=\"matMenu\" xPosition=\"before\">\r\n                    <button mat-menu-item [ngClass]=\"{ selected: currentViewType?.Key == viewType?.Key }\"\r\n                        *ngFor=\"let viewType of childViewTypes\" (click)=\"changeChildrenViewType(viewType?.Key)\">\r\n                        <mat-icon [ngSwitch]=\"viewType?.Key\">\r\n                            <pep-icon *ngSwitchCase=\"'OrderCenterMatrix'\" name=\"view_matrix\"></pep-icon>\r\n                            <pep-icon *ngSwitchCase=\"'OrderCenterFlatMatrixGrid'\" name=\"view_table\"></pep-icon>\r\n                            <pep-icon *ngSwitchCase=\"'OrderCenterFlatMatrixLine'\" name=\"view_line\"></pep-icon>\r\n                        </mat-icon>\r\n                        <span>{{ viewType?.Value }}</span>\r\n                    </button>\r\n                </mat-menu>\r\n            </ng-container>\r\n        </div>\r\n    </div>\r\n\r\n    <pep-internal-list (notifyValueChanged)=\"onCustomizeObjectChanged($event)\"\r\n        (notifyFieldClicked)=\"onCustomizeFieldClick($event)\" [totalsRow]=\"totalsRow\"></pep-internal-list>\r\n</ng-template>\r\n\r\n<div id=\"mainViewCont\" [ngStyle]=\"{ 'max-width': viewWidth, 'max-height': viewHeight }\">\r\n    <div id=\"my1_mm\" style=\"height:1mm;width:1mm;display:none;\"></div>\r\n    <div *ngIf=\"coverChildTable && uiControl != null\" class=\"table-cover\"></div>\r\n    <button *ngIf=\"coverChildTable && uiControl != null\" (click)=\"showMatrixDialog()\"\r\n        class=\"pepperi-button strong sm table-cover-button\">{{ 'INTERNAL_PAGE.CLICK_TO_ORDER' | translate }}</button>\r\n\r\n    <ng-container #orgCont></ng-container>\r\n</div>\r\n\r\n<!-- <div id=\"childGridModal\" bsModal (onShown)=\"onShown()\" (onHidden)=\"onHidden()\" #childModal=\"bs-modal\" class=\"modal\"\r\n    tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"gridModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-body matrix-dialog-body\">\r\n                <ng-container #modalCont></ng-container>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div> -->","import {\r\n    Component,\r\n    OnInit,\r\n    OnDestroy,\r\n    Input,\r\n    Output,\r\n    EventEmitter,\r\n    ViewChild,\r\n    ElementRef,\r\n    ViewContainerRef,\r\n    TemplateRef,\r\n    ChangeDetectionStrategy,\r\n    ChangeDetectorRef\r\n} from '@angular/core';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { PepperiInternalPageService } from './internal-page.service';\r\n\r\nimport { LAYOUT_TYPE, UIControl, KeyValuePair, CustomizationService, ObjectSingleData,\r\n    UIControlField, ObjectsData, FIELD_TYPE, PepperiFieldClickedData, PepperiObjectChangedData } from '@pepperi-addons/ngx-lib';\r\nimport { PepperiInternalListComponent, VIEW_TYPE } from './internal-list.component';\r\n\r\nimport * as $ from 'jquery';\r\n\r\n@Component({\r\n    selector: 'pep-internal-page',\r\n    templateUrl: './internal-page.component.html',\r\n    styleUrls: ['./internal-page.component.scss'],\r\n    providers: [PepperiInternalPageService],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class PepperiInternalPageComponent implements OnInit, OnDestroy {\r\n    static CURRENT_ADDITIONAL_API_NAME = 'item_details_currentAdditionalApiName';\r\n\r\n    controlType = 'internalPage';\r\n\r\n    @Input() field: any;\r\n    @Input() hasHeightLimit = false;\r\n    @Input() layoutType = LAYOUT_TYPE.PepperiForm;\r\n    @Output() childChanged: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() childClicked: EventEmitter<PepperiFieldClickedData> = new EventEmitter<PepperiFieldClickedData>();\r\n\r\n    // TODO: Implement\r\n    // @ViewChild('childModal') public childModal: ModalDirective;\r\n    childModal = { isShown: false };\r\n\r\n    @ViewChild('orgCont', {read: ViewContainerRef}) orgCont: ViewContainerRef;\r\n    @ViewChild('modalCont', {read: ViewContainerRef}) modalCont: ViewContainerRef;\r\n    @ViewChild('matrixTemplate') matrixTemplate: TemplateRef<any>;\r\n\r\n    @ViewChild(PepperiInternalListComponent) customList: PepperiInternalListComponent;\r\n    LAYOUT_TYPE = LAYOUT_TYPE;\r\n\r\n    resize: any;\r\n    checkForChanges: any = null;\r\n\r\n    childData: any = null;\r\n\r\n    emptyForm: FormGroup;\r\n    uiControl: UIControl;\r\n    rows: any;\r\n    lineViewRows: any;\r\n    totalsRow: any = [];\r\n    additionalApiNames: any = null;\r\n    currentAdditionalApiName: any = null;\r\n    focusedQS = false;\r\n    fieldIdWithFocus = '';\r\n    columnWidth = 100;\r\n    coverChildTable = false;\r\n    childViewTypes: Array<KeyValuePair<string>>;\r\n    currentViewType: KeyValuePair<string> = null;\r\n    currentViewTypeTitle: string;\r\n    sumOfMinColWidth = 0;\r\n    totalRowsWidth = 0;\r\n    viewWidth = '100%';\r\n    viewHeight = 'auto';\r\n    displayQSbtns = true;\r\n    selectedApiName = '';\r\n    showSort = false;\r\n    defaultRowSpan = -1;\r\n\r\n    constructor(\r\n        protected fb: FormBuilder,\r\n        private pepperiInternalPageService: PepperiInternalPageService,\r\n        public customizationService: CustomizationService,\r\n        private elementRef: ElementRef,\r\n        private changeDetectorRef: ChangeDetectorRef\r\n    ) {}\r\n\r\n    private fillData(): void {\r\n        const view = this.matrixTemplate.createEmbeddedView(null);\r\n\r\n        if (this.childModal.isShown) {\r\n            this.orgCont.clear();\r\n            this.modalCont.clear();\r\n            this.modalCont.insert(view);\r\n        } else {\r\n            this.modalCont.clear();\r\n            this.orgCont.clear();\r\n            this.orgCont.insert(view);\r\n        }\r\n\r\n        setTimeout(() => {\r\n            const buffer = [];\r\n\r\n            if (this.childData.Rows) {\r\n                // for (let i = 0; i < this.childData.Rows.length; i++) {\r\n                for (const childDataRow of this.childData.Rows) {\r\n                    const osd = new ObjectSingleData(this.uiControl, childDataRow);\r\n                    osd.IsEditable = true;\r\n                    buffer.push(osd);\r\n                }\r\n            }\r\n\r\n            const viewType: VIEW_TYPE = this.isTableView() ? VIEW_TYPE.Table : VIEW_TYPE.Line;\r\n            this.customList.initListData(this.uiControl, this.childData.TotalRows, buffer, viewType, this.getItemClass());\r\n            this.setTotalsRow();\r\n\r\n            if (!this.childModal.isShown) {\r\n                const childrenCount = this.childData.Rows ? this.childData.Rows.length : 0;\r\n                const isEven = childrenCount % 2 === 0;\r\n                // 3 for matrix & flat matrix because the header + total is 2 more rows.\r\n                const rowsToAdd = this.isMatrixView() || this.isFlatMatrixView() ? 3 : 1;\r\n\r\n                const formRowHeight = this.customizationService.calculateFormFieldHeight() * 16; // convert rem to pixel\r\n\r\n                // Set the default only if not set yet.\r\n                if (this.defaultRowSpan === -1) {\r\n                    this.defaultRowSpan = this.field.rowSpan;\r\n                }\r\n\r\n                // For line view Add the height of the line (form height).\r\n                if (this.currentViewType.Key === 'OrderCenterFlatMatrixLine') {\r\n                    const maxRow = Math.max.apply(\r\n                        Math,\r\n                        this.uiControl.ControlFields.map((f) => {\r\n                            return f.Layout.Y + f.Layout.Height;\r\n                        })\r\n                    );\r\n\r\n                    // * 16 convert rem to pixel\r\n                    const cardRowsHeight = this.customizationService.calculateCardRowsHeight(maxRow) * 16;\r\n\r\n                    // maxRow * 24 + 60 - 24 for each row in card + 60 for the padding of each card.\r\n                    // const rowSpanToAdd = Math.floor(childrenCount * ((cardRowsHeight + 56) / formRowHeight) + rowsToAdd);\r\n                    // + 16 is the 1rem margin outside card.\r\n                    const rowSpanToAdd = (childrenCount * (cardRowsHeight + 16)) / formRowHeight + rowsToAdd;\r\n                    this.field.rowSpan = rowSpanToAdd;\r\n                } else {\r\n                    // const tableRowsHeight = this.customizationService.calculateTableRowsHeight(childrenCount) * 16;\r\n                    // this.field.rowSpan = Math.ceil((tableRowsHeight + (rowsToAdd * 40)) / formRowHeight);\r\n                    // * 16 convert rem to pixel\r\n                    const rowsToAddHeight = this.customizationService.calculateTableRowsHeight(rowsToAdd, false) * 16;\r\n                    const tableRowsHeight = this.customizationService.calculateTableRowsHeight(childrenCount) * 16;\r\n                    this.field.rowSpan = (rowsToAddHeight + tableRowsHeight) / formRowHeight;\r\n                }\r\n\r\n                const self = this;\r\n                self.sumOfMinColWidth = 0;\r\n                self.totalRowsWidth = 0;\r\n\r\n                this.childData.UIControl.ControlFields.forEach((uiControlField: UIControlField) => {\r\n                    self.totalRowsWidth += uiControlField.ColumnWidth;\r\n                    uiControlField.minFieldWidth = self.mmToPx(12); // NEED TO GET THIS PARAM FROM CUSTOMIZATION;\r\n                    self.sumOfMinColWidth += 12;\r\n                });\r\n\r\n                setTimeout(() => {\r\n                    self.setViewCover(this.childData.Rows);\r\n                }, 0);\r\n            }\r\n        }, 150);\r\n\r\n        this.changeDetectorRef.markForCheck();\r\n    }\r\n\r\n    private fillChildData(res: any): void {\r\n        // TODO: ??\r\n        // this.userService.setOptionalValuesDic(res.Rows);\r\n        this.childData = res;\r\n        this.uiControl = res.UIControl;\r\n        this.additionalApiNames = res.AdditionalApiNames;\r\n\r\n        this.fillData();\r\n    }\r\n\r\n    mmToPx(mm): number {\r\n        return Math.floor(mm * $('#my1_mm').height()); // JQuery returns sizes in PX\r\n    }\r\n\r\n    private isMatrixView(): boolean {\r\n        return this.currentViewType && this.currentViewType.Key === 'OrderCenterMatrix';\r\n    }\r\n\r\n    private isFlatMatrixView(): boolean {\r\n        return this.currentViewType && this.currentViewType.Key === 'OrderCenterFlatMatrixGrid';\r\n    }\r\n\r\n    isTableView(): boolean {\r\n        return this.isMatrixView() || this.isFlatMatrixView();\r\n    }\r\n\r\n    private getItemClass(): string {\r\n        let res = '';\r\n\r\n        if (!this.isTableView()) {\r\n            res = 'line-view';\r\n        }\r\n\r\n        return res;\r\n    }\r\n\r\n    changeChildrenViewType(viewTypeKey: string): void {\r\n        const self = this;\r\n        this.rows = [];\r\n        this.uiControl = null;\r\n\r\n        for (const vt of this.childViewTypes) {\r\n            if (vt.Key === viewTypeKey) {\r\n                this.currentViewType = vt;\r\n                break;\r\n            }\r\n        }\r\n        // check if view type changed\r\n        // if (this.currentViewType.Key != viewTypeKey) {\r\n        $('body').scrollTop(0);\r\n        this.currentViewTypeTitle = this.currentViewType.Value;\r\n\r\n        this.pepperiInternalPageService.changeChildrenViewType(this.currentViewType.Key, (res: ObjectsData) => {\r\n            if (res.Rows) {\r\n                self.fillChildData(res);\r\n            }\r\n        });\r\n    }\r\n\r\n    setViewCover(rows): void {\r\n        if (!rows) { return; }\r\n\r\n        const numofrows = rows.length;\r\n\r\n        const matrixCont = $('#mainViewCont');\r\n        const viewWidth = matrixCont.parents('mat-grid-tile').css('width');\r\n        const viewHeight = matrixCont.parents('mat-grid-tile').css('height');\r\n\r\n        this.viewWidth = viewWidth ? viewWidth.toString() : '100%';\r\n        this.viewHeight = this.hasHeightLimit ? viewHeight.toString() : 'auto';\r\n\r\n        // if the matrix located on the bottom / there is nothing under the matrix we dont need to check the height\r\n\r\n        if (parseInt(viewWidth, 10) < this.mmToPx(this.sumOfMinColWidth) ||\r\n            (this.hasHeightLimit && parseInt(viewHeight, 10) < numofrows * 41 + 72)) {\r\n            this.coverChildTable = true;\r\n        } else {\r\n            this.coverChildTable = false;\r\n        }\r\n\r\n        this.changeDetectorRef.markForCheck();\r\n    }\r\n\r\n    showMatrixDialog(): void {\r\n        // this.childModal.config.ignoreBackdropClick = true;\r\n        // TODO: Show modal\r\n        // this.childModal.show();\r\n    }\r\n\r\n    // TODO:\r\n    // onShown() {\r\n    //     this.fillData();\r\n    // }\r\n\r\n    // TODO:\r\n    // onHidden() {\r\n    //     this.fillData();\r\n    // }\r\n\r\n    ngOnInit(): void {\r\n        const self = this;\r\n        // let field = this.field as PepperiInternalPageField;\r\n\r\n        this.pepperiInternalPageService.initDetails(this.field.objectId, this.field.parentId,\r\n            this.field.searchCode, (resViewTypes: any) => {\r\n            // my code DI-7134\r\n            resViewTypes.Rows = resViewTypes.Rows.filter((item) => item.Key !== 'OrderCenterView1');\r\n\r\n            if (resViewTypes.Rows && resViewTypes.Rows.length > 0) {\r\n                if (!resViewTypes.Default) {\r\n                    resViewTypes.Default = resViewTypes.Rows[0].Key;\r\n                }\r\n                self.childViewTypes = resViewTypes.Rows;\r\n                self.currentViewType = resViewTypes.Rows[0];\r\n\r\n                // for (var i = 0; i < resViewTypes.Rows.length; i++) {\r\n                for (const viewTypeRow of resViewTypes.Rows) {\r\n                    if (viewTypeRow.Value === resViewTypes.Default) {\r\n                        self.currentViewType = viewTypeRow;\r\n                    }\r\n                }\r\n\r\n                self.loadLastAdditionalApiName();\r\n                self.changeChildrenViewType(self.currentViewType.Key);\r\n            }\r\n        });\r\n\r\n        // TODO:\r\n        // this.resize = Observable.fromEvent(window, 'resize')\r\n        //     .debounceTime(10)\r\n        //     .subscribe((event) => {\r\n        //         self.setViewCover(self.rows);\r\n        //     });\r\n    }\r\n\r\n    loadLastAdditionalApiName(): void {\r\n        const daa = sessionStorage.getItem(PepperiInternalPageComponent.CURRENT_ADDITIONAL_API_NAME);\r\n        if (daa && daa.length > 0) {\r\n            const additionalApiName = JSON.parse(daa);\r\n            this.currentAdditionalApiName = additionalApiName;\r\n            this.pepperiInternalPageService.additionalApiName = additionalApiName.Key;\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        if (this.childChanged) { this.childChanged.unsubscribe(); }\r\n\r\n        if (this.childClicked) { this.childClicked.unsubscribe(); }\r\n\r\n        if (this.resize) { this.resize.unsubscribe(); }\r\n    }\r\n\r\n    changeAdditionalApiName(additionalApiName): void {\r\n        const self = this;\r\n        this.pepperiInternalPageService.changeAdditionalApiName(additionalApiName ? additionalApiName.Key : '',\r\n            (res: any) => {\r\n                // for (let index = 0; index < res.Rows.length; index++) {\r\n                for (const row of res.Rows) {\r\n                        self.updateChanges(row);\r\n                }\r\n\r\n                self.changeDetectorRef.markForCheck();\r\n            }\r\n        );\r\n\r\n        sessionStorage.setItem(PepperiInternalPageComponent.CURRENT_ADDITIONAL_API_NAME, JSON.stringify(additionalApiName));\r\n\r\n        setTimeout(() => {\r\n            this.currentAdditionalApiName = additionalApiName;\r\n        }, 0);\r\n    }\r\n\r\n    setTotalsRow(): void {\r\n        this.totalsRow = [];\r\n\r\n        if (this.isMatrixView() || this.isFlatMatrixView()) {\r\n            let totalCol = 0;\r\n\r\n            if (this.customList.items) {\r\n                for (let col = 0; col < this.customList.items[0].Data.Fields.length; col++) {\r\n                    const field = this.customList.items[0].Data.Fields[col];\r\n                    if (\r\n                        field.FieldType === FIELD_TYPE.NumberIntegerForMatrix ||\r\n                        field.FieldType === FIELD_TYPE.NumberIntegerQuantitySelector ||\r\n                        field.FieldType === FIELD_TYPE.NumberRealForMatrix ||\r\n                        field.FieldType === FIELD_TYPE.NumberRealQuantitySelector ||\r\n                        field.FieldType === FIELD_TYPE.CalculatedInt ||\r\n                        field.FieldType === FIELD_TYPE.NumberInteger ||\r\n                        field.FieldType === FIELD_TYPE.CalculatedReal ||\r\n                        field.FieldType === FIELD_TYPE.NumberReal\r\n                    ) {\r\n                        totalCol = 0;\r\n                        // for (var i = 0; i < this.customList.items.length; i++) {\r\n                        for (const listItem of this.customList.items) {\r\n\r\n                            if (listItem.Data.Fields[col] && listItem.Data.Fields[col].Value) {\r\n                                const num = parseFloat(listItem.Data.Fields[col].Value);\r\n                                totalCol += isNaN(num) ? 0 : num;\r\n                            }\r\n                        }\r\n                        this.totalsRow.push(totalCol);\r\n                    } else {\r\n                        this.totalsRow.push('');\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    updateChanges(elementToUpdate: any): void {\r\n        this.customList.updateListItem(elementToUpdate);\r\n\r\n        // Update memory data\r\n        for (let index = 0; index < this.childData.Rows.length; index++) {\r\n            if (this.childData.Rows[index].UID === elementToUpdate.UID) {\r\n                this.childData.Rows[index] = elementToUpdate;\r\n            }\r\n        }\r\n    }\r\n\r\n    setValueCallback(id: any, res: any): void {\r\n        if (res.Rows.length === 1) {\r\n            this.updateChanges(res.Rows[0]);\r\n        }\r\n\r\n        this.setTotalsRow();\r\n        this.checkForChanges = new Date();\r\n\r\n        // DI-15985\r\n        this.childChanged.emit(res);\r\n\r\n        this.changeDetectorRef.markForCheck();\r\n    }\r\n\r\n    onCustomizeObjectChanged(customizeObjectChangedData: PepperiObjectChangedData): void {\r\n        let handledEvent = false;\r\n        const boundSetValueCallback = this.setValueCallback.bind(this); // .bind() to have this in the bound function.\r\n\r\n        // For the new custom form, the plus and minus events transform in the PepperiObjectChangedData\r\n        if (customizeObjectChangedData.ControlType === 'qs') {\r\n            if (customizeObjectChangedData.Value === '+') {\r\n                handledEvent = true;\r\n                this.pepperiInternalPageService.childPlusClick(customizeObjectChangedData.Id, customizeObjectChangedData.ApiName,\r\n                    (res: any) => {\r\n                        boundSetValueCallback(customizeObjectChangedData.Id, res);\r\n                    }\r\n                );\r\n            } else if (customizeObjectChangedData.Value === '-') {\r\n                handledEvent = true;\r\n                this.pepperiInternalPageService.childMinusClick(customizeObjectChangedData.Id, customizeObjectChangedData.ApiName,\r\n                    (res: any) => {\r\n                        boundSetValueCallback(customizeObjectChangedData.Id, res);\r\n                    }\r\n                );\r\n            }\r\n        }\r\n\r\n        if (!handledEvent) {\r\n            this.pepperiInternalPageService.childValueChanged(customizeObjectChangedData.Id, customizeObjectChangedData.ApiName,\r\n                customizeObjectChangedData.Value, (res: any) => {\r\n                    boundSetValueCallback(customizeObjectChangedData.Id, res);\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    onCustomizeFieldClick(fieldClickEvent: any): void {\r\n        this.childClicked.emit(fieldClickEvent);\r\n    }\r\n}\r\n","<ng-container [ngSwitch]=\"field.controlType\" [formGroup]=\"form\">\r\n\r\n    <pep-address *ngSwitchCase=\"'address'\" [form]=\"form\" [key]=\"field.key\" [formattedValue]=\"field.formattedValue\"\r\n        [label]=\"field.label\" [required]=\"field.required\" [disabled]=\"field.disabled\" [readonly]=\"field.readonly\"\r\n        [xAlignment]=\"field.xAlignment\" [rowSpan]=\"field.rowSpan\" [groupFields]=\"field.groupFields\"\r\n        [layoutType]=\"layoutType\" (valueChanged)=\"onValueChanged($event)\">\r\n    </pep-address>\r\n\r\n    <pep-attachment *ngSwitchCase=\"'attachment'\" [form]=\"form\" [key]=\"field.key\" [src]=\"field.value\"\r\n        [label]=\"field.label\" [required]=\"field.required\" [disabled]=\"field.disabled\" [readonly]=\"field.readonly\"\r\n        [xAlignment]=\"field.xAlignment\" [rowSpan]=\"field.rowSpan\" [isActive]=\"isActive\" [showTitle]=\"showTitle\"\r\n        [layoutType]=\"layoutType\" (elementClicked)=\"onClick($event)\" (valueChanged)=\"onValueChanged($event)\">\r\n    </pep-attachment>\r\n\r\n    <pep-checkbox *ngSwitchCase=\"'checkbox'\" [form]=\"form\" [key]=\"field.key\" [value]=\"field.value\" [label]=\"field.label\"\r\n        [type]=\"field.type\" [required]=\"field.required\" [disabled]=\"field.disabled\" [readonly]=\"field.readonly\"\r\n        [xAlignment]=\"field.xAlignment\" [rowSpan]=\"field.rowSpan\" [additionalValue]=\"field.additionalValue\"\r\n        [showTitle]=\"showTitle\" [layoutType]=\"layoutType\" (valueChanged)=\"onValueChanged($event)\" [isActive]=\"isActive\">\r\n    </pep-checkbox>\r\n\r\n    <pep-date *ngSwitchCase=\"'date'\" [form]=\"form\" [key]=\"field.key\" [value]=\"field.value\"\r\n        [formattedValue]=\"field.formattedValue\" [label]=\"field.label\" [type]=\"field.type\" [required]=\"field.required\"\r\n        [disabled]=\"field.disabled\" [readonly]=\"field.readonly\" [textColor]=\"field.textColor\"\r\n        [xAlignment]=\"field.xAlignment\" [rowSpan]=\"field.rowSpan\" [minValue]=\"field.minValue\"\r\n        [maxValue]=\"field.maxValue\" [showTitle]=\"showTitle\" [layoutType]=\"layoutType\"\r\n        (valueChanged)=\"onValueChanged($event)\" [isActive]=\"isActive\">\r\n    </pep-date>\r\n\r\n    <pep-images-filmstrip *ngSwitchCase=\"'images'\" [objectId]=\"objectId\" [form]=\"form\" [key]=\"field.key\"\r\n        [label]=\"field.label\" [showTitle]=\"showTitle\" [value]=\"field.value\" [layoutType]=\"layoutType\">\r\n    </pep-images-filmstrip>\r\n\r\n    <pep-image *ngSwitchCase=\"'image'\" [objectId]=\"objectId\" [form]=\"form\" [key]=\"field.key\"\r\n        [src]=\"field.formattedValue\" [srcLarge]=\"field.value\" [options]=\"field.options\" [label]=\"field.label\"\r\n        [type]=\"field.type\" [required]=\"field.required\" [disabled]=\"field.disabled\" [readonly]=\"field.readonly\"\r\n        [xAlignment]=\"field.xAlignment\" [rowSpan]=\"field.rowSpan\" [indicatorsField]=\"field.indicatorsField\"\r\n        [menuField]=\"field.menuField\" [hasCampaignField]=\"field.hasCampaignField\" [sizeLimitMB]=\"field.sizeLimitMB\"\r\n        [isActive]=\"isActive\" [layoutType]=\"layoutType\" (elementClicked)=\"onClick($event)\"\r\n        (valueChanged)=\"onValueChanged($event)\">\r\n    </pep-image>\r\n\r\n    <pep-internal-button *ngSwitchCase=\"'button'\" [form]=\"form\" [key]=\"field.key\" [value]=\"field.value\"\r\n        [formattedValue]=\"field.formattedValue\" [label]=\"field.label\"\r\n        [referenceObjectInternalType]=\"field.referenceObjectInternalType\" [type]=\"field.type\"\r\n        [disabled]=\"field.disabled\" [readonly]=\"field.readonly\" [xAlignment]=\"field.xAlignment\"\r\n        [layoutType]=\"layoutType\" (elementClicked)=\"onClick($event)\" (valueChanged)=\"onValueChanged($event)\">\r\n    </pep-internal-button>\r\n\r\n    <!-- [hasSubMenu]=\"field.hasSubMenu\" -->\r\n    <pep-menu *ngSwitchCase=\"'menu'\" [key]=\"field.key\" [label]=\"field.label\" [disabled]=\"field.disabled\"\r\n        [xAlignment]=\"field.xAlignment\" [options]=\"field.options\" [layoutType]=\"layoutType\"\r\n        (elementClicked)=\"onClick($event)\" (notifyMenuItemClicked)=\"onMenuItemClicked($event)\">\r\n    </pep-menu>\r\n\r\n    <pep-quantity-selector *ngSwitchCase=\"'qs'\" [form]=\"form\" [key]=\"field.key\" [value]=\"field.value\"\r\n        [formattedValue]=\"field.formattedValue\" [label]=\"field.label\" [type]=\"field.type\" [required]=\"field.required\"\r\n        [disabled]=\"field.disabled\" [readonly]=\"field.readonly\" [textColor]=\"field.textColor\"\r\n        [xAlignment]=\"field.xAlignment\" [rowSpan]=\"field.rowSpan\" [lastFocusField]=\"field.lastFocusField\"\r\n        [alowDecimal]=\"field.alowDecimal\" [additionalValue]=\"field.additionalValue\"\r\n        [notificationInfo]=\"field.notificationInfo\" [isActive]=\"isActive\" [layoutType]=\"layoutType\"\r\n        [showTitle]=\"showTitle\" (valueChanged)=\"onValueChanged($event)\"\r\n        (formValidationChanged)=\"onFormValidationChanged($event)\" (elementClicked)=\"onClick($event)\">\r\n    </pep-quantity-selector>\r\n\r\n    <pep-rich-html-textarea *ngSwitchCase=\"'richhtmltextarea'\" [form]=\"form\" [key]=\"field.key\" [value]=\"field.value\"\r\n        [label]=\"field.label\" [required]=\"field.required\" [disabled]=\"field.disabled\" [readonly]=\"field.readonly\"\r\n        [maxFieldCharacters]=\"field.maxFieldCharacters\" [xAlignment]=\"field.xAlignment\" [rowSpan]=\"field.rowSpan\"\r\n        [showTitle]=\"showTitle\" [layoutType]=\"layoutType\" (valueChanged)=\"onValueChanged($event)\" [isActive]=\"isActive\">\r\n    </pep-rich-html-textarea>\r\n\r\n    <pep-select *ngSwitchCase=\"'select'\" [form]=\"form\" [key]=\"field.key\" [value]=\"field.value\"\r\n        [formattedValue]=\"field.formattedValue\" [label]=\"field.label\" [type]=\"field.type\" [required]=\"field.required\"\r\n        [disabled]=\"field.disabled\" [readonly]=\"field.readonly\" [xAlignment]=\"field.xAlignment\"\r\n        [rowSpan]=\"field.rowSpan\" [options]=\"field.options\" [showTitle]=\"showTitle\" [layoutType]=\"layoutType\"\r\n        (valueChanged)=\"onValueChanged($event)\" (formValidationChanged)=\"onFormValidationChanged($event)\"\r\n        [isActive]=\"isActive\">\r\n    </pep-select>\r\n\r\n    <pep-separator *ngSwitchCase=\"'separator'\" [form]=\"form\" [key]=\"field.key\" [label]=\"field.label\"\r\n        [xAlignment]=\"field.xAlignment\" [layoutType]=\"layoutType\">\r\n    </pep-separator>\r\n\r\n    <pep-signature *ngSwitchCase=\"'signature'\" [form]=\"form\" [key]=\"field.key\" [src]=\"field.value\" [label]=\"field.label\"\r\n        [required]=\"field.required\" [disabled]=\"field.disabled\" [readonly]=\"field.readonly\"\r\n        [xAlignment]=\"field.xAlignment\" [rowSpan]=\"field.rowSpan\" [isActive]=\"isActive\" [layoutType]=\"layoutType\"\r\n        (valueChanged)=\"onValueChanged($event)\">\r\n    </pep-signature>\r\n\r\n    <pep-textarea *ngSwitchCase=\"'textarea'\" [form]=\"form\" [key]=\"field.key\" [value]=\"field.value\" [label]=\"field.label\"\r\n        [required]=\"field.required\" [disabled]=\"field.disabled\" [readonly]=\"field.readonly\"\r\n        [maxFieldCharacters]=\"field.maxFieldCharacters\" [textColor]=\"field.textColor\" [xAlignment]=\"field.xAlignment\"\r\n        [rowSpan]=\"field.rowSpan\" [lastFocusField]=\"field.lastFocusField\" [showTitle]=\"showTitle\"\r\n        [layoutType]=\"layoutType\" (valueChanged)=\"onValueChanged($event)\" [isActive]=\"isActive\">\r\n    </pep-textarea>\r\n\r\n    <pep-textbox *ngSwitchCase=\"'textbox'\" [form]=\"form\" [key]=\"field.key\" [value]=\"field.value\"\r\n        [formattedValue]=\"field.formattedValue\" [label]=\"field.label\" [placeholder]=\"field.placeholder\"\r\n        [type]=\"field.type\" [required]=\"field.required\" [disabled]=\"field.disabled\" [readonly]=\"field.readonly\"\r\n        [maxFieldCharacters]=\"field.maxFieldCharacters\" [textColor]=\"field.textColor\" [xAlignment]=\"field.xAlignment\"\r\n        [rowSpan]=\"field.rowSpan\" [lastFocusField]=\"field.lastFocusField\" [showTitle]=\"showTitle\"\r\n        [layoutType]=\"layoutType\" (valueChanged)=\"onValueChanged($event)\"\r\n        (formValidationChanged)=\"onFormValidationChanged($event)\" [isActive]=\"isActive\">\r\n    </pep-textbox>\r\n\r\n    <pep-indicators *ngSwitchCase=\"'indicators'\" [key]=\"field.key\" [value]=\"field.value\" [layoutType]=\"layoutType\">\r\n    </pep-indicators>\r\n    <pep-internal-page *ngSwitchCase=\"'internalPage'\" [hasHeightLimit]=\"hasHeightLimit\" [field]=\"field\"\r\n        [layoutType]=\"layoutType\" (childClicked)=\"onChildClick($event)\" (childChanged)=\"onChildChanged($event)\">\r\n    </pep-internal-page>\r\n\r\n    <ng-container *ngSwitchCase=\"'placeholder'\">\r\n    </ng-container>\r\n</ng-container>","import {\r\n    Component, OnChanges, Input, Output, EventEmitter,\r\n    ViewEncapsulation, ChangeDetectionStrategy, OnDestroy\r\n} from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { LAYOUT_TYPE } from '@pepperi-addons/ngx-lib';\r\n\r\n@Component({\r\n    selector: 'pep-field-generator',\r\n    templateUrl: './field-generator.component.html',\r\n    styleUrls: ['./field-generator.component.scss'],\r\n    encapsulation: ViewEncapsulation.Emulated,\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PepperiFieldGeneratorComponent implements OnChanges, OnDestroy {\r\n    @Input() field: any;\r\n    @Input() hasHeightLimit = false;\r\n    @Input() isActive = false;\r\n    @Input() objectId: any = null;\r\n    @Input() form: FormGroup;\r\n    @Input() layoutType: LAYOUT_TYPE = LAYOUT_TYPE.PepperiForm;\r\n    @Input() showTitle = true;\r\n\r\n    @Input() checkForChanges: any = null;\r\n    @Output() valueChanged: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() childChanged: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() formValidationChanged: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n    @Output() elementClicked: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() notifyMenuItemClicked: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() notifyChildClicked: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    get isValid(): boolean {\r\n        if (this.field.readonly || this.field.disabled) {\r\n            return true;\r\n        } else {\r\n            const formControl = this.form && this.form.get(this.field.key);\r\n\r\n            if (formControl) {\r\n                return formControl.valid;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n\r\n    get isTouched(): boolean {\r\n        const formControl = this.form && this.form.get(this.field.key);\r\n        return formControl ? formControl.touched : false;\r\n    }\r\n\r\n    get isDirty(): boolean {\r\n        const formControl = this.form && this.form.get(this.field.key);\r\n        return formControl ? formControl.dirty : false;\r\n    }\r\n\r\n    constructor() { }\r\n\r\n    ngOnDestroy(): void {\r\n        if (this.valueChanged) { this.valueChanged.unsubscribe(); }\r\n\r\n        if (this.formValidationChanged) { this.formValidationChanged.unsubscribe(); }\r\n\r\n        if (this.childChanged) { this.childChanged.unsubscribe(); }\r\n\r\n        if (this.elementClicked) { this.elementClicked.unsubscribe(); }\r\n\r\n        if (this.notifyMenuItemClicked) { this.notifyMenuItemClicked.unsubscribe(); }\r\n\r\n        if (this.notifyChildClicked) { this.notifyChildClicked.unsubscribe(); }\r\n    }\r\n\r\n    onValueChanged(valueChanged: any): void {\r\n        this.valueChanged.emit(valueChanged);\r\n    }\r\n\r\n    onChildChanged(childChanged: any): void {\r\n        this.childChanged.emit(childChanged);\r\n    }\r\n\r\n    onFormValidationChanged(formValidationChanged: any): void {\r\n        this.formValidationChanged.emit(formValidationChanged);\r\n    }\r\n\r\n    onClick(fieldClicked: any): void {\r\n        this.elementClicked.emit(fieldClicked);\r\n    }\r\n\r\n    onMenuItemClicked(fieldToEdit: any): void {\r\n        this.notifyMenuItemClicked.emit(fieldToEdit);\r\n    }\r\n\r\n    onChildClick(childClicked: any): void {\r\n        this.notifyChildClicked.emit(childClicked);\r\n    }\r\n\r\n    ngOnChanges(changes: any): void {\r\n        // debugger;\r\n        // TODO: Remove it only for testing.\r\n        // this.field.disabled = this.field.readonly = false;\r\n    }\r\n}\r\n","<fieldset *ngIf=\"form\" [formGroup]=\"form\" [disabled]=\"isLocked\" class=\"pepperi-form\"\r\n    [ngStyle]=\"{ 'background-color': layoutType == LAYOUT_TYPE.PepperiCard && pepperiObjectInput?.Data?.BackgroundColor }\"\r\n    [ngClass]=\"{\r\n        'material-form': layoutType == LAYOUT_TYPE.PepperiForm,\r\n        cardView: isCardView == true\r\n    }\">\r\n    <!-- New Form -->\r\n    <mat-grid-list *ngIf=\"layoutType == LAYOUT_TYPE.PepperiForm\" [cols]=\"columns\" [rowHeight]=\"rowHeight + 'rem'\"\r\n        [gutterSize]=\"formGutterSize\">\r\n        <mat-grid-tile *ngFor=\"let field of fields\" [rowspan]=\"field.rowSpan\" [colspan]=\"field.colSpan\">\r\n            <pep-field-generator *ngIf=\"field.controlType != 'placeholder'\" [form]=\"form\" [layoutType]=\"layoutType\"\r\n                [checkForChanges]=\"checkForChanges\" [objectId]=\"pepperiObjectInput.Data.UID\"\r\n                [hasHeightLimit]=\"!matrixIsLast\" [field]=\"field\" [showTitle]=\"showTitle\"\r\n                (valueChanged)=\"onValueChanged($event)\" (notifyChildClicked)=\"onChildClicked($event)\"\r\n                (childChanged)=\"onChildChanged($event)\" (elementClicked)=\"onClick($event)\"\r\n                (notifyMenuItemClicked)=\"onMenuItemClicked($event)\"\r\n                (formValidationChanged)=\"onFormValidationChanged($event)\">\r\n            </pep-field-generator>\r\n        </mat-grid-tile>\r\n    </mat-grid-list>\r\n\r\n    <!-- Thumbnails -->\r\n    <mat-grid-list *ngIf=\"layoutType == LAYOUT_TYPE.PepperiCard\" [cols]=\"columns\" [rowHeight]=\"rowHeight + 'rem'\"\r\n        [gutterSize]=\"cardGutterSize\" class=\"card-spacing\" [ngClass]=\"{ 'lock-events': lockEvents }\">\r\n        <mat-grid-tile *ngFor=\"let field of fields\" [rowspan]=\"field.rowSpan\" [colspan]=\"field.colSpan\"\r\n            [ngStyle]=\"{ overflow: field.type == 'qs' ? 'unset' : 'hidden' }\">\r\n            <pep-field-generator *ngIf=\"field.controlType != 'placeholder'\" [form]=\"form\" [layoutType]=\"layoutType\"\r\n                [isActive]=\"isActive\" [checkForChanges]=\"checkForChanges\" [objectId]=\"pepperiObjectInput.Data.UID\"\r\n                [hasHeightLimit]=\"!matrixIsLast\" [field]=\"field\" [showTitle]=\"showTitle\"\r\n                (valueChanged)=\"onValueChanged($event)\" (notifyChildClicked)=\"onChildClicked($event)\"\r\n                (childChanged)=\"onChildChanged($event)\" (elementClicked)=\"onClick($event)\"\r\n                (notifyMenuItemClicked)=\"onMenuItemClicked($event)\">\r\n            </pep-field-generator>\r\n        </mat-grid-tile>\r\n    </mat-grid-list>\r\n\r\n    <ng-container *ngIf=\"layoutType == LAYOUT_TYPE.PepperiTable\">\r\n        <ng-container *ngIf=\"isReport; then reportBlock; else notReportBlock\"></ng-container>\r\n        <ng-template #reportBlock>\r\n            <ng-container *ngTemplateOutlet=\"report\"></ng-container>\r\n        </ng-template>\r\n        <ng-template #notReportBlock>\r\n            <div *ngFor=\"let field of fields; let j = index\" class=\"pull-left flip table-cell \"\r\n                [ngClass]=\"['text-align-' + field.xAlignment]\" style=\"height: 100%\"\r\n                [ngStyle]=\"{ width: (uiControlHeader?.ControlFields)[j]?.calcColumnWidthString}\">\r\n                <pep-field-generator *ngIf=\"field.controlType != 'placeholder'\" [checkForChanges]=\"checkForChanges\"\r\n                    [objectId]=\"pepperiObjectInput.Data.UID\" [field]=\"field\" (valueChanged)=\"onValueChanged($event)\"\r\n                    (elementClicked)=\"onClick($event)\" (notifyMenuItemClicked)=\"onMenuItemClicked($event)\" [form]=\"form\"\r\n                    [layoutType]=\"layoutType\" [showTitle]=\"false\" [isActive]=\"isActive\">\r\n                </pep-field-generator>\r\n            </div>\r\n        </ng-template>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"layoutType == LAYOUT_TYPE.Editmodal\">\r\n        <div *ngFor=\"let field of fields; let j = index\" class=\"pull-left flip\" style=\"width:100%;\">\r\n            <pep-field-generator *ngIf=\"field.controlType != 'placeholder'\" [checkForChanges]=\"checkForChanges\"\r\n                [objectId]=\"pepperiObjectInput.Data.UID\" [field]=\"field\" (valueChanged)=\"onValueChanged($event)\"\r\n                (elementClicked)=\"onClick($event)\" [form]=\"form\" [layoutType]=\"layoutType\" [showTitle]=\"false\"\r\n                [isActive]=\"isActive\">\r\n            </pep-field-generator>\r\n        </div>\r\n    </ng-container>\r\n\r\n    <!------- For testing ------------\r\n    {{ form.value | json }}\r\n    {{ form.valid }}\r\n    ---------------------------------->\r\n</fieldset>\r\n\r\n<ng-template #report>\r\n    <div *ngFor=\"let field of fields; let j = index\" class=\"pull-left flip pepperi-report-fields\"\r\n        [ngStyle]=\"{ width: (uiControlHeader?.ControlFields)[j]?.calcColumnWidthString }\"\r\n        [ngClass]=\"['text-align-' + field.xAlignment]\">\r\n        <ng-container [ngSwitch]=\"field.controlType\">\r\n            <pep-image *ngSwitchCase=\"'image'\" [objectId]=\"objectId\" [form]=\"form\" [key]=\"field.key\"\r\n                [src]=\"field.formattedValue\" [srcLarge]=\"field.value\" [options]=\"field.options\" [label]=\"field.label\"\r\n                [type]=\"field.type\" [required]=\"field.required\" [disabled]=\"field.disabled\" [readonly]=\"field.readonly\"\r\n                [xAlignment]=\"field.xAlignment\" [rowSpan]=\"field.rowSpan\" [layoutType]=\"layoutType\"\r\n                (elementClicked)=\"onClick($event)\">\r\n            </pep-image>\r\n\r\n            <pep-signature *ngSwitchCase=\"'signature'\" [form]=\"form\" [key]=\"field.key\" [src]=\"field.value\"\r\n                [label]=\"field.label\" [required]=\"field.required\" [disabled]=\"field.disabled\"\r\n                [readonly]=\"field.readonly\" [xAlignment]=\"field.xAlignment\" [rowSpan]=\"field.rowSpan\"\r\n                [layoutType]=\"layoutType\">\r\n            </pep-signature>\r\n\r\n            <pep-checkbox *ngSwitchCase=\"'checkbox'\" [form]=\"form\" [key]=\"field.key\" [value]=\"field.value\"\r\n                [label]=\"field.label\" [type]=\"field.type\" [required]=\"field.required\" [disabled]=\"field.disabled\"\r\n                [readonly]=\"field.readonly\" [xAlignment]=\"field.xAlignment\" [rowSpan]=\"field.rowSpan\"\r\n                [additionalValue]=\"field.additionalValue\" [layoutType]=\"layoutType\">\r\n            </pep-checkbox>\r\n\r\n            <pep-internal-button *ngSwitchCase=\"'button'\" [form]=\"form\" [key]=\"field.key\" [value]=\"field.value\"\r\n                [formattedValue]=\"field.formattedValue\" [label]=\"field.label\" [type]=\"field.type\"\r\n                [disabled]=\"field.disabled\" [readonly]=\"field.readonly\" [xAlignment]=\"field.xAlignment\"\r\n                [layoutType]=\"layoutType\" (elementClicked)=\"onClick($event)\">\r\n            </pep-internal-button>\r\n\r\n            <pep-textarea *ngSwitchCase=\"'textarea'\" [form]=\"form\" [key]=\"field.key\" [value]=\"field.value\"\r\n                [label]=\"field.label\" [required]=\"field.required\" [disabled]=\"field.disabled\"\r\n                [readonly]=\"field.readonly\" [maxFieldCharacters]=\"field.maxFieldCharacters\"\r\n                [textColor]=\"field.textColor\" [xAlignment]=\"field.xAlignment\" [rowSpan]=\"field.rowSpan\"\r\n                [layoutType]=\"layoutType\">\r\n            </pep-textarea>\r\n\r\n            <pep-quantity-selector *ngSwitchCase=\"'qs'\" [id]=\"field.key\" [form]=\"form\" [key]=\"field.key\"\r\n                [value]=\"field.value\" [formattedValue]=\"field.formattedValue\" [label]=\"field.label\" [type]=\"field.type\"\r\n                [required]=\"field.required\" [disabled]=\"field.disabled\" [readonly]=\"field.readonly\"\r\n                [textColor]=\"field.textColor\" [xAlignment]=\"field.xAlignment\" [rowSpan]=\"field.rowSpan\"\r\n                [layoutType]=\"layoutType\" (valueChanged)=\"onValueChanged($event)\" (elementClicked)=\"onClick($event)\">\r\n            </pep-quantity-selector>\r\n\r\n            <ng-container *ngSwitchDefault>\r\n                <ng-container *ngIf=\"field.formattedValue?.length > 0; then notEmptyBlock; else emptyBlock\">\r\n                </ng-container>\r\n                <ng-template #notEmptyBlock>\r\n                    <ng-container\r\n                        *ngIf=\"field.type === 'attachment' || field.type === 'link'; then linkBlock; else notLinkBlock\">\r\n                    </ng-container>\r\n                    <ng-template #linkBlock>\r\n                        <a [id]=\"field.key\" class=\"color-link body-sm pepperi-report-input readonly\"\r\n                            *ngIf=\"field.formattedValue != null\" title=\"{{ field.formattedValue }}\" target=\"_blank\"\r\n                            href=\"{{ field.value }}\">{{ field.formattedValue }}</a>\r\n                    </ng-template>\r\n                    <ng-template #notLinkBlock>\r\n                        <span [id]=\"field.key\" class=\"body-sm pepperi-report-input readonly\"\r\n                            title=\"{{ field.formattedValue }}\"\r\n                            [ngStyle]=\"{ color: field.textColor }\">{{ field.formattedValue }}</span>\r\n                    </ng-template>\r\n                </ng-template>\r\n                <ng-template #emptyBlock>\r\n                    <span>&nbsp;</span>\r\n                </ng-template>\r\n            </ng-container>\r\n        </ng-container>\r\n    </div>\r\n</ng-template>","import {\r\n    Component, ChangeDetectionStrategy, OnInit, OnDestroy,\r\n    Input, KeyValueDiffers, Output, EventEmitter, OnChanges, DoCheck\r\n} from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, AbstractControl } from '@angular/forms';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { DialogService, DialogData, DialogDataType } from '@pepperi-addons/ngx-lib/dialog';\r\nimport { Subscription } from 'rxjs';\r\nimport {\r\n    PepperiFieldClickedData,\r\n    PepperiObjectChangedData,\r\n    LAYOUT_TYPE,\r\n    FIELD_TYPE,\r\n    CustomizationService,\r\n    UIControl,\r\n    UIControlField,\r\n    ObjectSingleData,\r\n    ObjectsDataRowCell,\r\n    PepperiFieldBase,\r\n    PepperiTextboxField,\r\n    PepperiSelectField,\r\n    PepperiMenuField,\r\n    PepperiQuantitySelectorField,\r\n    PepperiAddressField,\r\n    PepperiIndicatorsField,\r\n    PepperiInternalPageField,\r\n    PepperiButtonField,\r\n    PepperiAttachmentField,\r\n    PepperiSignatureField,\r\n    PepperiImageField,\r\n    PepperiImagesField,\r\n    PepperiTextareaField,\r\n    PepperiRichHtmlTextareaField,\r\n    PepperiDateField,\r\n    PepperiCheckboxField,\r\n    PepperiSeparatorField,\r\n    PepperiPlaceholderField,\r\n} from '@pepperi-addons/ngx-lib';\r\n\r\n// tslint:disable-next-line: no-conflicting-lifecycle\r\n@Component({\r\n    selector: 'pep-form',\r\n    templateUrl: './form.component.html',\r\n    styleUrls: ['./form.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PepperiFormComponent implements OnInit, DoCheck, OnChanges, OnDestroy {\r\n    @Input() isReport = false;\r\n    @Input() uiControlHeader: UIControl;\r\n    @Input() lockEvents = false;\r\n    @Input() canEditObject = true;\r\n    @Input() pepperiObjectInput: ObjectSingleData;\r\n    @Input() isActive = false;\r\n    @Input() layoutType: LAYOUT_TYPE = LAYOUT_TYPE.PepperiForm;\r\n    @Input() listType = '';\r\n    @Input() objectId = '0';\r\n    @Input() parentId = '0';\r\n    @Input() searchCode = '0';\r\n    @Input() showTitle = true;\r\n    @Input() firstFieldAsLink = false;\r\n    @Input() isCardView = false;\r\n    @Input() checkForChanges: any = null;\r\n    @Input() pageType = '';\r\n\r\n    @Output() notifyValueChanged: EventEmitter<PepperiObjectChangedData> = new EventEmitter<PepperiObjectChangedData>();\r\n    @Output() formValidationChanged: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n    @Output() childClicked: EventEmitter<void> = new EventEmitter<void>();\r\n    @Output() childChanged: EventEmitter<void> = new EventEmitter<void>();\r\n    @Output() notifyFieldClicked: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() notifyMenuItemClicked: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    LAYOUT_TYPE = LAYOUT_TYPE;\r\n    isLocked = false;\r\n    formGutterSize;\r\n    cardGutterSize;\r\n    rowHeight;\r\n    lastFocusedField: any;\r\n    matrixIsLast = false;\r\n    // lastUpdatedFieldApiName: string = '';\r\n    form: FormGroup;\r\n    differ: any;\r\n\r\n    // payLoad = '';\r\n    rows: Array<PepperiFieldBase[]> = [];\r\n    fields: PepperiFieldBase[] = [];\r\n    columns = 1;\r\n\r\n    hasMenuFloatingOnOtherField = false;\r\n    menuField: any;\r\n    menuDataField: any;\r\n    hasCampaignField: any;\r\n    hasCampaignDataField: any;\r\n    indicatorsField: any;\r\n    indicatorsDataField: any = null;\r\n\r\n    shouldReloadForm = false;\r\n    eventServiceSub: Subscription;\r\n\r\n    public jsonLib = JSON;\r\n\r\n    static convertAddressFields(controlField: any, addressFields: Array<ObjectsDataRowCell>, canEditObject: boolean): PepperiFieldBase[] {\r\n        const fields: PepperiFieldBase[] = [];\r\n\r\n        addressFields.forEach(field => {\r\n            let customField: PepperiFieldBase;\r\n            const placeholder = field.ApiName;\r\n\r\n            if (field.ApiName.toLowerCase().indexOf('street') >= 0) {\r\n                customField = new PepperiTextboxField({\r\n                    key: field.ApiName,\r\n                    label: field.ApiName,\r\n                    type: 'text',\r\n                    placeholder,\r\n                    readonly: !canEditObject,\r\n                    disabled: !field.Enabled || !canEditObject,\r\n                    hidden: false,\r\n                    required: false,\r\n                    value: field.Value,\r\n                    formattedValue: field.FormattedValue,\r\n                    row: 0,\r\n                    rowSpan: 1,\r\n                    col: 0,\r\n                    colSpan: 2,\r\n                    xAlignment: controlField.Layout.XAlignment,\r\n                    yAlignment: controlField.Layout.YAlignment,\r\n                    order: 0\r\n                });\r\n            } else if (field.ApiName.toLowerCase().indexOf('city') >= 0) {\r\n                customField = new PepperiTextboxField({\r\n                    key: field.ApiName,\r\n                    label: field.ApiName,\r\n                    type: 'text',\r\n                    placeholder,\r\n                    readonly: !canEditObject,\r\n                    disabled: !field.Enabled || !canEditObject,\r\n                    hidden: false,\r\n                    required: false,\r\n                    value: field.Value,\r\n                    formattedValue: field.FormattedValue,\r\n                    row: 0,\r\n                    rowSpan: 1,\r\n                    col: 2,\r\n                    colSpan: 1,\r\n                    xAlignment: controlField.Layout.XAlignment,\r\n                    yAlignment: controlField.Layout.YAlignment,\r\n                    order: 1\r\n                });\r\n            } else if (field.ApiName.toLowerCase().indexOf('state') >= 0) {\r\n                customField = new PepperiSelectField({\r\n                    key: field.ApiName,\r\n                    label: field.ApiName,\r\n                    placeholder,\r\n                    options: field.OptionalValues,\r\n                    readonly: !canEditObject,\r\n                    disabled: !field.Enabled || !canEditObject,\r\n                    hidden: false,\r\n                    required: false,\r\n                    value: field.Value,\r\n                    formattedValue: field.FormattedValue,\r\n                    row: 1,\r\n                    rowSpan: 1,\r\n                    col: 0,\r\n                    colSpan: 1,\r\n                    xAlignment: controlField.Layout.XAlignment,\r\n                    yAlignment: controlField.Layout.YAlignment,\r\n                    order: 2\r\n                });\r\n            } else if (field.ApiName.toLowerCase().indexOf('zipcode') >= 0) {\r\n                customField = new PepperiTextboxField({\r\n                    key: field.ApiName,\r\n                    label: field.ApiName,\r\n                    type: 'text',\r\n                    placeholder,\r\n                    readonly: !canEditObject,\r\n                    disabled: !field.Enabled || !canEditObject,\r\n                    hidden: false,\r\n                    required: false,\r\n                    value: field.Value,\r\n                    formattedValue: field.FormattedValue,\r\n                    row: 1,\r\n                    rowSpan: 1,\r\n                    col: 1,\r\n                    colSpan: 1,\r\n                    xAlignment: controlField.Layout.XAlignment,\r\n                    yAlignment: controlField.Layout.YAlignment,\r\n                    order: 3\r\n                });\r\n            } else if (field.ApiName.toLowerCase().indexOf('country') >= 0) {\r\n                customField = new PepperiSelectField({\r\n                    key: field.ApiName,\r\n                    label: field.ApiName,\r\n                    placeholder,\r\n                    options: field.OptionalValues,\r\n                    readonly: !canEditObject,\r\n                    disabled: !field.Enabled || !canEditObject,\r\n                    hidden: false,\r\n                    required: false,\r\n                    value: field.Value,\r\n                    formattedValue: field.FormattedValue,\r\n                    row: 2,\r\n                    rowSpan: 1,\r\n                    col: 2,\r\n                    colSpan: 1,\r\n                    xAlignment: controlField.Layout.XAlignment,\r\n                    yAlignment: controlField.Layout.YAlignment,\r\n                    order: 4\r\n                });\r\n            }\r\n\r\n            fields.push(customField);\r\n        });\r\n\r\n        return fields.sort((n1, n2) => (n1.order > n2.order ? 1 : n1.order < n2.order ? -1 : 0));\r\n    }\r\n\r\n    static isMatrixField(apiNameToCheck: string): boolean {\r\n        return apiNameToCheck.indexOf('Matrix') >= 0;\r\n    }\r\n\r\n    public static doesFieldHavaFloatingField(controlField: any, floatingField: any): boolean {\r\n        let hasFloatingField = false;\r\n        if (\r\n            floatingField.Layout.Y >= controlField.Layout.Y &&\r\n            floatingField.Layout.Y < controlField.Layout.Y + controlField.Layout.Height &&\r\n            floatingField.Layout.X >= controlField.Layout.X &&\r\n            floatingField.Layout.X < controlField.Layout.X + controlField.Layout.Width\r\n        ) {\r\n            hasFloatingField = true;\r\n        }\r\n\r\n        return hasFloatingField;\r\n    }\r\n\r\n    public static getOptionsForCustomField(controlField: any, dataField: any, canEditObject: boolean): any {\r\n        if (!controlField || !dataField) { return; }\r\n\r\n        const placeholder = controlField.ReadOnly || !canEditObject ? '' : controlField.Title;\r\n\r\n        return {\r\n            key: controlField.ApiName,\r\n            label: controlField.Title,\r\n            type: 'text',\r\n            accessory: dataField.Accessory,\r\n            placeholder,\r\n            readonly: controlField.ReadOnly || !canEditObject,\r\n            disabled: !dataField.Enabled || !canEditObject,\r\n            hidden: controlField.Hidden,\r\n            required: controlField.Mandatory,\r\n            value: dataField.Value,\r\n            formattedValue: dataField.FormattedValue,\r\n            additionalValue: dataField.AdditionalValue,\r\n            row: controlField.Layout.Y,\r\n            rowSpan: controlField.Layout.Height,\r\n            col: controlField.Layout.X,\r\n            colSpan: controlField.Layout.Width,\r\n            xAlignment: controlField.Layout.XAlignment,\r\n            yAlignment: controlField.Layout.YAlignment,\r\n            options: dataField.OptionalValues,\r\n            groupFields: undefined,\r\n            maxFieldCharacters: controlField.MaxFieldCharacters,\r\n            minValue: controlField.MinValue,\r\n            maxValue: controlField.MaxValue,\r\n            // hasMenu: hasMenu,\r\n            // hasCampaign: hasCampaign,\r\n            // hasIndicators: hasIndicators,\r\n            textColor: dataField.TextColor,\r\n            notificationInfo: dataField.NotificationInfo\r\n        };\r\n    }\r\n\r\n    public static convertToCustomField(controlField: any, dataField: any, canEditObject: boolean,\r\n        menuField: any, hasCampaignField: any, indicatorsField: any,\r\n        objectId: any, parentId: any, searchCode: any): PepperiFieldBase {\r\n        let customField: PepperiFieldBase;\r\n        const options = PepperiFormComponent.getOptionsForCustomField(controlField, dataField, canEditObject);\r\n\r\n        if (controlField.ApiName === 'ObjectMenu') {\r\n            options.type = 'menu';\r\n\r\n            if (dataField.TransactionItemType === 1 && dataField.OptionalValues.length > 0) {\r\n                const subMenuOptions = [{ Key: 'EditPackage', Value: 'Edit' }, { Key: 'DeletePackage', Value: 'Delete' }];\r\n                options.options = subMenuOptions.filter(option => option && dataField.OptionalValues.includes(option.Key));\r\n            }\r\n            else {\r\n                options.options = null;\r\n            }\r\n\r\n            customField = new PepperiMenuField(options);\r\n        } else if (controlField.ApiName === 'QuantitySelector' ||\r\n            controlField.ApiName === 'UnitsQuantity' ||\r\n            controlField.ApiName.indexOf('size_') === 0) {\r\n            if (dataField.FieldType === FIELD_TYPE.InternalLink) {\r\n                options.type = 'button';\r\n            } else if (dataField.FieldType === FIELD_TYPE.Package) {\r\n                options.type = 'packageButton';\r\n            } else if (dataField.FieldType === FIELD_TYPE.NumberRealQuantitySelector ||\r\n                dataField.FieldType === FIELD_TYPE.NumberReal) {\r\n                options.type = 'qs';\r\n                options.alowDecimal = true;\r\n            } else if (dataField.FieldType === FIELD_TYPE.NumberIntegerQuantitySelector ||\r\n                dataField.FieldType === FIELD_TYPE.NumberInteger) {\r\n                options.type = 'qs';\r\n                options.alowDecimal = false;\r\n            } else if (dataField.FieldType === FIELD_TYPE.NumberIntegerForMatrix) {\r\n                options.type = 'qsForMatrix';\r\n                options.alowDecimal = false;\r\n            } else if (dataField.FieldType === FIELD_TYPE.NumberRealForMatrix) {\r\n                options.type = 'qsForMatrix';\r\n                options.alowDecimal = true;\r\n            }\r\n\r\n            customField = new PepperiQuantitySelectorField(options);\r\n        } else {\r\n            // Hack need to remove this..\r\n            if (dataField.FieldType === FIELD_TYPE.Indicators && PepperiFormComponent.isMatrixField(dataField.ApiName)) {\r\n                dataField.FieldType = FIELD_TYPE.InternalPage;\r\n            }\r\n\r\n            switch (dataField.FieldType) {\r\n                case FIELD_TYPE.Address: {\r\n                    const canEditGroupObject = controlField.ReadOnly ? false : canEditObject;\r\n                    options.groupFields = PepperiFormComponent.convertAddressFields(controlField,\r\n                        dataField.GroupFields, canEditGroupObject);\r\n                    customField = new PepperiAddressField(options);\r\n                    break;\r\n                }\r\n                case FIELD_TYPE.Indicators: {\r\n                    // options['type'] = 'indicators'; // Not needed this is PepperiIndicatorsField.\r\n                    customField = new PepperiIndicatorsField(options);\r\n                    break;\r\n                }\r\n                case FIELD_TYPE.InternalPage: {\r\n                    if (PepperiFormComponent.isMatrixField(controlField.ApiName)) {\r\n                        options.rowSpan = controlField.Layout.Height;\r\n                        options.objectId = objectId;\r\n                        options.parentId = parentId;\r\n                        options.searchCode = searchCode;\r\n\r\n                        customField = new PepperiInternalPageField(options);\r\n                    } else {\r\n                        // Not supported\r\n                    }\r\n                    break;\r\n                }\r\n                case FIELD_TYPE.Link: {\r\n                    options.type = 'link';\r\n                    customField = new PepperiTextboxField(options);\r\n\r\n                    // DI-11292 - add changes for link field for the \"Read Only display value\" prop\r\n                    customField.formattedValue = customField.disabled && customField.formattedValue !== '' &&\r\n                        customField.value !== '' ? customField.formattedValue : customField.value;\r\n\r\n                    break;\r\n                }\r\n                case FIELD_TYPE.InternalLink:\r\n                case FIELD_TYPE.Button: {\r\n                    options.type = 'button';\r\n                    customField = new PepperiButtonField(options);\r\n                    break;\r\n                }\r\n                case FIELD_TYPE.Attachment: {\r\n                    options.type = 'attachment';\r\n                    customField = new PepperiAttachmentField(options);\r\n                    break;\r\n                }\r\n                case FIELD_TYPE.Signature: {\r\n                    options.type = 'signature';\r\n                    customField = new PepperiSignatureField(options);\r\n                    break;\r\n                }\r\n                case FIELD_TYPE.Image:\r\n                case FIELD_TYPE.ImageURL: {\r\n                    options.type = 'image';\r\n                    options.menuField = menuField && this.doesFieldHavaFloatingField(controlField, menuField) ? menuField : null;\r\n                    options.hasCampaignField = hasCampaignField &&\r\n                        this.doesFieldHavaFloatingField(controlField, hasCampaignField) ? hasCampaignField : null;\r\n                    options.indicatorsField = indicatorsField &&\r\n                        this.doesFieldHavaFloatingField(controlField, indicatorsField) ? indicatorsField : null;\r\n\r\n                    customField = new PepperiImageField(options);\r\n                    break;\r\n                }\r\n                case FIELD_TYPE.Images: {\r\n                    options.type = 'images';\r\n                    customField = new PepperiImagesField(options);\r\n                    break;\r\n                }\r\n                case FIELD_TYPE.Email: {\r\n                    options.type = 'email';\r\n                    customField = new PepperiTextboxField(options);\r\n                    break;\r\n                }\r\n                case FIELD_TYPE.Phone: {\r\n                    options.type = 'phone';\r\n                    customField = new PepperiTextboxField(options);\r\n                    break;\r\n                }\r\n                case FIELD_TYPE.Duration: {\r\n                    options.type = 'duration';\r\n                    customField = new PepperiTextboxField(options);\r\n                    break;\r\n                }\r\n                case FIELD_TYPE.Default:\r\n                case FIELD_TYPE.TextBox:\r\n                case FIELD_TYPE.LimitedLengthTextBox:\r\n                case FIELD_TYPE.TextHeader:\r\n                case FIELD_TYPE.CalculatedString:\r\n                case FIELD_TYPE.MapDataString: {\r\n                    customField = new PepperiTextboxField(options);\r\n                    break;\r\n                }\r\n                case FIELD_TYPE.TextArea: {\r\n                    customField = new PepperiTextareaField(options);\r\n                    break;\r\n                }\r\n\r\n                case FIELD_TYPE.RichTextHTML: {\r\n                    customField = new PepperiRichHtmlTextareaField(options);\r\n                    break;\r\n                }\r\n                case FIELD_TYPE.Date:\r\n                case FIELD_TYPE.LimitedDate:\r\n                case FIELD_TYPE.CalculatedDate:\r\n                case FIELD_TYPE.DateAndTime: {\r\n                    options.type = dataField.FieldType === FIELD_TYPE.DateAndTime ? 'datetime' : 'date';\r\n                    customField = new PepperiDateField(options);\r\n                    break;\r\n                }\r\n                case FIELD_TYPE.NumberInteger:\r\n                case FIELD_TYPE.CalculatedInt:\r\n                case FIELD_TYPE.MapDataInt: {\r\n                    options.type = 'int';\r\n                    customField = new PepperiTextboxField(options);\r\n                    break;\r\n                }\r\n                case FIELD_TYPE.Percentage: {\r\n                    options.type = 'percentage';\r\n                    customField = new PepperiTextboxField(options);\r\n                    break;\r\n                }\r\n                case FIELD_TYPE.Currency: {\r\n                    options.type = 'currency';\r\n                    customField = new PepperiTextboxField(options);\r\n                    break;\r\n                }\r\n                case FIELD_TYPE.NumberReal:\r\n                case FIELD_TYPE.CalculatedReal:\r\n                case FIELD_TYPE.MapDataReal:\r\n                case FIELD_TYPE.Sum:\r\n                case FIELD_TYPE.Totals: {\r\n                    options.type = 'real';\r\n                    customField = new PepperiTextboxField(options);\r\n                    break;\r\n                }\r\n                case FIELD_TYPE.Boolean:\r\n                case FIELD_TYPE.CalculatedBool: {\r\n                    customField = new PepperiCheckboxField(options);\r\n                    break;\r\n                }\r\n                case FIELD_TYPE.BooleanText: {\r\n                    options.type = 'booleanText';\r\n                    customField = new PepperiCheckboxField(options);\r\n                    break;\r\n                }\r\n                case FIELD_TYPE.ComboBox:\r\n                case FIELD_TYPE.EmptyComboBox:\r\n                case FIELD_TYPE.MapDataDropDown: {\r\n                    // options.type = 'select';\r\n                    customField = new PepperiSelectField(options);\r\n                    break;\r\n                }\r\n                case FIELD_TYPE.MultiTickBox:\r\n                case FIELD_TYPE.MultiTickBoxToComboBox:\r\n                case FIELD_TYPE.EmptyMultiTickBox: {\r\n                    options.type = 'multi';\r\n                    customField = new PepperiSelectField(options);\r\n                    break;\r\n                }\r\n                case FIELD_TYPE.GuidReferenceType: {\r\n                    options.type = 'reference';\r\n                    options.referenceObjectType = dataField.ReferenceObjectType;\r\n                    options.referenceObjectSubType = dataField.ReferenceObjectSubType;\r\n                    options.referenceObjectInternalType = dataField.ReferenceObjectInternalType;\r\n                    customField = new PepperiButtonField(options);\r\n                    break;\r\n                }\r\n                case FIELD_TYPE.ListOfObjects: {\r\n                    options.type = 'listofobjects';\r\n                    customField = new PepperiButtonField(options);\r\n                    break;\r\n                }\r\n                case FIELD_TYPE.Separator: {\r\n                    customField = new PepperiSeparatorField(options);\r\n                    break;\r\n                }\r\n                /*\r\n                    case FIELD_TYPE.Images: return that.field(value);\r\n                */\r\n                case FIELD_TYPE.NumberRealQuantitySelector:\r\n                case FIELD_TYPE.NumberIntegerQuantitySelector: {\r\n                    options.type = 'qs';\r\n                    options.alowDecimal = dataField.FieldType === FIELD_TYPE.NumberRealQuantitySelector;\r\n\r\n                    customField = new PepperiQuantitySelectorField(options);\r\n                    break;\r\n                }\r\n                case FIELD_TYPE.Package: {\r\n                    options.type = 'packageButton';\r\n\r\n                    customField = new PepperiQuantitySelectorField(options);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!customField) {\r\n            options.label = controlField.ApiName + ' is not supported!!!';\r\n            customField = new PepperiSeparatorField(options);\r\n        }\r\n\r\n        return customField;\r\n    }\r\n\r\n    public static getFieldFormattedValue(field: PepperiFieldBase): string {\r\n        let fieldFormattedValue = field.formattedValue;\r\n\r\n        // Fix for the custom check box component.\r\n        if (field.controlType === 'checkbox') {\r\n            fieldFormattedValue = fieldFormattedValue === 'true';\r\n        }\r\n\r\n        // Fix for the custom button component.\r\n        if (field.controlType === 'button') {\r\n            fieldFormattedValue = fieldFormattedValue === '0' ? '' : fieldFormattedValue;\r\n        }\r\n\r\n        return fieldFormattedValue;\r\n    }\r\n\r\n    private static toControlGroup(fields: PepperiFieldBase[], fb: FormBuilder,\r\n        customizationService: CustomizationService): FormGroup {\r\n        const group = {};\r\n        if (fields && fields.length > 0) {\r\n            fields.forEach(field => {\r\n                if (field.groupFields && field.groupFields.length > 0) {\r\n                    const subGroup = {};\r\n\r\n                    field.groupFields.forEach(groupField => {\r\n                        if (groupField.required && (!field.readonly && !field.disabled)) {\r\n                            subGroup[groupField.key] = [{\r\n                                value: groupField.formattedValue || '',\r\n                                disabled: field.readonly || field.disabled || groupField.disabled\r\n                            }, [Validators.required]];\r\n                        } else {\r\n                            subGroup[groupField.key] = [{\r\n                                value: groupField.formattedValue || '',\r\n                                disabled: field.readonly || field.disabled || groupField.disabled\r\n                            }, [Validators.nullValidator]];\r\n                        }\r\n                    });\r\n\r\n                    group[field.key] = fb.group(subGroup);\r\n                } else {\r\n                    const validators = customizationService.getValidatorsForField(field.required, field.readonly,\r\n                        field.disabled, field.maxFieldCharacters, field.type, field.controlType === 'checkbox');\r\n                    const fieldFormattedValue = PepperiFormComponent.getFieldFormattedValue(field);\r\n                    group[field.key] = [{ value: fieldFormattedValue || '', disabled: field.disabled }, validators];\r\n                }\r\n            });\r\n        }\r\n\r\n        return fb.group(group);\r\n    }\r\n\r\n    constructor(\r\n        private dialogService: DialogService,\r\n        private customizationService: CustomizationService,\r\n        private translate: TranslateService,\r\n        public fb: FormBuilder,\r\n        differs: KeyValueDiffers\r\n    ) {\r\n        // store the initial value to compare with\r\n        this.differ = differs.find({}).create();\r\n    }\r\n\r\n    public showFormValidationMessage(): void {\r\n        const fields: PepperiFieldBase[] = this.fields;\r\n        let emptyMandatoryFieldsMsg = '';\r\n        let notValidFieldsMsg = '';\r\n\r\n        // for (let i: number = 0; i < fields.length; i++) {\r\n        //     let field = fields[i];\r\n        for (const field of fields) {\r\n            const formControl = this.form && this.form.get(field.key);\r\n\r\n            if (formControl) {\r\n                // Mandatory is empty.\r\n                if (field.required && formControl.value.toString().trim().length === 0) {\r\n                    emptyMandatoryFieldsMsg += '<li><small>' + field.label + '</small></li>';\r\n                } else if (!field.disabled && !formControl.valid) {\r\n                    notValidFieldsMsg += '<li><small>' + field.label + '</small></li>';\r\n                }\r\n            }\r\n        }\r\n\r\n        // Add the header message of the empty mandatory fields\r\n        if (emptyMandatoryFieldsMsg.length > 0) {\r\n            emptyMandatoryFieldsMsg = '<div>' + this.translate.instant('MESSAGES.ERROR_MANDATORY_FIELDS') +\r\n                '</div><ul style=\\'padding: 0 20px;\\'>' + emptyMandatoryFieldsMsg + '</ul><br/>';\r\n        }\r\n\r\n        // Add the header message of the empty mandatory fields\r\n        if (notValidFieldsMsg.length > 0) {\r\n            notValidFieldsMsg = '<div>' + this.translate.instant('MESSAGES.ERROR_INVALID_FIELDS') +\r\n                '</div><ul style=\\'padding: 0 20px;\\'>' + notValidFieldsMsg + '</ul>';\r\n        }\r\n\r\n        const title = this.translate.instant('MESSAGES.TITLE_NOTICE');\r\n        const data = new DialogData({\r\n            title,\r\n            content: emptyMandatoryFieldsMsg + notValidFieldsMsg,\r\n            contentType: DialogDataType.Html\r\n        });\r\n        this.dialogService.openDefaultDialog(data);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        const themeVars = this.customizationService.getThemeVariables();\r\n        // convert rem to pixel\r\n        const RemToPixel = 16;\r\n        this.formGutterSize = this.customizationService.getNumberThemeVariable(themeVars,\r\n            CustomizationService.FORM_SPACEING_KEY) * RemToPixel;\r\n        this.cardGutterSize = this.customizationService.getNumberThemeVariable(themeVars,\r\n            CustomizationService.CARD_SPACEING_KEY) * RemToPixel;\r\n    }\r\n\r\n    ngDoCheck(): void {\r\n        const changes = this.differ.diff(this.pepperiObjectInput); // check for changes\r\n\r\n        if (changes) {\r\n            this.updateForm(true);\r\n        }\r\n    }\r\n\r\n    ngOnChanges(changes): void {\r\n        if (changes.pepperiObjectInput && changes.pepperiObjectInput.currentValue) {\r\n            // Load changes\r\n            if (!this.shouldReloadForm && changes.pepperiObjectInput.previousValue) {\r\n                this.pepperiObjectInput = changes.pepperiObjectInput.currentValue;\r\n                this.updateForm();\r\n            } else {\r\n                this.shouldReloadForm = false;\r\n                this.initForm(changes);\r\n            }\r\n        }\r\n\r\n        this.checkForChanges = new Date();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        if (this.notifyValueChanged) { this.notifyValueChanged.unsubscribe(); }\r\n\r\n        if (this.formValidationChanged) { this.formValidationChanged.unsubscribe(); }\r\n\r\n        if (this.childClicked) { this.childClicked.unsubscribe(); }\r\n\r\n        if (this.childChanged) { this.childChanged.unsubscribe(); }\r\n\r\n        if (this.notifyFieldClicked) { this.notifyFieldClicked.unsubscribe(); }\r\n\r\n        if (this.notifyMenuItemClicked) { this.notifyMenuItemClicked.unsubscribe(); }\r\n    }\r\n\r\n    getUiControlFields(): Array<UIControlField> {\r\n        return this.uiControlHeader ?\r\n            this.uiControlHeader.ControlFields :\r\n            this.pepperiObjectInput.UIControl.ControlFields;\r\n    }\r\n\r\n    initFieldsStructure(fields: PepperiFieldBase[], maxRow: number): void {\r\n        const themeVars = this.customizationService.getThemeVariables();\r\n\r\n        // Set form row height.\r\n        if (this.layoutType === LAYOUT_TYPE.PepperiCard) {\r\n            const cardFieldHeight = this.customizationService.getNumberThemeVariable(themeVars,\r\n                CustomizationService.CARD_FIELD_HEIGHT_KEY);\r\n            this.rowHeight = cardFieldHeight;\r\n        } else {\r\n            const rowFieldHeight = this.customizationService.getNumberThemeVariable(themeVars,\r\n                CustomizationService.FORM_FIELD_HEIGHT_KEY);\r\n            const rowFieldTitleHeight = this.customizationService.getNumberThemeVariable(themeVars,\r\n                CustomizationService.FORM_FIELD_TITLE_HEIGHT_KEY);\r\n            this.rowHeight = rowFieldHeight + rowFieldTitleHeight;\r\n        }\r\n\r\n        // Create the fields structure (the fields must be sorted!!!).\r\n        if (fields.length > 0) {\r\n            // Init the layout.\r\n            if (\r\n                // this.layoutType === LAYOUT_TYPE.PepperiForm ||\r\n                this.layoutType === LAYOUT_TYPE.PepperiTable ||\r\n                this.layoutType === LAYOUT_TYPE.Editmodal\r\n            ) {\r\n                this.fields = fields;\r\n                this.rows = [];\r\n\r\n                for (let i = 0; i <= maxRow; i++) {\r\n                    this.rows[i] = [];\r\n                }\r\n\r\n                // for (let i = 0; i < fields.length; i++) {\r\n                // const field = fields[i]\r\n                for (const field of fields) {\r\n                    this.rows[field.row].push(field);\r\n                }\r\n            } else {\r\n                const doesfieldExistIn: boolean[][] = new Array(maxRow);\r\n\r\n                for (let i = 0; i < doesfieldExistIn.length; i++) {\r\n                    doesfieldExistIn[i] = new Array(this.columns);\r\n\r\n                    for (let j = 0; j < doesfieldExistIn[i].length; j++) {\r\n                        doesfieldExistIn[i][j] = false;\r\n                    }\r\n                }\r\n\r\n                // Run in squere (row - colspan, col - rowspan) and put true where it should.\r\n                // for (let index = 0; index < fields.length; index++) {\r\n                //     const currentField = fields[index];\r\n                for (const currentField of fields) {\r\n                    if (currentField.rowSpan > 1) {\r\n                        for (let row: number = currentField.row; row < currentField.row + currentField.rowSpan; row++) {\r\n                            if (currentField.colSpan > 1) {\r\n                                for (let col: number = currentField.col; col < currentField.col + currentField.colSpan; col++) {\r\n                                    if (doesfieldExistIn.length > row && doesfieldExistIn[0].length > col) {\r\n                                        doesfieldExistIn[row][col] = true;\r\n                                    }\r\n                                }\r\n                            } else {\r\n                                if (doesfieldExistIn.length > row && doesfieldExistIn[0].length > currentField.col) {\r\n                                    doesfieldExistIn[row][currentField.col] = true;\r\n                                }\r\n                            }\r\n                        }\r\n                    } else if (currentField.colSpan > 1) {\r\n                        for (let col: number = currentField.col; col < currentField.col + currentField.colSpan; col++) {\r\n                            if (doesfieldExistIn.length > currentField.row && doesfieldExistIn[0].length > col) {\r\n                                doesfieldExistIn[currentField.row][col] = true;\r\n                            }\r\n                        }\r\n                    } else {\r\n                        if (doesfieldExistIn.length > currentField.row && doesfieldExistIn[0].length > currentField.col) {\r\n                            doesfieldExistIn[currentField.row][currentField.col] = true;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Create empty fields where doesfieldExistIn is false (For the md-grid-list UI Component).\r\n                for (let i = 0; i < doesfieldExistIn.length; i++) {\r\n                    for (let j = 0; j < doesfieldExistIn[i].length; j++) {\r\n                        if (!doesfieldExistIn[i][j]) {\r\n                            // Create empty field and add it to the fields list.\r\n                            fields.push(\r\n                                new PepperiPlaceholderField({\r\n                                    key: i + '_' + j,\r\n                                    label: '',\r\n                                    type: 'text',\r\n                                    placeholder: '',\r\n                                    readonly: false,\r\n                                    disabled: false,\r\n                                    hidden: false,\r\n                                    required: false,\r\n                                    value: '',\r\n                                    formattedValue: '',\r\n                                    row: i,\r\n                                    rowSpan: 1,\r\n                                    col: j,\r\n                                    colSpan: 1,\r\n                                    order: 1\r\n                                })\r\n                            );\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Sort the fields again.\r\n                this.fields = fields.sort((f1, f2) => (f1.row > f2.row ?\r\n                    1 : f1.row < f2.row ?\r\n                        -1 : f1.col > f2.col ?\r\n                            1 : f1.col < f2.col ? -1 : 0));\r\n            }\r\n        }\r\n    }\r\n\r\n    setForm(isForUpdate = false): void {\r\n        let allFieldsAreReadOnly = true;\r\n\r\n        if (!isForUpdate) {\r\n            const fields = [];\r\n            // for (let i = 0; i < this.fields.length; i++) {\r\n            // const currentField = this.fields[i];\r\n            for (const currentField of this.fields) {\r\n                // Add all fields except 'internalPage' type (for children).\r\n                if (currentField.controlType !== 'internalPage') {\r\n                    fields.push(currentField);\r\n                }\r\n\r\n                if (!currentField.readonly) {\r\n                    allFieldsAreReadOnly = false;\r\n                }\r\n            }\r\n\r\n            this.form = PepperiFormComponent.toControlGroup(fields, this.fb, this.customizationService);\r\n        }\r\n        else {\r\n            // Update form values if changed by calculated fields.\r\n            // for (let i = 0; i < this.fields.length; i++) {\r\n            // const currentField = this.fields[i];\r\n            for (const currentField of this.fields) {\r\n\r\n                if (currentField.controlType !== 'internalPage') {\r\n                    if (currentField.groupFields && currentField.groupFields.length > 0) {\r\n                        // for (let j = 0; j < currentField.groupFields.length; j++) {\r\n                        //     let currentGroupField = currentField.groupFields[j];\r\n                        for (const currentGroupField of currentField.groupFields) {\r\n                            const fieldFormattedValue = PepperiFormComponent.getFieldFormattedValue(currentGroupField);\r\n                            this.customizationService.updateFormField(this.form, currentGroupField,\r\n                                fieldFormattedValue, currentField);\r\n\r\n                        }\r\n                    } else {\r\n                        const fieldFormattedValue = PepperiFormComponent.getFieldFormattedValue(currentField);\r\n                        // this.form.controls[currentField.key].setValue(fieldFormattedValue);\r\n                        this.customizationService.updateFormField(this.form, currentField, fieldFormattedValue);\r\n                    }\r\n                }\r\n\r\n                if (!currentField.readonly) {\r\n                    allFieldsAreReadOnly = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        let isFormValid = this.form.valid;\r\n\r\n        // Change validation to true if all fields are read only. (By Amir.L request).\r\n        if (!isFormValid && allFieldsAreReadOnly) {\r\n            isFormValid = true;\r\n        }\r\n\r\n        this.onFormValidationChanged(isFormValid);\r\n\r\n        // Set it to false to enable all fields.\r\n        this.isLocked = false;\r\n    }\r\n\r\n    initForm(changes): void {\r\n        if (this.pepperiObjectInput.Data && this.pepperiObjectInput.Data.Fields) {\r\n            const fields: PepperiFieldBase[] = this.convertCustomFields(\r\n                this.getUiControlFields(), this.pepperiObjectInput.Data.Fields);\r\n\r\n            const maxRow = Math.max.apply(\r\n                Math,\r\n                fields.map((f) => {\r\n                    return f.row + f.rowSpan;\r\n                })\r\n            );\r\n            this.columns = Math.max.apply(\r\n                Math,\r\n                fields.map((f) => {\r\n                    return f.col + f.colSpan;\r\n                })\r\n            );\r\n\r\n            this.initFieldsStructure(fields, maxRow);\r\n            this.setForm();\r\n        }\r\n    }\r\n\r\n    updateForm(cleanLastFocusedField: boolean = false): void {\r\n        if (this.pepperiObjectInput.Data && this.pepperiObjectInput.Data.Fields) {\r\n            // for (let i = 0; i < this.pepperiObjectInput.Data.Fields.length; i++) {\r\n            // let currentField = this.pepperiObjectInput.Data.Fields[i];\r\n            for (const currentField of this.pepperiObjectInput.Data.Fields) {\r\n                const customField = this.fields.filter(f => f.key === currentField.ApiName)[0];\r\n                // Update all fields except 'internalPage' type (for children).\r\n                if (customField && customField.controlType !== 'internalPage') {\r\n                    const hasFocus = this.lastFocusedField && this.lastFocusedField.id === customField.key;\r\n                    customField.updateField(currentField, this.canEditObject, hasFocus ? this.lastFocusedField : null);\r\n\r\n                    // Update the group fields.\r\n                    if (customField.controlType === 'address' && currentField.GroupFields) {\r\n                        // for (let j = 0; j < currentField.GroupFields.length; j++) {\r\n                        // let currentGroupField = currentField.GroupFields[j];\r\n                        for (const currentGroupField of currentField.GroupFields) {\r\n                            currentGroupField.Enabled = !currentField.Enabled ? false : currentGroupField.Enabled;\r\n\r\n                            const customGroupField = customField.groupFields.filter(f => f.key === currentGroupField.ApiName)[0];\r\n                            const hasGroupFocus = this.lastFocusedField && this.lastFocusedField.id === customGroupField.key;\r\n\r\n                            customGroupField.updateField(currentGroupField, this.canEditObject,\r\n                                hasGroupFocus ? this.lastFocusedField : null);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            this.setForm(true);\r\n\r\n            if (cleanLastFocusedField) {\r\n                // Clean the last focused field.\r\n                this.lastFocusedField = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    public ReloadForm(): void {\r\n        this.shouldReloadForm = true;\r\n    }\r\n\r\n    // onSubmit() {\r\n    //     if (this.form.valid) {\r\n    //         this.payLoad = JSON.stringify(this.form.value);\r\n    //         //this.submitted.emit(this.form.value);\r\n    //     }\r\n    // }\r\n\r\n    private getFormControlById(key: string): AbstractControl | null {\r\n        const self = this;\r\n        let formControl = null;\r\n\r\n        this.fields.forEach((field) => {\r\n            if (field.key === key) {\r\n                formControl = self.form.get(field.key);\r\n                return;\r\n            } else if (field.groupFields && field.groupFields.length > 0) {\r\n                field.groupFields.forEach((groupField) => {\r\n                    if (groupField.key === key) {\r\n                        formControl = self.form.get(field.key + '.' + groupField.key);\r\n                        return;\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n        return formControl;\r\n    }\r\n\r\n    private setSpecialFields(controlFields: Array<any>, dataFields: Array<any>): void {\r\n        // let cf;\r\n        // for (let index = 0; index < controlFields.length; index++) {\r\n        //     cf = controlFields[index];\r\n        for (const cf of controlFields) {\r\n            if (cf.ApiName === 'ObjectMenu') {\r\n                this.menuField = cf;\r\n            } else if (cf.ApiName === 'ItemHasActiveCampaign') {\r\n                this.hasCampaignField = cf;\r\n            } else if (cf.ApiName === 'ItemIndicatorsWithoutCampaign') {\r\n                this.indicatorsField = cf;\r\n            }\r\n        }\r\n\r\n        // let df;\r\n        // for (let index = 0; index < dataFields.length; index++) {\r\n        //     df = dataFields[index];\r\n        for (const df of dataFields) {\r\n            if (df.ApiName === 'ObjectMenu') {\r\n                this.menuDataField = df;\r\n            } else if (df.ApiName === 'ItemHasActiveCampaign') {\r\n                this.hasCampaignDataField = df;\r\n            } else if (df.ApiName === 'ItemIndicatorsWithoutCampaign') {\r\n                this.indicatorsDataField = df;\r\n            }\r\n        }\r\n\r\n        if (this.menuField && this.menuDataField) {\r\n            this.menuDataField.Layout = this.menuField.Layout;\r\n        }\r\n\r\n        if (this.hasCampaignField && this.hasCampaignDataField) {\r\n            this.hasCampaignDataField.Layout = this.hasCampaignField.Layout;\r\n        }\r\n\r\n        if (this.indicatorsField && this.indicatorsDataField) {\r\n            this.indicatorsDataField.Layout = this.indicatorsField.Layout;\r\n        }\r\n\r\n        // Check if menu is floating on other field.\r\n        // for (let index = 0; index < controlFields.length; index++) {\r\n        //     cf = controlFields[index];\r\n        for (const cf of controlFields) {\r\n            if (this.menuField && cf.ApiName !== 'ObjectMenu') {\r\n                this.hasMenuFloatingOnOtherField = PepperiFormComponent.doesFieldHavaFloatingField(cf, this.menuField);\r\n\r\n                if (this.hasMenuFloatingOnOtherField) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    convertCustomFields(controlFields: Array<any>, dataFields: Array<any>): PepperiFieldBase[] {\r\n        const self = this;\r\n\r\n        if (this.layoutType !== LAYOUT_TYPE.PepperiTable) {\r\n            this.setSpecialFields(controlFields, dataFields);\r\n        } else {\r\n            // Hack: convert to center alignment if table view & special fields)\r\n            controlFields.forEach((field, index) => {\r\n                if (\r\n                    field.ApiName === 'UnitsQuantity' ||\r\n                    field.ApiName === 'QuantitySelector' ||\r\n                    field.ApiName === 'ObjectMenu' ||\r\n                    field.FieldType === FIELD_TYPE.Image ||\r\n                    field.FieldType === FIELD_TYPE.ImageURL ||\r\n                    field.FieldType === FIELD_TYPE.Indicators ||\r\n                    field.FieldType === FIELD_TYPE.Boolean ||\r\n                    field.FieldType === FIELD_TYPE.CalculatedBool ||\r\n                    field.FieldType === FIELD_TYPE.Signature ||\r\n                    field.FieldType === FIELD_TYPE.NumberIntegerQuantitySelector ||\r\n                    field.FieldType === FIELD_TYPE.NumberRealQuantitySelector ||\r\n                    field.FieldType === FIELD_TYPE.Package ||\r\n                    field.FieldType === FIELD_TYPE.NumberIntegerForMatrix ||\r\n                    field.FieldType === FIELD_TYPE.NumberRealForMatrix\r\n                ) {\r\n                    field.Layout.XAlignment = 3;\r\n                }\r\n            });\r\n        }\r\n\r\n        const fields: PepperiFieldBase[] = [];\r\n\r\n        const matrixFields = controlFields.filter(cf => PepperiFormComponent.isMatrixField(cf.ApiName)).length;\r\n        let matrixAlreadyPlaced = false;\r\n\r\n        controlFields.forEach((field, index) => {\r\n            const dataField = dataFields.filter(df => df.ApiName === field.ApiName)[0];\r\n\r\n            if (!dataField) { return; }\r\n\r\n            // If current view is not table view and those fields are special.\r\n            if (\r\n                this.layoutType !== LAYOUT_TYPE.PepperiTable &&\r\n                ((this.hasMenuFloatingOnOtherField && this.menuField && this.menuField.ApiName === field.ApiName) ||\r\n                    (this.indicatorsField && this.indicatorsField.ApiName === field.ApiName) ||\r\n                    (this.hasCampaignField && this.hasCampaignField.ApiName === field.ApiName))\r\n            ) {\r\n                return;\r\n            }\r\n\r\n            // Remove this. (fix two matrix into one)\r\n            if (matrixFields > 0 && PepperiFormComponent.isMatrixField(field.ApiName)) {\r\n                if (matrixFields > 1 && matrixAlreadyPlaced) {\r\n                    return;\r\n                }\r\n\r\n                matrixAlreadyPlaced = true;\r\n\r\n                if (matrixFields > 1) {\r\n                    self.matrixIsLast = controlFields.length >= 2 ?\r\n                        controlFields[controlFields.length - 2].ApiName === field.ApiName : false;\r\n                } else {\r\n                    self.matrixIsLast = controlFields[controlFields.length - 1].ApiName === field.ApiName;\r\n                }\r\n            }\r\n\r\n            // Set type to link\r\n            if (this.firstFieldAsLink && index === 0) {\r\n                dataField.FieldType = FIELD_TYPE.InternalLink;\r\n                dataField.Value = this.getInternalLinkHref();\r\n            } else if (dataField.Value.length > 0 &&\r\n                (field.FieldType === FIELD_TYPE.ReferenceType || field.FieldType === FIELD_TYPE.GuidReferenceType)) {\r\n                const transactionUrl = this.pepperiObjectInput.Data.MainAction === '2' ? 'transactions/scope_items/' : 'transactions/cart/';\r\n                dataField.Value = transactionUrl + dataField.Value;\r\n            }\r\n\r\n            if (field.ApiName === 'ObjectMenu') {\r\n                const data: any = this.pepperiObjectInput.Data;\r\n                // HACK : Until \"Enabled\" returns from the server, we set PepperiMenu to be\r\n                //        Disabled in cart on regular items and not campign items.\r\n                dataField.Enabled = this.pageType !== 'cart';\r\n                dataField.OptionalValues = data.TransactionItemCustomMenu;\r\n                dataField.TransactionItemType = data.TransactionItemType;\r\n            }\r\n            const customField: PepperiFieldBase = PepperiFormComponent.convertToCustomField(\r\n                field,\r\n                dataField,\r\n                this.canEditObject,\r\n                this.menuDataField,\r\n                this.hasCampaignDataField,\r\n                this.indicatorsDataField,\r\n                this.objectId,\r\n                this.parentId,\r\n                this.searchCode\r\n            );\r\n\r\n            fields.push(customField);\r\n        });\r\n\r\n        return fields.sort((f1, f2) => (f1.row > f2.row ?\r\n            1 : f1.row < f2.row ?\r\n                -1 : f1.col > f2.col ?\r\n                    1 : f1.col < f2.col ? -1 : 0));\r\n    }\r\n\r\n    onValueChanged(valueChanged: any, isEditModal: boolean = false): void {\r\n        // This was comment by Tomer cause the address has stop working because this change.\r\n        // let clickedUiControlField = this.pepperiObjectInput.Data.Fields.filter(f => f.ApiName === valueChanged.apiName)[0];\r\n        // if (clickedUiControlField) {\r\n        this.onFormValidationChanged(this.form.valid);\r\n\r\n        const formControl = this.getFormControlById(valueChanged.apiName);\r\n\r\n        const isValid = formControl ? formControl.valid : true;\r\n        // const isValid = true;\r\n\r\n        if (isValid) {\r\n            // Set it to false to disable all fields.\r\n            if (this.layoutType === LAYOUT_TYPE.PepperiForm) {\r\n                this.isLocked = true;\r\n            }\r\n\r\n            this.lastFocusedField = valueChanged.lastFocusedField;\r\n            const customizeObjectChangedData = new PepperiObjectChangedData(this.pepperiObjectInput.Data.UID.toString(),\r\n                valueChanged.apiName, valueChanged.value, valueChanged.controlType);\r\n            this.notifyValueChanged.emit(customizeObjectChangedData);\r\n        }\r\n        // }\r\n\r\n    }\r\n\r\n    onChildClicked(childClicked: any): void {\r\n        this.childClicked.emit(childClicked);\r\n    }\r\n\r\n    onChildChanged(childChanged: any): void {\r\n        this.childChanged.emit(childChanged);\r\n    }\r\n\r\n    onFormValidationChanged(formValidationChanged: any): void {\r\n        if (this.layoutType === LAYOUT_TYPE.PepperiForm || this.layoutType === LAYOUT_TYPE.PepperiCard) {\r\n            this.formValidationChanged.emit(formValidationChanged);\r\n        }\r\n    }\r\n\r\n    onClick(fieldClickEvent: any): void {\r\n        const clickedUiControlField = this.pepperiObjectInput.Data.Fields.filter(f => f.ApiName === fieldClickEvent.apiName)[0];\r\n        // let clickedField = this.fields.filter(f => f.key === fieldClickEvent.apiName)[0];\r\n\r\n        if (clickedUiControlField) {\r\n            if (clickedUiControlField.FieldType === FIELD_TYPE.GuidReferenceType) {\r\n                const customizeFieldClickedData = new PepperiFieldClickedData(\r\n                    this.pepperiObjectInput.Data.UID.toString(),\r\n                    fieldClickEvent.apiName,\r\n                    this.pepperiObjectInput.Data.Type,\r\n                    fieldClickEvent.eventWhich,\r\n                    fieldClickEvent.value,\r\n                    clickedUiControlField.FieldType,\r\n                    fieldClickEvent.referenceObjectInternalType\r\n                );\r\n                this.notifyFieldClicked.emit(customizeFieldClickedData);\r\n            } else if (clickedUiControlField.FieldType === FIELD_TYPE.ListOfObjects) {\r\n                const customizeFieldClickedData = new PepperiFieldClickedData(\r\n                    this.pepperiObjectInput.Data.UID.toString(),\r\n                    fieldClickEvent.apiName,\r\n                    this.pepperiObjectInput.Data.Type,\r\n                    fieldClickEvent.eventWhich,\r\n                    fieldClickEvent.value,\r\n                    clickedUiControlField.FieldType,\r\n                    fieldClickEvent.otherData\r\n                );\r\n                this.notifyFieldClicked.emit(customizeFieldClickedData);\r\n            } else {\r\n                const customizeFieldClickedData = new PepperiFieldClickedData(\r\n                    this.pepperiObjectInput.Data.UID.toString(),\r\n                    fieldClickEvent.apiName,\r\n                    this.pepperiObjectInput.Data.Type,\r\n                    fieldClickEvent.eventWhich,\r\n                    fieldClickEvent.value,\r\n                    clickedUiControlField.FieldType,\r\n                    fieldClickEvent.otherData\r\n                );\r\n                this.notifyFieldClicked.emit(customizeFieldClickedData);\r\n            }\r\n        } else {\r\n            // For other api names (like enter children etc).\r\n            const customizeFieldClickedData = new PepperiFieldClickedData(\r\n                this.pepperiObjectInput.Data.UID.toString(),\r\n                fieldClickEvent.apiName,\r\n                this.pepperiObjectInput.Data.Type,\r\n                fieldClickEvent.eventWhich,\r\n                fieldClickEvent.value,\r\n                null,\r\n                fieldClickEvent.otherData\r\n            );\r\n            this.notifyFieldClicked.emit(customizeFieldClickedData);\r\n        }\r\n    }\r\n\r\n    onMenuItemClicked(fieldClickEvent: any): void {\r\n        const clickedUiControlField = this.pepperiObjectInput.Data.Fields.filter(f => f.ApiName === fieldClickEvent.apiName)[0];\r\n        const dataField: any = this.pepperiObjectInput.Data;\r\n        const fieldType = typeof clickedUiControlField !== 'undefined' ? clickedUiControlField.FieldType : FIELD_TYPE.Package;\r\n        const customizeFieldClickedData = new PepperiFieldClickedData(dataField.UID.toString(), fieldClickEvent.apiName,\r\n            dataField.Type, fieldClickEvent.eventWhich, fieldClickEvent.value, fieldType, {\r\n            ExtraInfo: dataField.ExtraInfo,\r\n            ItemType: dataField.TransactionItemType\r\n        });\r\n        this.notifyMenuItemClicked.emit(customizeFieldClickedData);\r\n    }\r\n\r\n    getInternalLinkHref(): string {\r\n        let hrefStr = '';\r\n        const uid = this.pepperiObjectInput.Data.UID;\r\n        const transactionUrl = this.pepperiObjectInput.Data.MainAction === '2' ? 'transactions/scope_items/' : 'transactions/cart/';\r\n        // let isBuyer = sessionStorage.getItem('userRole') == 'Buyer' ? true : false;\r\n\r\n        if (this.listType === 'all_activities') {\r\n            hrefStr = this.pepperiObjectInput.Data.Type === 0 ? transactionUrl + uid : 'activities/details/' + uid;\r\n        } else if (this.listType === 'accounts') {\r\n            hrefStr = 'accounts/home_page/' + uid;\r\n        }\r\n\r\n        return hrefStr;\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\n\r\nimport { MatCommonModule } from '@angular/material/core';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\n\r\nimport { SignaturePadModule } from 'angular2-signaturepad';\r\n\r\nimport { PepperiModule } from '@pepperi-addons/ngx-lib';\r\nimport {\r\n    PepperiIconModule,\r\n    PepperiIconRegistry,\r\n    pepperiIconIndicatorDotPlaceholder } from '@pepperi-addons/ngx-lib/icon';\r\n\r\nimport { PepperiDialogModule } from '@pepperi-addons/ngx-lib/dialog';\r\n\r\nimport { PepperiAddressModule } from '@pepperi-addons/ngx-lib/address';\r\nimport { PepperiAttachmentModule } from '@pepperi-addons/ngx-lib/attachment';\r\nimport { PepperiCheckboxModule } from '@pepperi-addons/ngx-lib/checkbox';\r\nimport { PepperiDateModule } from '@pepperi-addons/ngx-lib/date';\r\nimport { PepperiImageModule } from '@pepperi-addons/ngx-lib/image';\r\nimport { PepperiImagesFilmstripModule } from '@pepperi-addons/ngx-lib/images-filmstrip';\r\nimport { PepperiInternalButtonModule } from '@pepperi-addons/ngx-lib/internal-button';\r\n// import { PepperiInternalPageModule } from '@pepperi-addons/ngx-lib/internal-page';\r\nimport { PepperiMenuModule } from '@pepperi-addons/ngx-lib/menu';\r\nimport { PepperiQuantitySelectorModule } from '@pepperi-addons/ngx-lib/quantity-selector';\r\nimport { PepperiRichHtmlTextareaModule } from '@pepperi-addons/ngx-lib/rich-html-textarea';\r\nimport { PepperiSelectModule } from '@pepperi-addons/ngx-lib/select';\r\nimport { PepperiSeparatorModule } from '@pepperi-addons/ngx-lib/separator';\r\nimport { PepperiSignatureModule } from '@pepperi-addons/ngx-lib/signature';\r\nimport { PepperiTextareaModule } from '@pepperi-addons/ngx-lib/textarea';\r\nimport { PepperiTextboxModule } from '@pepperi-addons/ngx-lib/textbox';\r\n\r\nconst pepperiComponentsModules = [\r\n    PepperiAddressModule,\r\n    PepperiAttachmentModule,\r\n    PepperiCheckboxModule,\r\n    PepperiDateModule,\r\n    PepperiImageModule,\r\n    PepperiImagesFilmstripModule,\r\n    PepperiInternalButtonModule,\r\n    // PepperiInternalPageModule,\r\n    PepperiMenuModule,\r\n    PepperiQuantitySelectorModule,\r\n    PepperiRichHtmlTextareaModule,\r\n    PepperiSelectModule,\r\n    PepperiSeparatorModule,\r\n    PepperiSignatureModule,\r\n    PepperiTextareaModule,\r\n    PepperiTextboxModule,\r\n];\r\n\r\nimport { PepperiFormComponent } from './form.component';\r\nimport { PepperiFieldGeneratorComponent } from './field-generator.component';\r\nimport { PepperiIndicatorsComponent } from './indicators.component';\r\nimport { PepperiInternalPageComponent } from './internal-page.component';\r\nimport { PepperiInternalListComponent } from './internal-list.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        ReactiveFormsModule,\r\n        FormsModule,\r\n        // Material modules,\r\n        MatCommonModule,\r\n        MatGridListModule,\r\n        MatIconModule,\r\n        MatMenuModule,\r\n        // External modules\r\n        SignaturePadModule,\r\n        // Pepperi modules\r\n        PepperiModule,\r\n        PepperiDialogModule,\r\n        PepperiIconModule,\r\n        pepperiComponentsModules,\r\n    ],\r\n    exports: [PepperiFormComponent],\r\n    declarations: [\r\n        PepperiFormComponent,\r\n        PepperiFieldGeneratorComponent,\r\n        PepperiIndicatorsComponent,\r\n        PepperiInternalPageComponent,\r\n        PepperiInternalListComponent\r\n    ],\r\n})\r\nexport class PepperiFormModule {\r\n    constructor(private pepperiIconRegistry: PepperiIconRegistry) {\r\n        this.pepperiIconRegistry.registerIcons([\r\n            pepperiIconIndicatorDotPlaceholder\r\n        ]);\r\n    }\r\n}\r\n","/*\r\n * Public API Surface of ngx-lib/form\r\n */\r\nexport * from './form.module';\r\nexport * from './form.component';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i0.ɵɵelementContainerStart","i0.ɵɵelement","i0.ɵɵelementContainerEnd","i0.ɵɵadvance","i0.ɵɵproperty","LAYOUT_TYPE","i0.ɵɵelementStart","i0.ɵɵtemplate","i0.ɵɵelementEnd","Component","ChangeDetectionStrategy","Input","Injectable","i0.ɵɵtext","i0.ɵɵtextInterpolate","i0.ɵɵclassMapInterpolate1","i0.ɵɵpropertyInterpolate","i0.ɵɵtextInterpolate1","i0.ɵɵlistener","i0.ɵɵelementContainer","i0.ɵɵclassMap","EventEmitter","delay","FIELD_TYPE","Output","ViewChild","ObjectSingleData","$","ViewContainerRef","ViewEncapsulation","PepperiTextboxField","PepperiSelectField","PepperiMenuField","PepperiQuantitySelectorField","PepperiAddressField","PepperiIndicatorsField","PepperiInternalPageField","PepperiButtonField","PepperiAttachmentField","PepperiSignatureField","PepperiImageField","PepperiImagesField","PepperiTextareaField","PepperiRichHtmlTextareaField","PepperiDateField","PepperiCheckboxField","PepperiSeparatorField","Validators","DialogData","DialogDataType","CustomizationService","PepperiPlaceholderField","PepperiObjectChangedData","PepperiFieldClickedData","PepperiAddressModule","PepperiAttachmentModule","PepperiCheckboxModule","PepperiDateModule","PepperiImageModule","PepperiImagesFilmstripModule","PepperiInternalButtonModule","PepperiMenuModule","PepperiQuantitySelectorModule","PepperiRichHtmlTextareaModule","PepperiSelectModule","PepperiSeparatorModule","PepperiSignatureModule","PepperiTextareaModule","PepperiTextboxModule","pepperiIconIndicatorDotPlaceholder","CommonModule","ReactiveFormsModule","FormsModule","MatCommonModule","MatGridListModule","MatIconModule","MatMenuModule","SignaturePadModule","PepperiModule","PepperiDialogModule","PepperiIconModule","NgModule"],"mappings":"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"}