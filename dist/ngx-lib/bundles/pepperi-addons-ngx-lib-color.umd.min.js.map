{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","../../../projects/ngx-lib/color/color-utils.ts","../../../projects/ngx-lib/color/color.model.ts","../../../projects/ngx-lib/color/color-picker.component.html","../../../projects/ngx-lib/color/color-picker.component.ts","../../../projects/ngx-lib/color/color.component.html","../../../projects/ngx-lib/color/color.component.ts","../../../projects/ngx-lib/color/color.module.ts"],"names":["Object","create","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","PepColorType","THREE_DIGIT_HEX_COLOR_REGEX","THREE_DIGIT_HEX_COLOR_WITH_HASH_REGEX","SIX_DIGIT_HEX_COLOR_REGEX","SIX_DIGIT_HEX_COLOR_WITH_HASH_REGEX","hex2sixDigitHex","str","trim","test","rgb2sixDigitHex","color","toString","g","b","length","hex2rgb","sixDigitHex","parseInt","slice","rgbString2hsl","sep","indexOf","rgbArr","substr","split","rgb2hsl","_a","cmin","Math","min","cmax","max","delta","h","l","round","s","abs","toFixed","hslString2hsl","hslArr","PI","replace","hsl2rgb","isFinite","c","x","hex2hsl","rgb","hsl2hex","hsl","relativeLuminance","_b","map","pow","contrast","str1","str2","L1","L2","findClosestAccessibleDarkerColor","adjustableColor","otherColor","contrastRatio","lightness","minColor","lastMinColor","lastMaxColor","maxColor","findClosestAccessibleLighterColor","findClosestAccessibleColor","closestDarkerColor","closestLighterColor","convertHslToStringHsl","i0.ɵɵelementStart","i0.ɵɵelement","i0.ɵɵelementEnd","i0.ɵɵtemplate","i0.ɵɵadvance","i0.ɵɵproperty","i0.ɵɵlistener","i0.ɵɵtext","i0.ɵɵtextInterpolate","ContrastRatioType","PepperiColorPickerComponent","dialogRef","data","this","checkAAComplient","currentHue","currentHueMin","currentHueMax","currentSaturation","currentSaturationMin","currentSaturationMax","currentLightness","currentLightnessMin","currentLightnessMax","type","AnyColor","showAAComplient","undefined","textColor","AA","prototype","ngOnInit","initVars","convertValueStringToColor","MainColor","SuccessColor","CautionColor","setCurrentHueInCss","document","documentElement","style","setProperty","CURRENT_HUE","convertColorToValueString","hslColor","closestHex","isUserChooseAAComplientColor","complientColor","onHueChange","event","onSaturationChange","onLightnessChange","onColorValueChange","onSave","close","i0","ɵɵdirectiveInject","i1","MatDialogRef","MAT_DIALOG_DATA","selectors","decls","vars","consts","template","rf","ctx","$event","ɵɵpipeBind1","i0.ɵɵtextInterpolate1","PepperiColorComponent","dialogService","renderer","element","key","label","disabled","readonly","xAlignment","rowSpan","showTitle","layoutType","LAYOUT_TYPE","PepperiForm","valueChanged","EventEmitter","addClass","nativeElement","CustomizationService","STAND_ALONE_FIELD_CLASS_NAME","ngOnDestroy","unsubscribe","changeColor","emit","apiName","chooseColor","_this","openDialog","afterClosed","subscribe","i1$2","DialogService","Renderer2","ElementRef","inputs","outputs","ɵɵpureFunction1","_c0$1","_c2$1","pepperiIconRegistry","registerIcons","pepperiIconSystemEdit","pepperiIconSystemOk","pepperiIconSystemClose","PepperiColorModule","ɵɵinject","i1$1","PepperiIconRegistry","imports","CommonModule","ReactiveFormsModule","FormsModule","MatCommonModule","MatButtonModule","MatFormFieldModule","MatCheckboxModule","MatDialogModule","MatIconModule","MatSliderModule","PepperiModule","PepperiIconModule","PepperiFieldTitleModule","PepperiTextboxModule","declarations","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","const FLOAT_REGEX = /^\\d+(\\.\\d+)?$/;\r\nconst THREE_DIGIT_HEX_COLOR_REGEX = /^[0-9a-fA-F]{3}$/;\r\nconst THREE_DIGIT_HEX_COLOR_WITH_HASH_REGEX = /^#[0-9a-fA-F]{3}$/;\r\nconst SIX_DIGIT_HEX_COLOR_REGEX = /^[0-9a-fA-F]{6}$/;\r\nconst SIX_DIGIT_HEX_COLOR_WITH_HASH_REGEX = /^#[0-9a-fA-F]{6}$/;\r\n\r\nexport interface RgbColor {\r\n    r?: any;\r\n    g?: any;\r\n    b?: any;\r\n}\r\n\r\nexport interface HslColor {\r\n    h?: any;\r\n    s?: any;\r\n    l?: any;\r\n}\r\n\r\nexport interface ClosestColor {\r\n    color: string;\r\n    lightness: number;\r\n}\r\n\r\n/**\r\n * Convert hex string to 6 digits hex string.\r\n * @param str The string to convert.\r\n */\r\nexport function hex2sixDigitHex(str: string): string {\r\n    if (!str) {\r\n        return null;\r\n    }\r\n\r\n    str = str.trim();\r\n\r\n    if (SIX_DIGIT_HEX_COLOR_WITH_HASH_REGEX.test(str)) {\r\n        return str;\r\n    }\r\n\r\n    if (SIX_DIGIT_HEX_COLOR_REGEX.test(str)) {\r\n        return '#' + str;\r\n    }\r\n\r\n    if (THREE_DIGIT_HEX_COLOR_WITH_HASH_REGEX.test(str)) {\r\n        return '#' + str[1] + str[1] + str[2] + str[2] + str[3] + str[3];\r\n    }\r\n\r\n    if (THREE_DIGIT_HEX_COLOR_REGEX.test(str)) {\r\n        return '#' + str[0] + str[0] + str[1] + str[1] + str[2] + str[2];\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\n/**\r\n * Convert rgb color to 6 digits hex string.\r\n * @param color The rgb color to convert.\r\n */\r\nexport function rgb2sixDigitHex(color: RgbColor): string {\r\n    color.r = color.r.toString(16);\r\n    color.g = color.g.toString(16);\r\n    color.b = color.b.toString(16);\r\n\r\n    if (color.r.length === 1) {\r\n        color.r = '0' + color.r;\r\n    }\r\n\r\n    if (color.g.length === 1) {\r\n        color.g = '0' + color.g;\r\n    }\r\n\r\n    if (color.b.length === 1) {\r\n        color.b = '0' + color.b;\r\n    }\r\n\r\n    return '#' + color.r + color.g + color.b;\r\n}\r\n\r\n/**\r\n * Convert hex string to rgb color.\r\n * @param str The hex string to convert.\r\n */\r\nexport function hex2rgb(str: string): RgbColor {\r\n    const sixDigitHex = hex2sixDigitHex(str);\r\n\r\n    if (sixDigitHex === null) {\r\n        return null;\r\n    }\r\n\r\n    return {\r\n        r: parseInt(sixDigitHex.slice(1, 3), 16),\r\n        g: parseInt(sixDigitHex.slice(3, 5), 16),\r\n        b: parseInt(sixDigitHex.slice(5, 7), 16)\r\n    };\r\n}\r\n\r\nexport function rgbString2hsl(str: string): HslColor {\r\n    const sep = str.indexOf(',') > -1 ? ',' : ' ';\r\n    const rgbArr = str.substr(4).split(')')[0].split(sep);\r\n\r\n    const r = rgbArr[0];\r\n    const g = rgbArr[1].substr(0, rgbArr[1].length).trim();\r\n    const b = rgbArr[2].substr(0, rgbArr[2].length).trim();\r\n\r\n    return rgb2hsl({ r, g, b });\r\n}\r\n\r\nexport function rgb2hsl({ r, g, b }: RgbColor): HslColor {\r\n    r /= 255;\r\n    g /= 255;\r\n    b /= 255;\r\n\r\n    // Find greatest and smallest channel values\r\n    const cmin = Math.min(r, g, b);\r\n    const cmax = Math.max(r, g, b);\r\n    const delta = cmax - cmin;\r\n\r\n    let h = 0;\r\n    let s = 0;\r\n    let l = 0;\r\n\r\n    if (delta === 0) {\r\n        h = 0;\r\n    } else if (cmax === r) {\r\n        h = ((g - b) / delta) % 6;\r\n    } else if (cmax === g) {\r\n        h = (b - r) / delta + 2;\r\n    } else {\r\n        h = (r - g) / delta + 4;\r\n    }\r\n\r\n    h = Math.round(h * 60);\r\n\r\n    if (h < 0) {\r\n        h += 360;\r\n    }\r\n\r\n    l = (cmax + cmin) / 2;\r\n    s = delta === 0 ? 0 : delta / (1 - Math.abs(2 * l - 1));\r\n    s = +(s * 100).toFixed(1);\r\n    l = +(l * 100).toFixed(1);\r\n\r\n    return { h, s, l };\r\n}\r\n\r\nexport function hslString2hsl(str: string): HslColor {\r\n    const sep = str.indexOf(',') > -1 ? ',' : ' ';\r\n    const hslArr = str.substr(4).split(')')[0].split(sep);\r\n\r\n    let h: any = hslArr[0];\r\n    let s = hslArr[1].substr(0, hslArr[1].length).trim();\r\n    let l = hslArr[2].substr(0, hslArr[2].length).trim();\r\n\r\n    // Strip label and convert to degrees (if necessary)\r\n    if (h.indexOf('deg') > -1) {\r\n        h = h.substr(0, h.length - 3);\r\n    } else if (h.indexOf('rad') > -1) {\r\n        h = Math.round(h.substr(0, h.length - 3) * (180 / Math.PI));\r\n    } else if (h.indexOf('turn') > -1) {\r\n        h = Math.round(h.substr(0, h.length - 4) * 360);\r\n    }\r\n\r\n    // Keep hue fraction of 360 if ending up over\r\n    if (h >= 360) {\r\n        h %= 360;\r\n    }\r\n\r\n    // Remove the %\r\n    if (s.indexOf('%') > -1) {\r\n        s = s.replace(/%/g, '');\r\n    }\r\n\r\n    // Remove the %\r\n    if (l.indexOf('%') > -1) {\r\n        l = l.replace(/%/g, '');\r\n    }\r\n\r\n    return { h, s, l };\r\n}\r\n\r\nexport function hsl2rgb({ h, s, l }: HslColor): RgbColor {\r\n    let r;\r\n    let g;\r\n    let b;\r\n\r\n    if (!isFinite(h)) {\r\n        h = 0;\r\n    }\r\n\r\n    if (!isFinite(s)) {\r\n        s = 0;\r\n    }\r\n\r\n    if (!isFinite(l)) {\r\n        l = 0;\r\n    }\r\n\r\n    h /= 60;\r\n\r\n    if (h < 0) {\r\n        h = 6 - (-h % 6);\r\n    }\r\n\r\n    h %= 6;\r\n\r\n    s = Math.max(0, Math.min(1, s / 100));\r\n    l = Math.max(0, Math.min(1, l / 100));\r\n\r\n    const c = (1 - Math.abs((2 * l) - 1)) * s;\r\n    const x = c * (1 - Math.abs((h % 2) - 1));\r\n\r\n    if (h < 1) {\r\n        r = c;\r\n        g = x;\r\n        b = 0;\r\n    } else if (h < 2) {\r\n        r = x;\r\n        g = c;\r\n        b = 0;\r\n    } else if (h < 3) {\r\n        r = 0;\r\n        g = c;\r\n        b = x;\r\n    } else if (h < 4) {\r\n        r = 0;\r\n        g = x;\r\n        b = c;\r\n    } else if (h < 5) {\r\n        r = x;\r\n        g = 0;\r\n        b = c;\r\n    } else {\r\n        r = c;\r\n        g = 0;\r\n        b = x;\r\n    }\r\n\r\n    const m = l - c / 2;\r\n    r = Math.round((r + m) * 255);\r\n    g = Math.round((g + m) * 255);\r\n    b = Math.round((b + m) * 255);\r\n\r\n    return { r, g, b };\r\n}\r\n\r\nexport function hex2hsl(str: string): HslColor {\r\n    const sixDigitHex = hex2sixDigitHex(str);\r\n\r\n    if (sixDigitHex === null) {\r\n        return null;\r\n    }\r\n\r\n    const rgb = hex2rgb(sixDigitHex);\r\n\r\n    if (rgb === null) {\r\n        return null;\r\n    }\r\n\r\n    return rgb2hsl(rgb);\r\n}\r\n\r\nexport function hsl2hex(hsl: HslColor): string {\r\n    const rgb = hsl2rgb(hsl);\r\n\r\n    return rgb2sixDigitHex(rgb);\r\n}\r\n\r\nexport function relativeLuminance({ r, g, b }: RgbColor): number {\r\n    [r, g, b] = [r, g, b].map(c => {\r\n        c = c / 255;\r\n\r\n        if (c <= 0.03928) {\r\n            return c / 12.92;\r\n        }\r\n\r\n        return Math.pow((c + 0.055) / 1.055, 2.4);\r\n    });\r\n\r\n    return 0.2126 * r + 0.7152 * g + 0.0722 * b;\r\n}\r\n\r\nexport function contrast(str1: string, str2: string): number {\r\n    const L1 = relativeLuminance(hex2rgb(str1));\r\n    const L2 = relativeLuminance(hex2rgb(str2));\r\n\r\n    if (L1 < L2) {\r\n        return (L2 + 0.05) / (L1 + 0.05);\r\n    }\r\n\r\n    return (L1 + 0.05) / (L2 + 0.05);\r\n}\r\n\r\nexport function findClosestAccessibleDarkerColor(\r\n    adjustableColor: string, otherColor: string, contrastRatio: number): ClosestColor {\r\n    let { h, s, l } = hex2hsl(adjustableColor);\r\n\r\n    if (contrast(adjustableColor, otherColor) >= contrastRatio) {\r\n        return {\r\n            color: adjustableColor,\r\n            lightness: l\r\n        };\r\n    }\r\n\r\n    let minColor = hsl2hex({ h, s, l: 0 });\r\n\r\n    if (contrast(minColor, otherColor) < contrastRatio) {\r\n        return null;\r\n    }\r\n\r\n    let min = 0;\r\n    let max = l;\r\n    let maxColor = hsl2hex({ h, s, l });\r\n    let lastMinColor;\r\n    let lastMaxColor;\r\n\r\n    while (minColor !== lastMinColor || maxColor !== lastMaxColor) {\r\n        lastMinColor = minColor;\r\n        lastMaxColor = maxColor;\r\n\r\n        l = (min + max) / 2;\r\n        adjustableColor = hsl2hex({ h, s, l });\r\n\r\n        if (contrast(adjustableColor, otherColor) < contrastRatio) {\r\n            max = l;\r\n            maxColor = hsl2hex({ h, s, l });\r\n        } else {\r\n            min = l;\r\n            minColor = hsl2hex({ h, s, l });\r\n        }\r\n    }\r\n\r\n    return {\r\n        color: minColor,\r\n        lightness: min\r\n    };\r\n}\r\n\r\nexport function findClosestAccessibleLighterColor(\r\n    adjustableColor: string, otherColor: string, contrastRatio: number): ClosestColor {\r\n    let { h, s, l } = hex2hsl(adjustableColor);\r\n\r\n    if (contrast(adjustableColor, otherColor) >= contrastRatio) {\r\n        return {\r\n            color: adjustableColor,\r\n            lightness: l\r\n        };\r\n    }\r\n\r\n    let maxColor = hsl2hex({ h, s, l: 100 });\r\n\r\n    if (contrast(maxColor, otherColor) < contrastRatio) {\r\n        return null;\r\n    }\r\n\r\n    let min = l;\r\n    let max = 100;\r\n    let minColor = hsl2hex({ h, s, l });\r\n    let lastMinColor;\r\n    let lastMaxColor;\r\n\r\n    while (minColor !== lastMinColor || maxColor !== lastMaxColor) {\r\n        lastMinColor = minColor;\r\n        lastMaxColor = maxColor;\r\n\r\n        l = (min + max) / 2;\r\n        adjustableColor = hsl2hex({ h, s, l });\r\n\r\n        if (contrast(adjustableColor, otherColor) < contrastRatio) {\r\n            min = l;\r\n            minColor = hsl2hex({ h, s, l });\r\n        } else {\r\n            max = l;\r\n            maxColor = hsl2hex({ h, s, l });\r\n        }\r\n    }\r\n\r\n    return {\r\n        color: maxColor,\r\n        lightness: max\r\n    };\r\n}\r\n\r\nexport function findClosestAccessibleColor(\r\n    adjustableColor: string, otherColor: string, contrastRatio: number): string {\r\n    const closestDarkerColor: ClosestColor =\r\n        findClosestAccessibleDarkerColor(adjustableColor, otherColor, contrastRatio);\r\n    const closestLighterColor: ClosestColor =\r\n        findClosestAccessibleLighterColor(adjustableColor, otherColor, contrastRatio);\r\n\r\n    if (closestDarkerColor === null) {\r\n        if (closestLighterColor === null) {\r\n            return null;\r\n        }\r\n\r\n        return closestLighterColor.color;\r\n    }\r\n\r\n    if (closestLighterColor === null) {\r\n        return closestDarkerColor.color;\r\n    }\r\n\r\n    const { l } = hex2hsl(adjustableColor);\r\n\r\n    if (closestLighterColor.lightness - l < l - closestDarkerColor.lightness) {\r\n        return closestLighterColor.color;\r\n    }\r\n\r\n    return closestDarkerColor.color;\r\n}\r\n\r\nexport function convertHslToStringHsl(hsl: HslColor): string {\r\n    return 'hsl(' + (hsl.h < 0 ? hsl.h + 360 : hsl.h) + ', ' + hsl.s + '%, ' + hsl.l + '%)';\r\n}\r\n","\r\nexport enum PepColorType {\r\n    AnyColor,\r\n    MainColor,\r\n    SuccessColor,\r\n    CautionColor\r\n}","<div class=\"pepperi-color-picker-container\">\r\n\r\n    <h2 mat-dialog-title class=\"pepperi-border-bottom\">\r\n        <span class=\"pull-left flip\">{{ 'COLOR.DIALOG_TITLE' | translate }}</span>\r\n        <button mat-button [mat-dialog-close]=\"null\" class=\"pepperi-button icon-button md weak pull-right flip\">\r\n            <mat-icon>\r\n                <pep-icon name=\"system_close\">\r\n                </pep-icon>\r\n            </mat-icon>\r\n        </button>\r\n    </h2>\r\n\r\n    <div mat-dialog-content>\r\n        <div class=\"color-chooser-content\">\r\n            <div class=\"current-color\" [ngStyle]=\"{ 'background': data?.value ? data.value : 'transparent' }\"></div>\r\n\r\n            <div class=\"slider-box\">\r\n                <mat-label class=\"body-xs \">{{ 'COLOR.CHANGE_HUE' | translate}}</mat-label>\r\n                <div class=\"current-hue\" [ngClass]=\"{\r\n                    'main': data?.type === PepColorType.MainColor,\r\n                    'success': data?.type === PepColorType.SuccessColor,\r\n                    'caution': data?.type === PepColorType.CautionColor }\">\r\n                    <mat-slider [min]=\"currentHueMin\" [max]=\"currentHueMax\" step=\"1\" [value]=\"currentHue\"\r\n                        (change)=\"onHueChange($event)\"></mat-slider>\r\n                </div>\r\n            </div>\r\n            <div class=\"slider-box\">\r\n                <mat-label class=\"body-xs \">{{ 'COLOR.CHANGE_SATURATION' | translate}}</mat-label>\r\n                <div class=\"current-saturation\" [ngClass]=\"{\r\n                    'main': data?.type === PepColorType.MainColor,\r\n                    'success': data?.type === PepColorType.SuccessColor,\r\n                    'caution': data?.type === PepColorType.CautionColor }\">\r\n                    <mat-slider [min]=\"currentSaturationMin\" [max]=\"currentSaturationMax\" step=\"1\"\r\n                        [value]=\"currentSaturation\" (change)=\"onSaturationChange($event)\"></mat-slider>\r\n                </div>\r\n            </div>\r\n            <div class=\"slider-box\">\r\n                <mat-label class=\"body-xs \">{{ 'COLOR.CHANGE_LIGHTNESS' | translate}}</mat-label>\r\n                <div class=\"current-lightness\" [ngClass]=\"{\r\n                    'main': data?.type === PepColorType.MainColor,\r\n                    'success': data?.type === PepColorType.SuccessColor,\r\n                    'caution': data?.type === PepColorType.CautionColor }\">\r\n                    <mat-slider [min]=\"currentLightnessMin\" [max]=\"currentLightnessMax\" step=\"1\"\r\n                        [value]=\"currentLightnessMax - currentLightness + currentLightnessMin\"\r\n                        (change)=\"onLightnessChange($event)\"></mat-slider>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"color-value-content\">\r\n            <div class=\"color-value\" [ngClass]=\"{ 'with-complient': checkAAComplient }\">\r\n                <pep-textbox [key]=\"'colorValue'\" [label]=\"'COLOR.ADD_VALUE_HERE' | translate \"\r\n                    [formattedValue]=\"data?.value\" [value]=\"data?.value\" (valueChanged)=\"onColorValueChange($event)\">\r\n                </pep-textbox>\r\n            </div>\r\n            <div *ngIf=\"checkAAComplient\" class=\"color-complient-container\">\r\n                <pep-field-title [label]=\"'COLOR.AA_COMPLIENT' | translate \">\r\n                </pep-field-title>\r\n                <div class=\"color-complient\" [ngStyle]=\"{ 'background': complientColor }\">\r\n                    <mat-icon *ngIf=\"isUserChooseAAComplientColor\">\r\n                        <pep-icon name=\"system_ok\">\r\n                        </pep-icon>\r\n                    </mat-icon>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div mat-dialog-actions class=\"pepperi-border-top split-actions \">\r\n        <div>\r\n            <mat-checkbox *ngIf=\"data.showAAComplient\" type=\"checkbox\" id=\"checkAAComplient\"\r\n                (change)=\"checkAAComplient = !checkAAComplient\" [checked]=\"checkAAComplient\">\r\n                <span class=\"body-xs ellipsis\">{{ 'COLOR.AA_COMPLIENT' | translate }}</span>\r\n            </mat-checkbox>\r\n        </div>\r\n        <div class=\"spacing-element-negative\">\r\n            <button mat-button [mat-dialog-close]=\"null\" class=\"spacing-element pepperi-button cancel-btn md weak\">\r\n                {{'ACTIONS.CANCEL' | translate}}\r\n            </button>\r\n            <button mat-button class=\"spacing-element pepperi-button save-btn md strong\" (click)=\"onSave($event)\">\r\n                {{'ACTIONS.OK' | translate}}\r\n            </button>\r\n        </div>\r\n    </div>\r\n\r\n</div>","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { hex2hsl, hslString2hsl, rgbString2hsl, HslColor, findClosestAccessibleColor, hsl2hex, convertHslToStringHsl } from './color-utils';\r\nimport { PepColorType } from './color.model';\r\n\r\nexport enum ContrastRatioType {\r\n    AA = 4.5,\r\n    AAA = 7\r\n}\r\n\r\nexport interface ColorPickerDialogData {\r\n    value: string;\r\n    type: PepColorType;\r\n    showAAComplient: boolean;\r\n    textColor: string;\r\n    contrastRatio: ContrastRatioType;\r\n}\r\n\r\n@Component({\r\n    templateUrl: './color-picker.component.html',\r\n    styleUrls: ['./color-picker.component.scss']\r\n})\r\nexport class PepperiColorPickerComponent implements OnInit {\r\n\r\n    static CURRENT_HUE = '--pep-color-picker-current-hue';\r\n\r\n    PepColorType = PepColorType;\r\n    checkAAComplient = true;\r\n\r\n    constructor(\r\n        private dialogRef: MatDialogRef<PepperiColorPickerComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: ColorPickerDialogData\r\n    ) {\r\n        this.data.type = data ? data.type : PepColorType.AnyColor;\r\n        this.data.showAAComplient = data && data.showAAComplient === undefined ? true : (data ? data.showAAComplient : false);\r\n        this.data.textColor = data && data.textColor ? data.textColor : '#fff';\r\n        this.data.contrastRatio = data && data.contrastRatio ? data.contrastRatio : ContrastRatioType.AA;\r\n    }\r\n\r\n    currentHue = 100;\r\n    currentHueMin = 0;\r\n    currentHueMax = 360;\r\n\r\n    currentSaturation = 50;\r\n    currentSaturationMin = 0;\r\n    currentSaturationMax = 100;\r\n\r\n    currentLightness = 50;\r\n    currentLightnessMin = 0;\r\n    currentLightnessMax = 100;\r\n\r\n    complientColor: string;\r\n    isUserChooseAAComplientColor: boolean;\r\n\r\n    ngOnInit(): void {\r\n        this.initVars();\r\n        this.checkAAComplient = this.data.showAAComplient;\r\n        this.convertValueStringToColor(this.data.value);\r\n    }\r\n\r\n    initVars(): void {\r\n        if (this.data.type === PepColorType.MainColor) {\r\n            this.currentLightnessMax = 10;\r\n            this.currentLightness = 5;\r\n        } else if (this.data.type === PepColorType.SuccessColor) {\r\n            this.currentHueMin = 70;\r\n            this.currentHueMax = 150;\r\n            this.currentHue = 100;\r\n\r\n            this.currentSaturationMin = 50;\r\n            this.currentSaturationMax = 100;\r\n            this.currentSaturation = 50;\r\n\r\n            this.currentLightnessMin = 10;\r\n            this.currentLightnessMax = 65;\r\n            this.currentLightness = 50;\r\n        } else if (this.data.type === PepColorType.CautionColor) {\r\n            this.currentHueMin = -20;\r\n            this.currentHueMax = 20;\r\n            this.currentHue = 10;\r\n\r\n            this.currentSaturationMin = 75;\r\n            this.currentSaturationMax = 100;\r\n            this.currentSaturation = 75;\r\n\r\n            this.currentLightnessMin = 25;\r\n            this.currentLightnessMax = 75;\r\n            this.currentLightness = 50;\r\n        }\r\n    }\r\n\r\n    setCurrentHueInCss(): void {\r\n        document.documentElement.style.setProperty(PepperiColorPickerComponent.CURRENT_HUE, this.currentHue.toString());\r\n    }\r\n\r\n    convertValueStringToColor(color): void {\r\n        if (color.indexOf('hsl') === 0) {\r\n            const hsl = hslString2hsl(color);\r\n            this.convertColorToValueString(hsl);\r\n        } else if (color.indexOf('rgb') === 0) {\r\n            const hsl = rgbString2hsl(color);\r\n            this.convertColorToValueString(hsl);\r\n        } else if (color.indexOf('#') === 0) {\r\n            const hsl = hex2hsl(color);\r\n            this.convertColorToValueString(hsl);\r\n        } else {\r\n            // Handle other colors.\r\n        }\r\n\r\n        this.setCurrentHueInCss();\r\n    }\r\n\r\n    convertColorToValueString(hslColor: HslColor): void {\r\n        // Regular hue\r\n        if (hslColor.h >= this.currentHueMin && hslColor.h <= this.currentHueMax) {\r\n            this.currentHue = hslColor.h;\r\n        } else if (this.currentHueMin < 0 && hslColor.h >= 0 && hslColor.h <= 360) {\r\n            // For min with - (change to the other side of the circle)\r\n            hslColor.h = hslColor.h - 360;\r\n\r\n            if (hslColor.h >= this.currentHueMin && hslColor.h <= this.currentHueMax) {\r\n                this.currentHue = hslColor.h;\r\n            }\r\n        }\r\n\r\n        this.currentSaturation =\r\n            (hslColor.s >= this.currentSaturationMin &&\r\n             hslColor.s <= this.currentSaturationMax) ?\r\n                hslColor.s : this.currentSaturation;\r\n\r\n        this.currentLightness =\r\n            (hslColor.l >= this.currentLightnessMin &&\r\n             hslColor.l <= this.currentLightnessMax) ?\r\n                hslColor.l : this.currentLightness;\r\n\r\n        // Write the value (if hue is changed to the other side of the circle return it back).\r\n        const hsl = { h: this.currentHue, s: this.currentSaturation, l: this.currentLightness };\r\n        this.data.value = convertHslToStringHsl(hsl);\r\n\r\n        // Check the contrast ratio - set the closest accessible color to complientColor\r\n        // and update isUserChooseAAComplientColor.\r\n        const adjustableColor = hsl2hex(hsl);\r\n        const closestHex = findClosestAccessibleColor(adjustableColor, this.data.textColor, this.data.contrastRatio);\r\n\r\n        this.isUserChooseAAComplientColor = adjustableColor === closestHex;\r\n        this.complientColor = convertHslToStringHsl(hex2hsl(closestHex));\r\n    }\r\n\r\n    onHueChange(event): void {\r\n        this.convertColorToValueString({ h: event.value });\r\n        this.setCurrentHueInCss();\r\n    }\r\n\r\n    onSaturationChange(event): void {\r\n        // this.currentSaturation = event.value;\r\n        this.convertColorToValueString({ s: event.value });\r\n    }\r\n\r\n    onLightnessChange(event): void {\r\n        // this.currentLightness = event.value;\r\n        this.convertColorToValueString({ l: this.currentLightnessMax - event.value + this.currentLightnessMin });\r\n    }\r\n\r\n    onColorValueChange(event): void {\r\n        this.convertValueStringToColor(event.value);\r\n    }\r\n\r\n    onSave(event): void {\r\n        const color = this.checkAAComplient ? this.complientColor : this.data.value;\r\n\r\n        // this.notify.emit({ key: this.key, value: color });\r\n        this.dialogRef.close(color);\r\n    }\r\n\r\n}\r\n","<pep-field-title [label]=\"label\" [disabled]=\"disabled\" [xAlignment]=\"xAlignment\" [showTitle]=\"showTitle\">\r\n</pep-field-title>\r\n<div [id]=\"key\" class=\"pepperi-color-container\" [ngClass]=\"{ 'right-alignment': xAlignment == '2' }\">\r\n    <div pepRtlDirection (click)=\"chooseColor()\" class=\"pepperi-color pepperi-input\"\r\n        [ngClass]=\"{disable: disabled, 'one-row': rowSpan === 1}\"\r\n        [ngStyle]=\"{ 'background':  value ? value : 'transparent' }\">\r\n        <button *ngIf=\"!disabled\" class=\"pepperi-button icon-button xs weak invert mat-button btn-edit\" tabindex=\"-1\"\r\n            pepButtonBlur mat-button>\r\n            <mat-icon>\r\n                <pep-icon name=\"system_edit\"></pep-icon>\r\n            </mat-icon>\r\n        </button>\r\n    </div>\r\n</div>","import { Component, OnInit, Input, Output, Renderer2, ElementRef, EventEmitter, OnChanges, OnDestroy } from '@angular/core';\r\nimport { CustomizationService, LAYOUT_TYPE } from '@pepperi-addons/ngx-lib';\r\nimport { DialogService } from '@pepperi-addons/ngx-lib/dialog';\r\n\r\nimport { PepperiColorPickerComponent } from './color-picker.component';\r\nimport { PepColorType } from './color.model';\r\n\r\n@Component({\r\n    selector: 'pep-color',\r\n    templateUrl: './color.component.html',\r\n    styleUrls: ['./color.component.scss']\r\n})\r\nexport class PepperiColorComponent implements OnInit, OnDestroy {\r\n    @Input() key = '';\r\n    @Input() value = '';\r\n    @Input() label = '';\r\n    @Input() disabled = false;\r\n    @Input() readonly = false;\r\n    @Input() xAlignment = '0';\r\n    @Input() rowSpan = 1;\r\n    @Input() type: PepColorType = PepColorType.AnyColor;\r\n\r\n    @Input() showTitle = true;\r\n    @Input() showAAComplient = true;\r\n    @Input() layoutType: LAYOUT_TYPE = LAYOUT_TYPE.PepperiForm;\r\n\r\n    @Output() valueChanged: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    LAYOUT_TYPE = LAYOUT_TYPE;\r\n\r\n    constructor(\r\n        private dialogService: DialogService,\r\n        private renderer: Renderer2,\r\n        private element: ElementRef\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.renderer.addClass(this.element.nativeElement, CustomizationService.STAND_ALONE_FIELD_CLASS_NAME);\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        if (this.valueChanged) {\r\n            this.valueChanged.unsubscribe();\r\n        }\r\n    }\r\n\r\n    changeColor(value: any): void {\r\n        this.value = value;\r\n        this.valueChanged.emit({ apiName: this.key, value });\r\n    }\r\n\r\n    chooseColor(): void {\r\n        const dialogRef = this.dialogService.openDialog(\r\n            PepperiColorPickerComponent,\r\n            { value: this.value, type: this.type, showAAComplient: this.showAAComplient });\r\n\r\n        dialogRef.afterClosed().subscribe(value => {\r\n            if (value !== undefined && value !== null) {\r\n                this.changeColor(value);\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\n\r\nimport { MatCommonModule } from '@angular/material/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\n\r\nimport { PepperiModule } from '@pepperi-addons/ngx-lib';\r\nimport {\r\n    PepperiIconModule,\r\n    PepperiIconRegistry,\r\n    pepperiIconSystemEdit,\r\n    pepperiIconSystemOk,\r\n    pepperiIconSystemClose } from '@pepperi-addons/ngx-lib/icon';\r\nimport { PepperiFieldTitleModule } from '@pepperi-addons/ngx-lib/field-title';\r\nimport { PepperiTextboxModule } from '@pepperi-addons/ngx-lib/textbox';\r\n\r\nimport { PepperiColorComponent } from './color.component';\r\nimport { PepperiColorPickerComponent } from './color-picker.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        ReactiveFormsModule,\r\n        FormsModule,\r\n        // Material modules\r\n        MatCommonModule,\r\n        MatButtonModule,\r\n        MatFormFieldModule,\r\n        MatCheckboxModule,\r\n        MatDialogModule,\r\n        MatIconModule,\r\n        MatSliderModule,\r\n        // Pepperi modules\r\n        PepperiModule,\r\n        PepperiIconModule,\r\n        PepperiFieldTitleModule,\r\n        PepperiTextboxModule\r\n    ],\r\n    exports: [ PepperiColorComponent ],\r\n    declarations: [ PepperiColorComponent, PepperiColorPickerComponent ],\r\n})\r\nexport class PepperiColorModule {\r\n    constructor(private pepperiIconRegistry: PepperiIconRegistry) {\r\n        this.pepperiIconRegistry.registerIcons([\r\n            pepperiIconSystemEdit,\r\n            pepperiIconSystemOk,\r\n            pepperiIconSystemClose\r\n        ]);\r\n    }\r\n}\r\n"]}