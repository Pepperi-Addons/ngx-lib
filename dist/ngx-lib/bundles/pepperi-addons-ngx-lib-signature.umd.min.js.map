{"version":3,"sources":["../../../projects/ngx-lib/signature/signature.component.html","../../../projects/ngx-lib/signature/signature.component.ts","../../../projects/ngx-lib/signature/signature.module.ts"],"names":["i0.ɵɵelementContainer","i0.ɵɵelementStart","i0.ɵɵlistener","i0.ɵɵelement","i0.ɵɵelementEnd","i0.ɵɵproperty","i0.ɵɵtemplate","i0.ɵɵadvance","i0.ɵɵstyleProp","ctx_r11","label","i0","ɵɵpureFunction1","_c3","xAlignment","i0.ɵɵtext","i0.ɵɵtextInterpolate1","$event","ɵɵrestoreView","_r21_1","ɵɵnextContext","onKeyPress_OpenSignModal","_r10","_r12","ctx_r1","key","src","disabled","required","length","ɵɵpipeBind2","_c5","i0.ɵɵelementContainerStart","i0.ɵɵelementContainerEnd","ctx_r2","showTitle","ɵɵpureFunction0","_c8","_r25","_r27","_c9","_r32","_r34","ctx_r44","ctx_r45","_r40","_r42","ctx_r54","signatureURL","_r59_1","drawComplete","i0.ɵɵtextInterpolate","PepperiSignatureComponent","dialogService","customizationService","fileService","cd","renderer","element","this","readonly","rowSpan","controlType","form","layoutType","LAYOUT_TYPE","PepperiForm","isActive","valueChanged","EventEmitter","fieldHeight","standAlone","dataURI","showActionBtn","isVisibleModal","acceptSignatureType","signaturePadOptions","minWidth","canvasWidth","canvasHeight","penColor","prototype","ngOnInit","getDefaultFromGroup","addClass","nativeElement","CustomizationService","STAND_ALONE_FIELD_CLASS_NAME","calculateFieldHeight","ngOnChanges","changes","currentValue","ngOnDestroy","unsubscribe","drawStart","openSignModal","fileStrArr","fileStr","split","win","window","open","contentType","base64","blob","convertFromb64toBlob","url","URL","createObjectURL","location","href","openSignatoreDlg","_this","openDialog","signaturePopupPad","afterOpened","subscribe","afterDialogOpened","signaturePad","fromDataURL","off","clearSignModal","clear","on","deleteSignature","event","changeValue","detectChanges","saveSignModal","isEmpty","toDataURL","fileValue","JSON","stringify","acceptedExtensions","fileExt","errorHandler","value","lastFocusedField","parse","updateFormFieldValue","emit","apiName","e","indexOf","which","preventDefault","ɵɵdirectiveInject","i1$1","DialogService","i2","FileService","ChangeDetectorRef","Renderer2","ElementRef","selectors","viewQuery","rf","ctx","TemplateRef","pepperiIconRegistry","registerIcons","pepperiIconSystemBin","pepperiIconSystemSignature","pepperiIconSystemClose","PepperiSignatureModule","ɵɵinject","i1","PepperiIconRegistry","imports","CommonModule","ReactiveFormsModule","FormsModule","MatCommonModule","MatButtonModule","MatFormFieldModule","MatInputModule","MatIconModule","MatDialogModule","SignaturePadModule","PepperiModule","PepperiIconModule","PepperiFieldTitleModule","PepperiFilesUploaderModule","PepperiDialogModule","declarations","exports"],"mappings":"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","sourcesContent":["<ng-container [formGroup]=\"form\">\r\n    <!-- New code -->\r\n    <ng-container>\r\n        <ng-template #pepperiTemplate>\r\n            <mat-form-field [formGroup]=\"form\" appearance=\"outline\">\r\n                <div class=\"pepperi-file-wrapper\">\r\n                    <div class=\"pepperi-file body-sm\" [ngClass]=\"{ disable: disabled }\" [style.height]=\"fieldHeight\">\r\n                        <ng-container *ngIf=\"src != ''; then withImg; else noImg\"></ng-container>\r\n                        <ng-template #withImg>\r\n                            <button *ngIf=\"!disabled\" mat-button (click)=\"deleteSignature($event)\"\r\n                                class=\"pepperi-button icon-button weak md delete\" tabindex=\"-1\"\r\n                                [ngClass]=\"{ 'right-alignment': xAlignment == '2' }\">\r\n                                <mat-icon>\r\n                                    <pep-icon name=\"system_bin\">\r\n                                    </pep-icon>\r\n                                </mat-icon>\r\n                            </button>\r\n                            <div class=\"pepperi-file-preview\" (click)=\"openSignModal()\">\r\n                                <img [src]=\"src\" [style.max-height]=\"fieldHeight\" class=\"pepperi-file-preview-img\"\r\n                                    (error)=\"errorHandler($event)\" [alt]=\"label\"\r\n                                    [ngClass]=\"['text-align-' + xAlignment]\" />\r\n                            </div>\r\n                        </ng-template>\r\n                        <ng-template #noImg>\r\n                            <div class=\"ellipsis pepperi-file-message\">\r\n                                <pep-icon name=\"system_signature\">\r\n                                </pep-icon>\r\n                                <span class=\"body-sm ellipsis\">\r\n                                    {{ (disabled ? 'MESSAGES.INFO_MISSING_SIGNATURE' : 'SIGNATURE.HINT') | translate }}\r\n                                </span>\r\n                            </div>\r\n                        </ng-template>\r\n                    </div>\r\n                    <input [id]=\"key\" matInput [formControlName]=\"key\" class=\"hidden-input signature\" type=\"text\"\r\n                        [value]=\"src\" [disabled]=\"disabled\" (click)=\"openSignModal()\"\r\n                        (keypress)=\"onKeyPress_OpenSignModal($event)\" autocomplete=\"off\" readonly />\r\n                </div>\r\n\r\n                <mat-error><span class=\"body-xs\"\r\n                        [title]=\"required && src.length == 0 ? ('MESSAGES.ERROR_IS_REQUIRED' | translate: { field: label }) : ('MESSAGES.ERROR_IS_NOT_VALID' | translate: { field: label })\"\r\n                        [innerText]=\"required && src.length == 0 ? ('MESSAGES.ERROR_IS_REQUIRED' | translate: { field: label }) : ('MESSAGES.ERROR_IS_NOT_VALID' | translate: { field: label })\"></span>\r\n                </mat-error>\r\n            </mat-form-field>\r\n        </ng-template>\r\n\r\n        <ng-container *ngIf=\"layoutType === LAYOUT_TYPE.PepperiForm\">\r\n            <div class=\"pepperi-file-container\" [ngClass]=\"{ 'one-row': rowSpan == 1, 'stand-alone': standAlone}\">\r\n                <pep-field-title [label]=\"label\" [required]=\"required\" [disabled]=\"disabled\" [xAlignment]=\"xAlignment\"\r\n                    [showTitle]=\"showTitle\">\r\n                </pep-field-title>\r\n                <ng-container *ngTemplateOutlet=\"pepperiTemplate\"></ng-container>\r\n            </div>\r\n        </ng-container>\r\n\r\n        <ng-container *ngIf=\"layoutType === LAYOUT_TYPE.PepperiCard\">\r\n            <ng-container *ngIf=\"false && isActive && !disabled; then selectedBlock; else notSelectedBlock\">\r\n            </ng-container>\r\n            <ng-template #selectedBlock>\r\n                <div class=\"pepperi-file-container\" [ngClass]=\"{ 'one-row': rowSpan == 1}\">\r\n                    <ng-container *ngTemplateOutlet=\"pepperiTemplate\"></ng-container>\r\n                </div>\r\n            </ng-template>\r\n            <ng-template #notSelectedBlock>\r\n                <div class=\"pepperi-file-container\" [ngClass]=\"{ 'one-row': rowSpan == 1 }\">\r\n                    <ng-container *ngTemplateOutlet=\"pepperiReadonlyTemplate; context: { isTableView: false}\">\r\n                    </ng-container>\r\n                </div>\r\n            </ng-template>\r\n        </ng-container>\r\n\r\n        <ng-container *ngIf=\"layoutType === LAYOUT_TYPE.PepperiTable\">\r\n            <ng-container *ngIf=\"false && isActive && !disabled; then selectedBlock; else notSelectedBlock\">\r\n            </ng-container>\r\n            <ng-template #selectedBlock>\r\n                <div class=\"pepperi-file-container one-row\">\r\n                    <ng-container *ngTemplateOutlet=\"pepperiTemplate\"></ng-container>\r\n                </div>\r\n            </ng-template>\r\n            <ng-template #notSelectedBlock>\r\n                <div class=\"pepperi-file-container one-row\">\r\n                    <ng-container *ngTemplateOutlet=\"pepperiReadonlyTemplate; context: { isTableView: true}\">\r\n                    </ng-container>\r\n                </div>\r\n            </ng-template>\r\n        </ng-container>\r\n    </ng-container>\r\n\r\n    <!-- <ng-container *ngIf=\"inDialog === true\">\r\n        <ng-container *ngTemplateOutlet=\"signaturePopupPad\"></ng-container>\r\n    </ng-container> -->\r\n\r\n    <!-- <div *ngIf=\"inDialog === false\" class=\"signature-backdrop modal\" [ngClass]=\"{ fade: !isVisibleModal }\" tabindex=\"-1\"\r\n        role=\"dialog\" aria-labelledby=\"gridModalLabel\" aria-hidden=\"true\"\r\n        [ngStyle]=\"{ display: isVisibleModal ? 'block' : 'none' }\">\r\n        <div class=\"signature-modal modal-dialog\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n                <ng-container *ngTemplateOutlet=\"signaturePopupPad\"></ng-container>\r\n            </div>\r\n        </div>\r\n    </div> -->\r\n\r\n    <ng-template #pepperiReadonlyTemplate let-isTableView=\"isTableView\">\r\n        <div class=\"pepperi-file-container\">\r\n            <div class=\"pepperi-file-wrapper\">\r\n                <div class=\"pepperi-file body-sm disable\">\r\n                    <ng-container *ngIf=\"src != ''; then withImg; else noImg\"></ng-container>\r\n                    <ng-template #withImg>\r\n                        <div class=\"pepperi-file-preview\" (click)=\"openSignModal()\">\r\n                            <img *ngIf=\"!isTableView\" [src]=\"src\" [style.max-height]=\"fieldHeight\"\r\n                                class=\"pepperi-file-preview-img\" (error)=\"errorHandler($event)\" [alt]=\"label\"\r\n                                [ngClass]=\"['text-align-' + xAlignment]\" />\r\n                            <img *ngIf=\"isTableView\" [src]=\"src\" [style.max-height]=\"fieldHeight\"\r\n                                class=\"pepperi-report-file pepperi-file-preview-img\" (error)=\"errorHandler($event)\"\r\n                                [alt]=\"label\" [ngClass]=\"['text-align-' + xAlignment]\" />\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template #noImg></ng-template>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </ng-template>\r\n\r\n    <ng-template #signaturePopupPad>\r\n        <h2 mat-dialog-title class=\"pepperi-border-bottom\">\r\n            <span class=\"pull-left flip ellipsis\">{{ 'SIGNATURE.DIALOG_TITLE' | translate }}</span>\r\n            <button mat-button [mat-dialog-close]=\"null\" class=\"pepperi-button icon-button md weak pull-right flip\">\r\n                <mat-icon>\r\n                    <pep-icon name=\"system_close\">\r\n                    </pep-icon>\r\n                </mat-icon>\r\n            </button>\r\n        </h2>\r\n        <div mat-dialog-content>\r\n            <signature-pad #signaturePad [options]=\"signaturePadOptions\" (onBeginEvent)=\"drawStart()\"\r\n                (onEndEvent)=\"drawComplete()\">\r\n            </signature-pad>\r\n        </div>\r\n        <div mat-dialog-actions *ngIf=\"showActionBtn\" class=\" pepperi-border-top\">\r\n            <div class=\"spacing-element-negative\">\r\n                <button mat-button class=\"spacing-element pepperi-button md strong pull-right flip\"\r\n                    [disabled]=\"!showActionBtn || readonly || disabled\" (click)=\"saveSignModal($event)\"\r\n                    [mat-dialog-close]=\"signatureURL\">\r\n                    {{ 'ACTIONS.DONE' | translate }}\r\n                </button>\r\n                <button mat-button class=\"spacing-element pepperi-button md weak pull-right flip\"\r\n                    [disabled]=\"!showActionBtn || readonly || disabled\" (click)=\"clearSignModal()\">\r\n                    {{ 'ACTIONS.CLEAR' | translate }}\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </ng-template>\r\n\r\n</ng-container>","import {\r\n    Component, OnInit, OnDestroy, ViewChild, Input, Output, EventEmitter, ChangeDetectorRef,\r\n    ChangeDetectionStrategy, OnChanges, ElementRef, Renderer2, TemplateRef\r\n} from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { SignaturePad } from 'angular2-signaturepad/signature-pad';\r\nimport { FileService, LAYOUT_TYPE, CustomizationService } from '@pepperi-addons/ngx-lib';\r\nimport { DialogService } from '@pepperi-addons/ngx-lib/dialog';\r\n\r\n@Component({\r\n    selector: 'pep-signature',\r\n    styleUrls: ['./signature.component.scss'],\r\n    templateUrl: './signature.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PepperiSignatureComponent implements OnInit, OnChanges, OnDestroy {\r\n    @Input() key = '';\r\n    @Input() src = '';\r\n    @Input() label = '';\r\n    @Input() required = false;\r\n    @Input() disabled = false;\r\n    @Input() readonly = false;\r\n    @Input() xAlignment = '0';\r\n    @Input() rowSpan = 1;\r\n    @Input() signatureURL = '';\r\n    // @Input() inDialog = false;\r\n\r\n    controlType = 'signature';\r\n\r\n    @Input() form: FormGroup = null;\r\n    @Input() showTitle = true;\r\n    @Input() layoutType: LAYOUT_TYPE = LAYOUT_TYPE.PepperiForm;\r\n    @Input() isActive = false;\r\n\r\n    @Output() valueChanged: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    @ViewChild('signaturePad') signaturePad: SignaturePad;\r\n    @ViewChild('signaturePopupPad', { read: TemplateRef }) signaturePopupPad: TemplateRef<any>;\r\n\r\n    LAYOUT_TYPE = LAYOUT_TYPE;\r\n    fieldHeight = '';\r\n    standAlone = false;\r\n    dataURI = null;\r\n    showActionBtn = true;\r\n\r\n    public isVisibleModal = false;\r\n    acceptSignatureType = 'png';\r\n\r\n    public signaturePadOptions: any = {\r\n        // passed through to szimek/signature_pad constructor\r\n        minWidth: 2,\r\n        canvasWidth: 500,\r\n        canvasHeight: 300,\r\n        penColor: 'rgb(151, 151, 151)'\r\n    };\r\n\r\n    constructor(\r\n        private dialogService: DialogService,\r\n        private customizationService: CustomizationService,\r\n        private fileService: FileService,\r\n        private cd: ChangeDetectorRef,\r\n        private renderer: Renderer2,\r\n        private element: ElementRef) {\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        if (this.form === null) {\r\n            this.standAlone = true;\r\n            this.form = this.customizationService.getDefaultFromGroup(this.key, this.src, this.required, this.readonly, this.disabled);\r\n\r\n            this.renderer.addClass(this.element.nativeElement, CustomizationService.STAND_ALONE_FIELD_CLASS_NAME);\r\n        }\r\n\r\n        this.fieldHeight = this.customizationService.calculateFieldHeight(this.layoutType, this.rowSpan, this.standAlone);\r\n    }\r\n\r\n    ngOnChanges(changes: any): void {\r\n        if (changes.src && changes.src.currentValue.length > 0) {\r\n            // Empty dataURI if there is change in the src.\r\n            this.dataURI = null;\r\n\r\n            // For clean the cache.\r\n            // this.src = this.src ? this.src + '?t=' + new Date().toTimeString() : '';\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        if (this.valueChanged) {\r\n            this.valueChanged.unsubscribe();\r\n        }\r\n    }\r\n\r\n    drawComplete(): void {\r\n        // will be notified of szimek/signature_pad's onEnd event\r\n    }\r\n\r\n    drawStart(): void {\r\n        // will be notified of szimek/signature_pad's onBegin event\r\n    }\r\n\r\n    openSignModal(): void {\r\n        // If the signature is not empty open it in image viewer.\r\n        if (this.standAlone && this.dataURI) {\r\n            const fileStrArr = this.dataURI.fileStr.split(';');\r\n\r\n            if (fileStrArr.length === 2) {\r\n                const win = window.open('', '_blank');\r\n                const contentType = fileStrArr[0].split(':')[1];\r\n                const base64 = fileStrArr[1].split(',')[1];\r\n                const blob = this.fileService.convertFromb64toBlob(base64, contentType);\r\n                const url = URL.createObjectURL(blob);\r\n                win.location.href = url;\r\n            }\r\n            // signature allready exits\r\n        } else {\r\n            this.signatureURL = this.src;\r\n            this.openSignatoreDlg(this.signatureURL);\r\n        }\r\n    }\r\n    openSignatoreDlg(src: string = ''): void {\r\n        this.showActionBtn = this.signatureURL && this.signatureURL !== '' ? false : true;\r\n        // const signatureData = new DialogData('', this.signaturePopupPad, DialogDataType.Template);\r\n\r\n        const dialogRef = this.dialogService.openDialog(this.signaturePopupPad);\r\n        dialogRef.afterOpened().subscribe(() => {\r\n            this.afterDialogOpened();\r\n        });\r\n    }\r\n\r\n    afterDialogOpened(): void {\r\n        if (this.signatureURL && this.signatureURL !== '') {\r\n            this.signaturePad.fromDataURL(this.signatureURL);\r\n            this.signaturePad.off();\r\n        }\r\n    }\r\n\r\n    clearSignModal(): void {\r\n        this.signatureURL = '';\r\n        this.signaturePad.clear();\r\n        this.signaturePad.on();\r\n    }\r\n\r\n    deleteSignature(event: any): void {\r\n        this.signatureURL = '';\r\n        this.changeValue(this.signatureURL);\r\n        this.cd.detectChanges();\r\n    }\r\n\r\n    saveSignModal(event: any): void {\r\n        if (!this.signaturePad.isEmpty()) {\r\n            this.signatureURL = this.signaturePad.toDataURL('image/png');\r\n            const fileValue = JSON.stringify({\r\n                acceptedExtensions: this.acceptSignatureType,\r\n                fileStr: this.signatureURL,\r\n                fileExt: this.acceptSignatureType\r\n            });\r\n            this.changeValue(fileValue);\r\n        } else {\r\n            this.signatureURL = '';\r\n            this.changeValue(this.signatureURL);\r\n        }\r\n    }\r\n\r\n    errorHandler(event: any): void {\r\n        this.signatureURL = this.src = ''; // this.blankImage;\r\n    }\r\n\r\n    changeValue(value: any, lastFocusedField: any = null): void {\r\n        this.dataURI = value.length > 0 ? JSON.parse(value) : null;\r\n        this.src = this.standAlone && this.dataURI ? this.dataURI.fileStr : '';\r\n        this.customizationService.updateFormFieldValue(this.form, this.key, this.dataURI ? this.dataURI.fileExt : '');\r\n        this.valueChanged.emit({ apiName: this.key, value, controlType: this.controlType, lastFocusedField });\r\n    }\r\n\r\n    onKeyPress_OpenSignModal(event: any): void {\r\n        const e = event as KeyboardEvent;\r\n\r\n        if ([13, 32].indexOf(e.which) !== -1) {\r\n            this.openSignModal();\r\n        }\r\n        e.preventDefault();\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\n\r\nimport { MatCommonModule } from '@angular/material/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\n\r\nimport { SignaturePadModule } from 'angular2-signaturepad';\r\n\r\nimport { PepperiModule } from '@pepperi-addons/ngx-lib';\r\nimport {\r\n    PepperiIconModule,\r\n    PepperiIconRegistry,\r\n    pepperiIconSystemBin,\r\n    pepperiIconSystemSignature,\r\n    pepperiIconSystemClose\r\n} from '@pepperi-addons/ngx-lib/icon';\r\nimport { PepperiFieldTitleModule } from '@pepperi-addons/ngx-lib/field-title';\r\nimport { PepperiFilesUploaderModule } from '@pepperi-addons/ngx-lib/files-uploader';\r\nimport { PepperiDialogModule } from '@pepperi-addons/ngx-lib/dialog';\r\n\r\nimport { PepperiSignatureComponent } from './signature.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        ReactiveFormsModule,\r\n        FormsModule,\r\n        // Material modules\r\n        MatCommonModule,\r\n        MatButtonModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        MatIconModule,\r\n        MatDialogModule,\r\n        // External modules\r\n        SignaturePadModule,\r\n        // Pepperi modules\r\n        PepperiModule,\r\n        PepperiIconModule,\r\n        PepperiFieldTitleModule,\r\n        PepperiFilesUploaderModule,\r\n        PepperiDialogModule\r\n    ],\r\n    exports: [ PepperiSignatureComponent ],\r\n    declarations: [ PepperiSignatureComponent ],\r\n})\r\nexport class PepperiSignatureModule {\r\n    constructor(private pepperiIconRegistry: PepperiIconRegistry) {\r\n        this.pepperiIconRegistry.registerIcons([\r\n            pepperiIconSystemBin,\r\n            pepperiIconSystemSignature,\r\n            pepperiIconSystemClose\r\n        ]);\r\n    }\r\n}\r\n"]}