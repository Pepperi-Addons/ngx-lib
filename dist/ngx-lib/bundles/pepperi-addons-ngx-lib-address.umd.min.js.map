{"version":3,"sources":["../../../projects/ngx-lib/address/address.component.html","../../../projects/ngx-lib/address/address.component.ts","../../../projects/ngx-lib/address/address.module.ts"],"names":["i0.ɵɵelementStart","i0.ɵɵlistener","i0.ɵɵelementEnd","i0.ɵɵpropertyInterpolate","i0.ɵɵproperty","ctx_r6","form","groupField_r4","key","value","formattedValue","label","placeholder","type","required","disabled","readonly","xAlignment","rowSpan","ctx_r7","options","i0.ɵɵtemplate","i0.ɵɵclassMapInterpolate1","i0.ɵɵadvance","i0.ɵɵelementContainerStart","i0.ɵɵelement","i0.ɵɵelementContainerEnd","ctx_r0","i0.ɵɵtext","i0.ɵɵtextInterpolate1","i0.ɵɵpropertyInterpolate2","PepperiAddressComponent","element","renderer","this","layoutType","LAYOUT_TYPE","PepperiForm","valueChanged","EventEmitter","prototype","ngOnInit","addClass","nativeElement","ngOnChanges","changes","_this","setTimeout","focusedFieldParent","groupFields","filter","groupField","lastFocusField","focus","ngOnDestroy","unsubscribe","onBlur","e","apiName","target","changeValue","relatedTarget","onValueChange","input","obj","lastFocusedField","formCtrl","get","setValue","emit","i0","ɵɵdirectiveInject","ElementRef","Renderer2","selectors","inputs","outputs","features","ɵɵNgOnChangesFeature","decls","vars","consts","template","rf","ctx","PepperiAddressModule","imports","CommonModule","ReactiveFormsModule","FormsModule","MatCommonModule","MatFormFieldModule","PepperiModule","PepperiTextboxModule","PepperiSelectModule","PepperiFieldTitleModule","declarations","exports"],"mappings":"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","sourcesContent":["<ng-container [formGroup]=\"form\">\r\n    <ng-container *ngIf=\"layoutType === LAYOUT_TYPE.PepperiForm\">\r\n        <pep-field-title [label]=\"label\" [required]=\"required\" [disabled]=\"disabled\" class=\"header\">\r\n        </pep-field-title>\r\n        <div [formGroupName]=\"key\" [id]=\"key\" class=\"pepperi-address-container\"\r\n            dir=\"{{ xAlignment === '2' ? 'rtl' : 'ltr' }}\">\r\n            <div [ngSwitch]=\"groupField.controlType\" *ngFor=\"let groupField of groupFields; let i = index\"\r\n                class=\"pepperi-address-field columns-{{ groupField.colSpan }}\">\r\n                <pep-textbox *ngSwitchCase=\"'textbox'\" [layoutType]=\"layoutType\" title=\"{{ groupField.formattedValue }}\"\r\n                    [form]=\"form\" [key]=\"groupField.key\" [value]=\"groupField.value\"\r\n                    [formattedValue]=\"groupField.formattedValue\" [label]=\"groupField.label\"\r\n                    [placeholder]=\"groupField.placeholder\" [type]=\"groupField.type\" [required]=\"groupField.required\"\r\n                    [disabled]=\"groupField.disabled\" [readonly]=\"groupField.readonly\"\r\n                    [xAlignment]=\"groupField.xAlignment\" [rowSpan]=\"groupField.rowSpan\" [parentFieldKey]=\"key\"\r\n                    (valueChanged)=\"onValueChange($event, groupField.key)\">\r\n                </pep-textbox>\r\n\r\n                <pep-select *ngSwitchCase=\"'select'\" [layoutType]=\"layoutType\" title=\"{{ groupField.formattedValue }}\"\r\n                    [form]=\"form\" [key]=\"groupField.key\" [value]=\"groupField.value\"\r\n                    [formattedValue]=\"groupField.formattedValue\" [label]=\"groupField.label\" [type]=\"groupField.type\"\r\n                    [required]=\"groupField.required\" [disabled]=\"groupField.disabled\" [readonly]=\"groupField.readonly\"\r\n                    [xAlignment]=\"groupField.xAlignment\" [rowSpan]=\"groupField.rowSpan\" [options]=\"groupField.options\"\r\n                    [parentFieldKey]=\"key\" (valueChanged)=\"onValueChange($event, groupField.key)\">\r\n                </pep-select>\r\n            </div>\r\n        </div>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"layoutType === LAYOUT_TYPE.PepperiCard\">\r\n        <div class=\"pepperi-card-input \" title=\"{{ label }}&nbsp;{{ formattedValue }}\"\r\n            [ngClass]=\"['text-align-' + xAlignment]\">\r\n            <span *ngIf=\"label != ''\" class=\"body-xs title\">{{ label }}&nbsp;</span>\r\n            <ng-container *ngFor=\"let groupField of groupFields; let i = index\">\r\n                <span *ngIf=\"groupField?.formattedValue != ''\"\r\n                    class=\"body-sm\">{{ groupField.formattedValue }},&nbsp;</span>\r\n            </ng-container>\r\n        </div>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"layoutType === LAYOUT_TYPE.PepperiTable\">\r\n        <div class=\"pepperi-card-input \" title=\"{{ formattedValue }}\" [ngClass]=\"['text-align-' + xAlignment]\">\r\n            <ng-container *ngFor=\"let groupField of groupFields; let i = index\">\r\n                <span *ngIf=\"groupField?.formattedValue != ''\"\r\n                    class=\"body-sm\">{{ groupField.formattedValue }},&nbsp;</span>\r\n            </ng-container>\r\n        </div>\r\n    </ng-container>\r\n</ng-container>\r\n","import { Component, OnInit, OnChanges, Input, Output, EventEmitter, ChangeDetectionStrategy, OnDestroy, Renderer2, ElementRef } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { LAYOUT_TYPE } from '@pepperi-addons/ngx-lib';\r\n\r\n@Component({\r\n    selector: 'pep-address',\r\n    templateUrl: './address.component.html',\r\n    styleUrls: ['./address.component.scss'],\r\n    // host: { 'class': 'pepperi-grouped-field' },\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PepperiAddressComponent implements OnChanges, OnInit, OnDestroy {\r\n    @Input() key = '';\r\n    // @Input() value = '';\r\n    @Input() formattedValue = '';\r\n    @Input() label = '';\r\n    @Input() required = false;\r\n    @Input() disabled = false;\r\n    @Input() readonly = false;\r\n    @Input() xAlignment = '0';\r\n    @Input() rowSpan = 1;\r\n    @Input() groupFields: Array<any>;\r\n\r\n    @Input() form: FormGroup = null;\r\n    @Input() layoutType: LAYOUT_TYPE = LAYOUT_TYPE.PepperiForm;\r\n\r\n    @Output() valueChanged: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    LAYOUT_TYPE = LAYOUT_TYPE;\r\n\r\n    constructor(\r\n        private element: ElementRef,\r\n        private renderer: Renderer2\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        this.renderer.addClass(this.element.nativeElement, 'pep-grouped-field');\r\n    }\r\n\r\n    ngOnChanges(changes): void {\r\n        setTimeout(() => {\r\n            const focusedFieldParent = this.groupFields.filter(groupField => groupField.lastFocusField)[0];\r\n            if (focusedFieldParent) {\r\n                focusedFieldParent.lastFocusField.focus();\r\n            }\r\n        }, 100);\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        if (this.valueChanged) {\r\n            this.valueChanged.unsubscribe();\r\n        }\r\n    }\r\n\r\n    // Not in use for material\r\n    onBlur(e: any, apiName: string): void {\r\n        const value = e.target ? e.target.value : e;\r\n        this.changeValue({ apiName, value }, e.relatedTarget);\r\n    }\r\n\r\n    onValueChange(e: any, apiName: string): void {\r\n        if (e.target) {\r\n            const input = e.target ? e.target.value : e;\r\n            this.changeValue({ apiName, value: input.value });\r\n        } else {\r\n            this.changeValue(e);\r\n        }\r\n    }\r\n\r\n    changeValue(obj: any, lastFocusedField: any = null): void {\r\n        const currentGroupField = this.groupFields.filter(groupField => groupField.key === obj.apiName)[0];\r\n\r\n        if (currentGroupField.value !== obj.value) {\r\n            // Set the value in the form controls\r\n            if (this.form) {\r\n                const formCtrl = this.form.get(this.key);\r\n\r\n                if (formCtrl) {\r\n                    formCtrl.get(obj.apiName).setValue(obj.value);\r\n                }\r\n            }\r\n\r\n            this.valueChanged.emit({ apiName: obj.apiName, value: obj.value, lastFocusedField });\r\n        }\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\n\r\nimport { MatCommonModule } from '@angular/material/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\n\r\nimport { PepperiModule } from '@pepperi-addons/ngx-lib';\r\nimport { PepperiTextboxModule } from '@pepperi-addons/ngx-lib/textbox';\r\nimport { PepperiSelectModule } from '@pepperi-addons/ngx-lib/select';\r\nimport { PepperiFieldTitleModule } from '@pepperi-addons/ngx-lib/field-title';\r\n\r\nimport { PepperiAddressComponent } from './address.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        ReactiveFormsModule,\r\n        FormsModule,\r\n        // Material modules\r\n        MatCommonModule,\r\n        MatFormFieldModule,\r\n        // Pepperi modules\r\n        PepperiModule,\r\n        PepperiTextboxModule,\r\n        PepperiSelectModule,\r\n        PepperiFieldTitleModule\r\n    ],\r\n    exports: [ PepperiAddressComponent ],\r\n    declarations: [ PepperiAddressComponent ],\r\n})\r\nexport class PepperiAddressModule {}\r\n"]}