{"version":3,"file":"pepperi-addons-ngx-lib-group-buttons.umd.js","sources":["../../../projects/ngx-lib/group-buttons/group-buttons.component.html","../../../projects/ngx-lib/group-buttons/group-buttons.component.ts","../../../projects/ngx-lib/group-buttons/group-buttons.module.ts","../../../projects/ngx-lib/group-buttons/public-api.ts","../../../projects/ngx-lib/group-buttons/pepperi-addons-ngx-lib-group-buttons.ts"],"sourcesContent":["<div class=\"group-buttons-container\" pepRtlDirection>\r\n    <ng-container *ngIf=\"viewType == GROUP_BUTTONS_VIEW_TYPE.Regular\">\r\n        <button *ngFor=\"let button of buttons\"\r\n            class=\"pepperi-button spacing-element pull-left flip first-button mat-button {{ buttonsClass }}\"\r\n            [disabled]=\"buttonsDisabled\" mat-button (click)=\"button?.Callback($event)\">\r\n            <span>{{ button?.Value }}</span>\r\n        </button>\r\n    </ng-container>\r\n\r\n    <div *ngIf=\"viewType == GROUP_BUTTONS_VIEW_TYPE.Dropdown\" class=\"dropdown-buttons spacing-element\"\r\n        [ngClass]=\"{dropup: screenSize >= 2}\">\r\n        <button class=\"pepperi-button pull-left flip first-button mat-button {{ buttonsClass }}\"\r\n            (click)=\"buttons[0]?.Callback($event)\" [disabled]=\"buttonsDisabled\" mat-button>\r\n            <span class=\"pepperi-btn-text\">{{ buttons[0]?.Value }}</span>\r\n        </button>\r\n        <button class=\"pepperi-button icon-button pull-right flip last-button mat-button {{ buttonsClass }}\"\r\n            [matMenuTriggerFor]=\"actionsMenu\" [disabled]=\"buttonsDisabled\" pepMenuBlur mat-button>\r\n            <mat-icon>\r\n                <pep-icon name=\"{{ screenSize < 2 ? 'arrow_down' : 'arrow_up' }}\">\r\n                </pep-icon>\r\n            </mat-icon>\r\n        </button>\r\n\r\n        <mat-menu #actionsMenu=\"matMenu\" xPosition=\"before\">\r\n            <ng-container *ngFor=\"let button of buttons; let i = index; first as isFirst\">\r\n                <button *ngIf=\"!isFirst\" mat-menu-item (click)=\"button?.Callback($event)\">\r\n                    <span>{{ button?.Value }}</span>\r\n                </button>\r\n            </ng-container>\r\n        </mat-menu>\r\n    </div>\r\n    <div *ngIf=\"viewType == GROUP_BUTTONS_VIEW_TYPE.Split\" class=\"split-buttons\">\r\n        <button *ngFor=\"let button of buttons; let index; let isFirst = first; let isLast = last\"\r\n            class=\"pepperi-button  split-button mat-button {{ buttonsClass }} {{ button?.Class }} pull-left flip\"\r\n            [ngClass]=\"{'first-button': isFirst, 'middle-button': !isFirst && !isLast, 'last-button': isLast, 'icon-button': button?.Icon}\"\r\n            [disabled]=\"buttonsDisabled\" mat-button (click)=\"button?.Callback($event)\">\r\n            <mat-icon *ngIf=\"button?.Icon\">\r\n                <pep-icon name=\"{{button?.Icon}}\" (click)=\"button?.Callback($event)\">\r\n                </pep-icon>\r\n            </mat-icon>\r\n            <span *ngIf=\"button?.Value\">{{ button?.Value }}</span>\r\n        </button>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, OnDestroy, Input, Output, EventEmitter } from '@angular/core';\r\nimport { LayoutService, SCREEN_SIZE } from '@pepperi-addons/ngx-lib';\r\nimport { delay } from 'rxjs/operators';\r\n\r\nexport interface PepperiGroupButton {\r\n    Value;\r\n    Class;\r\n    Icon;\r\n    Callback;\r\n}\r\n\r\nexport enum GROUP_BUTTONS_VIEW_TYPE {\r\n    Regular,\r\n    Dropdown,\r\n    Split,\r\n}\r\n\r\n@Component({\r\n    selector: 'pep-group-buttons',\r\n    templateUrl: './group-buttons.component.html',\r\n    styleUrls: ['./group-buttons.component.scss'],\r\n})\r\nexport class GroupButtonsComponent implements OnInit, OnDestroy {\r\n    GROUP_BUTTONS_VIEW_TYPE = GROUP_BUTTONS_VIEW_TYPE;\r\n    screenSize: SCREEN_SIZE;\r\n\r\n    @Input() viewType: GROUP_BUTTONS_VIEW_TYPE = GROUP_BUTTONS_VIEW_TYPE.Regular;\r\n    @Input() buttons: Array<PepperiGroupButton>;\r\n    @Input() buttonsClass: string;\r\n    @Input() buttonsDisabled: string;\r\n\r\n    // @Output() buttonClick: EventEmitter<PepperiGroupButton> = new EventEmitter<PepperiGroupButton>();\r\n\r\n    constructor(public layoutService: LayoutService) {\r\n        this.layoutService.onResize$\r\n            .pipe(delay(0))\r\n            .subscribe(size => {\r\n                this.screenSize = size;\r\n            });\r\n    }\r\n\r\n    ngOnInit(): void { }\r\n\r\n    ngOnDestroy() {\r\n        // if (this.buttonClick) this.buttonClick.unsubscribe();\r\n    }\r\n\r\n    // onButtonClicked(button: PepperiGroupButton) {\r\n    //     this.buttonClick.emit(button);\r\n    // }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { MatCommonModule } from '@angular/material/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\nimport { PepperiModule } from '@pepperi-addons/ngx-lib';\r\nimport { PepperiIconModule, PepperiIconRegistry, pepperiIconArrowUp, pepperiIconArrowDown } from '@pepperi-addons/ngx-lib/icon';\r\n\r\nimport { GroupButtonsComponent } from './group-buttons.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        // Material modules\r\n        MatCommonModule,\r\n        MatFormFieldModule,\r\n        MatButtonModule,\r\n        MatMenuModule,\r\n        MatIconModule,\r\n        // Pepperi modules\r\n        PepperiModule,\r\n        PepperiIconModule\r\n    ],\r\n    exports: [ GroupButtonsComponent ],\r\n    declarations: [ GroupButtonsComponent ],\r\n})\r\nexport class PepperiGroupButtonsModule {\r\n    constructor(private pepperiIconRegistry: PepperiIconRegistry) {\r\n        this.pepperiIconRegistry.registerIcons([\r\n            pepperiIconArrowUp,\r\n            pepperiIconArrowDown\r\n        ]);\r\n    }\r\n}\r\n","/*\r\n * Public API Surface of ngx-lib/group-buttons\r\n */\r\nexport * from './group-buttons.module';\r\nexport * from './group-buttons.component';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i0.ɵɵelementStart","i0.ɵɵlistener","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵclassMapInterpolate1","i0.ɵɵproperty","i0.ɵɵadvance","i0.ɵɵtextInterpolate","i0.ɵɵelementContainerStart","i0.ɵɵtemplate","i0.ɵɵelementContainerEnd","i0.ɵɵelement","i0.ɵɵpropertyInterpolate","i0.ɵɵclassMapInterpolate2","GROUP_BUTTONS_VIEW_TYPE","delay","Component","Input","pepperiIconArrowUp","pepperiIconArrowDown","CommonModule","MatCommonModule","MatFormFieldModule","MatButtonModule","MatMenuModule","MatIconModule","PepperiModule","PepperiIconModule","NgModule"],"mappings":"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"}