{"version":3,"sources":["../../../projects/ngx-lib/src/core/common/services/jwt-helper.service.ts","../../../projects/ngx-lib/src/core/common/services/session.service.ts","../../../projects/ngx-lib/src/core/http/interceptors/auth.interceptor.ts","../../../projects/ngx-lib/src/core/http/interceptors/error.interceptor.ts","../../../projects/ngx-lib/src/core/http/services/loader.service.ts","../../../projects/ngx-lib/src/core/http/interceptors/loader.interceptor.ts","../../../projects/ngx-lib/src/core/http/interceptors/profiler.interceptor.ts","../../../projects/ngx-lib/src/core/http/interceptors/index.ts","../../../projects/ngx-lib/src/core/layout/layout.service.ts","../../../projects/ngx-lib/src/core/layout/rtl.directive.ts","../../../projects/ngx-lib/src/core/common/pipes/common-pipes.ts","../../../projects/ngx-lib/src/core/common/directives/button-blur.directive.ts","../../../projects/ngx-lib/src/core/common/directives/menu-blur.directive.ts","../../../projects/ngx-lib/src/core/portal/portal.service.ts","../../../projects/ngx-lib/src/core/portal/attach.directive.ts","../../../projects/ngx-lib/src/core/portal/target.directive.ts","../../../projects/ngx-lib/src/ngx-lib.module.ts","../../../projects/ngx-lib/src/core/common/model/api.model.ts","../../../projects/ngx-lib/src/core/common/model/utilities.model.ts","../../../projects/ngx-lib/src/core/http/services/http.service.ts","../../../projects/ngx-lib/src/core/common/services/addon.service.ts","../../../node_modules/tslib/tslib.es6.js","../../../projects/ngx-lib/src/core/common/services/cookie.service.ts","../../../projects/ngx-lib/src/core/common/services/file.service.ts","../../../projects/ngx-lib/src/core/common/services/data-convertor.service.ts","../../../projects/ngx-lib/src/core/customization/customization.model.ts","../../../projects/ngx-lib/src/core/common/services/utilities.service.ts","../../../projects/ngx-lib/src/core/customization/customization.service.ts"],"names":["JwtHelperService","prototype","urlBase64Decode","str","output","replace","length","Error","this","b64DecodeUnicode","b64decode","String","bc","bs","buffer","idx","charAt","fromCharCode","indexOf","decodeURIComponent","Array","map","call","c","charCodeAt","toString","slice","join","decodeToken","token","parts","split","decoded","JSON","parse","getTokenExpirationDate","hasOwnProperty","date","Date","setUTCSeconds","exp","isTokenExpired","offsetSeconds","valueOf","getAuthScheme","authScheme","request","factory","ɵfac","providedIn","SessionService","jwtHelper","IDP_TOKEN_KEY","PAPI_BASE_URL_KEY","WAPI_TOKEN_KEY","WAPI_BASE_URL_KEY","getParseToken","getIdpToken","setObject","key","object","stringifiedObject","stringify","sessionStorage","setItem","getObject","result","item","getItem","_a","getPepperiConsumerToken","PEPPERI_CONSUMER_TOKEN","gettWapiToken","getWapiBaseUrl","getPapiBaseUrl","tokenObj","i0","ɵɵinject","AuthInterceptor","sessionService","AUTH_HEADER","PEPPERI_TOKEN_HEADER","PEPPERI_CONSUMER_KEY_HEADER","addAuthorizationToken","headers","has","idpToken","clone","set","addPepperiConsumerToken","papiBaseUrl","url","match","RegExp","pepperiConsumerToken","addWebApiToken","wapiBaseUrl","webApiToken","intercept","req","next","console","warn","handle","ErrorInterceptor","pipe","catchError","error","status","throwError","LoaderService","counter","showLoaderSubject","BehaviorSubject","Object","defineProperty","asObservable","distinctUntilChanged","show","hide","LoaderInterceptor","injector","loaderService","get","delay","finalize","Injector","ProfilerInterceptor","ok","started","now","tap","event","HttpResponse","elapsed","msg","method","urlWithParams","log","ORIENTATION","SCREEN_SIZE","httpInterceptorProviders","provide","HTTP_INTERCEPTORS","useClass","multi","_BIDI_RTL_LANGS","LayoutService","translate","resizeSubject","LG","onResize","size","getOrintation","window","innerHeight","innerWidth","Portrait","Landscape","getScreenWidth","retVal","getValue","XS","SM","MD","getScreenHeight","getScreenHeightPx","document","documentElement","clientHeight","body","getScreenWidthPx","clientWidth","getCurrentLanguage","currentLang","navigator","language","isRtl","userLang","i1$1","TranslateService","RtlClassDirective","layoutService","renderer","element","ngOnInit","addClass","nativeElement","ɵɵdirectiveInject","Renderer2","ElementRef","selectors","RtlDirectionDirective","setAttribute","CapitalizePipe","transform","value","toUpperCase","pure","EncodePipe","btoa","EscapePipe","escape","ReplaceLineBreaks","DateFormatter","culture","showTime","res","toLocaleDateString","toLocaleTimeString","hour","minute","DateStringFormatter","tmpDate","SafeHtmlPipe","sanitizer","html","bypassSecurityTrustHtml","i1","DomSanitizer","SafePipe","type","bypassSecurityTrustStyle","bypassSecurityTrustScript","bypassSecurityTrustUrl","bypassSecurityTrustResourceUrl","SplitUppercase","ToNumber","parseInt","ButtonBlurDirective","onClick","_this","setTimeout","blur","hostBindings","rf","ctx","MenuBlurDirective","menuClosedEvent","menuOpenedEvent","PortalService","targets","Map","addTarget","targetName","viewContainer","attach","template","target","getTarget","createEmbeddedView","clear","AttachDirective","portalService","templateRef","ngOnDestroy","TemplateRef","inputs","TargetDirective","ViewContainerRef","FIELD_TYPE","PepperiModule","providers","imports","CommonModule","HttpClientModule","BrowserModule","BrowserAnimationsModule","ReactiveFormsModule","FormsModule","TranslateModule","declarations","exports","x","width","xAlignment","y","height","yAlignment","lineNumber","X","Width","XAlignment","Y","Height","YAlignment","LineNumber","MandatoryField","Mandatory","minFieldWidth","calcColumnWidth","calcTitleColumnWidthString","calcColumnWidthString","IsSelectableForActions","IsEditable","uiControl","data","Success","ErrorMessage","Type","UIControl","Data","TotalAmount","CurrencySymbol","options","ApiName","Value","FormattedValue","FieldType","ColumnWidth","ColumnWidthType","Title","Guid","pad4","num","ret","random4","Math","floor","random","substring","newGuid","crypto","buf","Uint16Array","getRandomValues","HttpService","http","getTextFile","filename","getHttpCall","httpOptions","handleError","bind","postHttpCall","post","getWapiApiCall","postWapiApiCall","getPapiApiCall","postPapiApiCall","errorMessage","ErrorEvent","message","getServerErrorMessage","i2","HttpClient","AddonService","httpService","ADDON_ASSETS_PATH_KEY","getAddonStaticFolder","setAddonStaticFolder","path","getAddonApiCall","addonUUID","fileName","functionName","postAddonApiCall","extendStatics","d","b","setPrototypeOf","__proto__","p","__extends","__","constructor","create","__read","o","n","m","Symbol","iterator","r","e","i","ar","done","push","CookieService","platformId","documentIsAccessible","isPlatformBrowser","check","name","encodeURIComponent","getCookieRegExp","test","cookie","exec","safeDecodeURIComponent","getAll","cookies","forEach","currentCookie","_b","cookieName","cookieValue","expires","domain","secure","sameSite","cookieString","getTime","toUTCString","delete","deleteAll","escapedName","encodedURIComponent","DOCUMENT","PLATFORM_ID","FileTypeEnum","DataConvertorService","convertFormData","formData","objectsData","ObjectSingleData","rowData","ObjectsDataRow","uiRow","Fields","ControlFields","field","setUIControlField","UID","setDataField","convertListData","tableData","ObjectsData","rows","row","Rows","controlField","UIControlField","Layout","FieldLayout","ReadOnly","dataField","ObjectsDataRowCell","AdditionalValue","Enabled","GroupFields","NotificationInfo","OptionalValues","ReferenceObjectSubType","TextColor","Visible","setFieldLayout","FileService","scripts","styles","loadFiles","files","promises","file","Style","loadStyle","Script","loadScript","Promise","all","removeFiles","index","trim","getFileName","getElementById","parentNode","removeChild","resolve","reject","loaded","src","scriptItem","script","script_1","createElement","async","readyState","onreadystatechange","onload","onerror","getElementsByTagName","appendChild","styleItem","style","rel","href","media","filePath","withExtenstion","lastIndex","lastIndexOf","substr","getFileExtension","fileSplit","fileExt","isValidUrl","URL","convertFromb64toBlob","b64Data","contentType","sliceSize","byteCharacters","atob","byteArrays","offset","byteNumbers","byteArray","Uint8Array","Blob","getAssetsPath","getAssetsTranslationsPath","getAssetsImagesPath","image","getNoImagePath","LAYOUT_TYPE","STYLE_TYPE","UtilitiesService","parseDate","dateStr","dateText","year","Number","month","day","isNaN","stringifyDate","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","stringifyDateWithOffset","offsetMinutes","getTimezoneOffset","setMinutes","isValueHtml","isJsonString","PepperiFieldBase","notificationInfo","formattedValue","additionalValue","label","accessory","required","readonly","disabled","order","undefined","controlType","placeholder","hidden","rowSpan","col","colSpan","maxFieldCharacters","minValue","maxValue","textColor","lastFocusField","updatedDataCount","updateField","updatedField","canEditObject","PepperiPlaceholderField","_super","PepperiSeparatorField","PepperiButtonField","referenceObjectSubType","referenceObjectInternalType","referenceObjectType","PepperiAttachmentField","PepperiIndicatorsField","PepperiTextboxField","PepperiTextareaField","PepperiRichHtmlTextareaField","PepperiSignatureField","PepperiImageField","hasCampaignField","indicatorsField","menuField","sizeLimitMB","PepperiImagesField","PepperiQuantitySelectorField","alowDecimal","PepperiDateField","PepperiCheckboxField","PepperiSelectField","PepperiAddressField","groupFields","PepperiInternalPageField","objectId","parentId","searchCode","PepperiMenuField","id","apiName","Id","ControlType","idType","which","fieldType","otherData","IdType","Which","OtherData","CustomizationService","fb","hasCustomHomepage","hasCustomHeader","customHeaderHeight","DEFAULT_HEADER_HEIGHT","mainContHeight","footerHeight","getValidatorsForField","isCheckbox","NaN","validators","Validators","nullValidator","requiredTrue","maxLength","pattern","min","max","getDefaultFromGroup","withValidators","group","getFormControl","form","fieldKey","parentFieldKey","formControl","controls","updateFormFieldValue","setValue","updateFormField","parentField","disable","enable","setValidators","calculateFormFieldHeight","withTitle","standAlone","themeVars","getThemeVariables","rowFieldHeight","getNumberThemeVariable","FORM_FIELD_HEIGHT_KEY","rowFieldTitleHeight","FORM_FIELD_TITLE_HEIGHT_KEY","rowFieldSpacingBottom","FORM_SPACEING_KEY","fieldHeight","rowSpanCalc","calculateCardRowsHeight","rowsCount","withSpacing","cardFieldHeight","CARD_FIELD_HEIGHT_KEY","cardFieldSpacing","CARD_SPACEING_KEY","calculateTableRowsHeight","tableFieldHeight","TABLE_FIELD_HEIGHT_KEY","tableFieldSpacing","TABLE_SPACEING_KEY","calculateFieldHeight","layoutType","PepperiForm","PepperiTable","getThemeVariable","PepperiCard","REM_STRING","getBrandingTheme","themeObj","USER_THEME","Theme","getDefaultThemeLayoutVariables","PX_STRING","SIDE_BAR_WIDTH_KEY","TOP_BAR_SPACING_TOP_KEY","TOP_BAR_SPACING_BOTTOM_KEY","TOP_BAR_FIELD_HEIGHT_KEY","FOOTER_BAR_SPACING_TOP_KEY","FOOTER_BAR_SPACING_BOTTOM_KEY","getDefaultThemeBorderRadiusVariables","BORDER_RADIUS_SM_KEY","BORDER_RADIUS_MD_KEY","BORDER_RADIUS_LG_KEY","getDefaultThemeSpacingVariables","SPACING_SIZE_2XS_KEY","SPACING_SIZE_XS_KEY","SPACING_SIZE_SM_KEY","SPACING_SIZE_MD_KEY","SPACING_SIZE_LG_KEY","SPACING_SIZE_XL_KEY","SPACING_SIZE_2XL_KEY","getDefaultThemeFontsVariables","FONT_FAMILY_TITLE_KEY","FONT_FAMILY_BODY_KEY","FONT_SIZE_2XS_KEY","FONT_SIZE_XS_KEY","FONT_SIZE_SM_KEY","FONT_SIZE_MD_KEY","FONT_SIZE_LG_KEY","FONT_SIZE_XL_KEY","FONT_SIZE_2XL_KEY","LINE_HEIGHT_2XS_KEY","LINE_HEIGHT_XS_KEY","LINE_HEIGHT_SM_KEY","LINE_HEIGHT_MD_KEY","LINE_HEIGHT_LG_KEY","LINE_HEIGHT_XL_KEY","LINE_HEIGHT_2XL_KEY","getDefaultThemeButtonsVariables","getSystemPrimaryInvertColorsVariables","COLOR_SYSTEM_PRIMARY_INVERT_KEY","getSystemPrimaryColorsVariables","COLOR_SYSTEM_PRIMARY_KEY","getSystemSuccessColorsVariables","COLOR_SYSTEM_SUCCESS_KEY","getSystemCautionColorsVariables","COLOR_SYSTEM_CAUTION_KEY","getUserPrimaryColorsVariables","COLOR_USER_PRIMARY_KEY","getUserSecondaryColorsVariables","COLOR_USER_SECONDARY_KEY","getWeakColorsVariables","COLOR_WEAK_KEY","getRegularColorsVariables","COLOR_REGULAR_KEY","getStrongColorsVariables","COLOR_STRONG_KEY","getTextColorsVariables","COLOR_TEXT_LINK_KEY","getDefaultThemeColorsVariables","getDefaultThemeShadowsVariables","SHADOW_NONE_OFFSET_KEY","SHADOW_XS_OFFSET_KEY","SHADOW_SM_OFFSET_KEY","SHADOW_MD_OFFSET_KEY","SHADOW_LG_OFFSET_KEY","SHADOW_XL_OFFSET_KEY","getDefaultThemeFormCustomizationVariables","FORM_FIELD_SPACEING_KEY","getDefaultThemeCardCustomizationVariables","CARD_BORDER_RADIUS_KEY","CARD_SHADOW_OFFSET_KEY","getDefaultThemeTableCustomizationVariables","TABLE_BORDER_RADIUS_KEY","getDefaultThemeQSCustomizationVariables","qsState","Regular","STYLE_QS_KEY","COLOR_QS_KEY","getDefaultThemeTopHeaderCustomizationVariables","topHeaderState","Strong","STYLE_TOP_HEADER_KEY","COLOR_TOP_HEADER_KEY","getDefaultThemeVariables","USER_THEME_VARIABLES","setThemeVariables","themeVariablesToSet","themeVariables","setProperty","setFooterHeight","self","FOOTER_HEIGHT_KEY","setDefaultFooterHeight","getTopBarHeight","setOldUserTheme","spinnerColor","brandingFontColor","isLightColor","BrandingMainColor","DEFAULT_SPINNER_COLOR","DEFAULT_BRANDING_COLOR","color","BrandingSecondaryColor","BrandingFontColor","SpinnerColor","USER_COLOR","TopHeaderFiles","UserRole","isLegacyColor","h","getPropertyValue","s","l","getLoadingSpinnerColor","getBrandingMainColor","brandingMainColor","hexColor","isBright","sum","STAND_ALONE_FIELD_CLASS_NAME","HEADER_HEIGHT_KEY","MAIN_HEIGHT_KEY","BORDER_RADIUS_KEY","i2$1","FormBuilder"],"mappings":"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","sourcesContent":["import { HttpRequest } from '@angular/common/http';\r\nimport { Injectable, Inject } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class JwtHelperService {\r\n    constructor() {\r\n    }\r\n\r\n    public urlBase64Decode(str: string): string {\r\n        let output = str.replace(/-/g, '+').replace(/_/g, '/');\r\n        switch (output.length % 4) {\r\n            case 0: {\r\n                break;\r\n            }\r\n            case 2: {\r\n                output += '==';\r\n                break;\r\n            }\r\n            case 3: {\r\n                output += '=';\r\n                break;\r\n            }\r\n            default: {\r\n                throw new Error('Illegal base64url string!');\r\n            }\r\n        }\r\n        return this.b64DecodeUnicode(output);\r\n    }\r\n\r\n    // credits for decoder goes to https://github.com/atk\r\n    private b64decode(str: string): string {\r\n        const chars =\r\n        'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\r\n        let output = '';\r\n\r\n        str = String(str).replace(/=+$/, '');\r\n\r\n        if (str.length % 4 === 1) {\r\n            throw new Error(\r\n                '\\'atob\\' failed: The string to be decoded is not correctly encoded.'\r\n            );\r\n        }\r\n\r\n        for (\r\n        // initialize result and counters\r\n        let bc = 0, bs: any, buffer: any, idx = 0;\r\n        // get next character\r\n        (buffer = str.charAt(idx++));\r\n        // character found in table? initialize bit storage and add its ascii value;\r\n        ~buffer &&\r\n        ((bs = bc % 4 ? bs * 64 + buffer : buffer),\r\n        // and if not first of each 4 characters,\r\n        // convert the first 8 bits to one ascii character\r\n        bc++ % 4)\r\n            ? (output += String.fromCharCode(255 & (bs >> ((-2 * bc) & 6))))\r\n            : 0\r\n        ) {\r\n            // try to find character in table (0-63, not found => -1)\r\n            buffer = chars.indexOf(buffer);\r\n        }\r\n        return output;\r\n    }\r\n\r\n    private b64DecodeUnicode(str: any): string {\r\n        return decodeURIComponent(\r\n        Array.prototype.map\r\n            .call(this.b64decode(str), (c: any) => {\r\n                return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\r\n            })\r\n            .join('')\r\n        );\r\n    }\r\n\r\n    public decodeToken(token: string): any {\r\n        if (!token || token === '') {\r\n            return null;\r\n        }\r\n\r\n        const parts = token.split('.');\r\n\r\n        if (parts.length !== 3) {\r\n            throw new Error(\r\n                'The inspected token doesn\\'t appear to be a JWT. Check to make sure it has three parts and see https://jwt.io for more.'\r\n            );\r\n        }\r\n\r\n        const decoded = this.urlBase64Decode(parts[1]);\r\n        if (!decoded) {\r\n            throw new Error('Cannot decode the token.');\r\n        }\r\n\r\n        return JSON.parse(decoded);\r\n    }\r\n\r\n    public getTokenExpirationDate(token: string): Date | null {\r\n        let decoded: any;\r\n        decoded = this.decodeToken(token);\r\n\r\n        if (!decoded || !decoded.hasOwnProperty('exp')) {\r\n            return null;\r\n        }\r\n\r\n        const date = new Date(0);\r\n        date.setUTCSeconds(decoded.exp);\r\n\r\n        return date;\r\n    }\r\n\r\n    public isTokenExpired(token: string, offsetSeconds?: number): boolean {\r\n        if (!token || token === '') {\r\n            return true;\r\n        }\r\n        const date = this.getTokenExpirationDate(token);\r\n        offsetSeconds = offsetSeconds || 0;\r\n\r\n        if (date === null) {\r\n            return false;\r\n        }\r\n\r\n        return !(date.valueOf() > new Date().valueOf() + offsetSeconds * 1000);\r\n    }\r\n\r\n    public getAuthScheme(authScheme: Function | string | undefined, request: HttpRequest<any>): string {\r\n        if (typeof authScheme === 'function') {\r\n            return authScheme(request);\r\n        }\r\n\r\n        return authScheme;\r\n    }\r\n}","import {Injectable} from '@angular/core';\r\nimport { JwtHelperService } from './jwt-helper.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class SessionService {\r\n    private readonly IDP_TOKEN_KEY = 'idp_token';\r\n    private readonly PAPI_BASE_URL_KEY = 'pepperi.baseurl';\r\n    private readonly WAPI_TOKEN_KEY = 'auth_token';\r\n    private readonly WAPI_BASE_URL_KEY = 'serverHostURL';\r\n    private readonly PEPPERI_CONSUMER_TOKEN: 'YY2pAwx6Exo2LWXrUllF9xzSfWF53wqc';\r\n\r\n    constructor(private jwtHelper: JwtHelperService) { }\r\n\r\n    // TODO: Maybe need to move this parse into the c'tor.\r\n    private getParseToken(): any {\r\n        debugger;\r\n        const tokenTest = \"eyJhbGciOiJSUzI1NiIsImtpZCI6IjRiYTFjNzJmMTI3NThjYzEzMzg3ZWQ3YTBiZjNlODg3IiwidHlwIjoiSldUIn0.eyJuYmYiOjE1OTY3MjU5NjksImV4cCI6MTU5NjcyNjI2OSwiaXNzIjoiaHR0cHM6Ly9pZHAuc2FuZGJveC5wZXBwZXJpLmNvbSIsImF1ZCI6InBlcHBlcmkud2ViYXBwLmFwcC5zYW5kYm94LnBlcHBlcmkuY29tIiwiaWF0IjoxNTk2NzI1OTY5LCJhdF9oYXNoIjoiSGtmRXJ0Q2JzQ3NzOTVKUm05VmJTdyIsInNpZCI6IjJkNzFiM2JiNWUyNjRiNDk2Y2JmZDkzNmYyNTNhNWIzIiwic3ViIjoiZTJkZmQ0MDYtZDM4Yy00ZmYwLThhZGItMWRlMjI3ODIzYWEyIiwiYXV0aF90aW1lIjoxNTk2NzE4ODA5LCJpZHAiOiJsb2NhbCIsIm5hbWUiOiJkYW5pZWwgZGF2aWRvZmYiLCJlbWFpbCI6ImRhbmllbC5kQHBlcHBlcml0ZXN0LmNvbSIsInBlcHBlcmkuaWQiOjg2OTAzMDQsInBlcHBlcmkudXNlcnV1aWQiOiJlMmRmZDQwNi1kMzhjLTRmZjAtOGFkYi0xZGUyMjc4MjNhYTIiLCJwZXBwZXJpLmRpc3RyaWJ1dG9yaWQiOjMwMDEyMzUxLCJwZXBwZXJpLmRpc3RyaWJ1dG9ydXVpZCI6IjBiZDBlZDc5LThlOWUtNDRmYi05NmY0LThlNTNlZDljZTgyYiIsInBlcHBlcmkuZGF0YWNlbnRlciI6InNhbmRib3giLCJwZXBwZXJpLmtlZXBsb2dpbiI6ZmFsc2UsInBlcHBlcmkuaWRsZXRpbWV3ZWIiOjEyMCwidXBkYXRlZF9hdCI6MTU5NjcwMjgwMCwiZ2l2ZW5fbmFtZSI6ImRhbmllbCIsImZhbWlseV9uYW1lIjoiZGF2aWRvZmYiLCJwZXBwZXJpLmFwaW50YmFzZXVybCI6Imh0dHBzOi8vcmVzdGFwaS5zYW5kYm94LnBlcHBlcmkuY29tIiwicGVwcGVyaS53ZWJhcGliYXNldXJsIjoiaHR0cHM6Ly93ZWJhcGkuc2FuZGJveC5wZXBwZXJpLmNvbS9WMTZfNTAvV2ViQXBwXzYiLCJwZXBwZXJpLnB1YmxpY2FwaWJhc2V1cmwiOiJodHRwczovL2FwaS1zYW5kYm94LnBlcHBlcmkuY29tIiwicGVwcGVyaS5iYXNldXJsIjoiaHR0cHM6Ly9wYXBpLnNhbmRib3gucGVwcGVyaS5jb20vVjEuMCIsInBlcHBlcmkuZW1wbG95ZWV0eXBlIjoxLCJhbXIiOlsicHdkIl19.tNtZT3Cl4dMmTQftoaO2KP5BvHOlWGIP-5GpHrAhZoymBkxBSxpKprQGqr0ATtQlNHjX3gDV1W6k_avaSkyJgDiB2hcwr1tNRilasNuMzNV93gxLC9Oh_HdkIN4cZ0hahIcJvf_17PHpS8zD_MRwvGG_i45wRYJAtiGXChxCMzooethRsLOq5TEwuNbE3MxdjZOpImGYyytmsfdsdJRWQn1LQwQBt95ssuypcUzBsVB34P5XuFttjAe9dhTwHIfgsPG-VdfAWH_r-hVe834wKpKrplSWlC_MucgS0X4XP_tN4CtLnHO2wXKPsojqSTH2NQycfqh6YvT6rzRDBEdQIQ\";\r\n        const token = this.getIdpToken();\r\n        // token = token || tokenTest;\r\n\r\n        const decodedToken = this.jwtHelper.decodeToken(token);\r\n        // const expirationDate = this.jwtHelper.getTokenExpirationDate(token);\r\n        // const isExpired = this.jwtHelper.isTokenExpired(token);\r\n\r\n        return decodedToken;\r\n    }\r\n\r\n    setObject<T>(key: string, object: T): void {\r\n        const stringifiedObject =\r\n            (typeof object === 'string' || object instanceof String) ? object : JSON.stringify(object);\r\n\r\n        sessionStorage.setItem(key, stringifiedObject.toString());\r\n    }\r\n\r\n    getObject<T = any>(key: string): T {\r\n        let result = null;\r\n        const item = sessionStorage.getItem(key);\r\n\r\n        try {\r\n            result = item ? JSON.parse(item) as T : item;\r\n        }\r\n        catch {\r\n            result = item;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getPepperiConsumerToken(): string {\r\n        return this.PEPPERI_CONSUMER_TOKEN;\r\n    }\r\n\r\n    gettWapiToken(): string {\r\n        return this.getObject(this.WAPI_TOKEN_KEY);\r\n    }\r\n\r\n    getWapiBaseUrl(): string {\r\n        return this.getObject(this.WAPI_BASE_URL_KEY);\r\n    }\r\n\r\n    getIdpToken(): string {\r\n        return this.getObject(this.IDP_TOKEN_KEY);\r\n    }\r\n\r\n    getPapiBaseUrl(): string {\r\n        const tokenObj = this.getParseToken();\r\n        return tokenObj ? tokenObj[this.PAPI_BASE_URL_KEY] : null;\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n    HttpEvent,\r\n    HttpInterceptor,\r\n    HttpHandler,\r\n    HttpRequest,\r\n    HttpErrorResponse\r\n} from '@angular/common/http';\r\nimport { throwError, Observable, BehaviorSubject, of } from 'rxjs';\r\nimport { catchError, filter, finalize, take, switchMap } from 'rxjs/operators';\r\nimport { SessionService } from '../../common/services/session.service';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n    private AUTH_HEADER = 'Authorization';\r\n    private PEPPERI_TOKEN_HEADER = 'PepperiSessionToken';\r\n    private PEPPERI_CONSUMER_KEY_HEADER = 'X-Pepperi-ConsumerKey';\r\n\r\n    // private SESSION_TOKEN_KEY = 'auth_token';\r\n    // private token = 'secrettoken';\r\n    // private refreshTokenInProgress = false;\r\n    // private refreshTokenSubject: BehaviorSubject<any> = new BehaviorSubject<any>(null);\r\n\r\n    constructor(private sessionService: SessionService) {}\r\n\r\n    // Add authorization token if the token exist.\r\n    private addAuthorizationToken(request: HttpRequest<any>): HttpRequest<any> {\r\n        if (!request.headers.has(this.AUTH_HEADER)) {\r\n            const idpToken = this.sessionService.getIdpToken();\r\n\r\n            if (idpToken) {\r\n                request = request.clone({\r\n                    headers: request.headers.set(this.AUTH_HEADER, `Bearer ${idpToken}`)\r\n                });\r\n            }\r\n        }\r\n\r\n        return request;\r\n    }\r\n\r\n    // Add pepperi consumer token if calling to papi domain.\r\n    private addPepperiConsumerToken(request: HttpRequest<any>): HttpRequest<any> {\r\n        if (!request.headers.has(this.PEPPERI_CONSUMER_KEY_HEADER)) {\r\n            const papiBaseUrl = this.sessionService.getPapiBaseUrl();\r\n\r\n            if (papiBaseUrl && request.url.match(new RegExp(papiBaseUrl, 'g'))) {\r\n                const pepperiConsumerToken = this.sessionService.getPepperiConsumerToken();\r\n                if (pepperiConsumerToken) {\r\n                    request = request.clone({\r\n                        headers: request.headers.set(this.PEPPERI_CONSUMER_KEY_HEADER, pepperiConsumerToken)\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        return request;\r\n    }\r\n\r\n    // Add web api token if calling to wapi domain.\r\n    private addWebApiToken(request: HttpRequest<any>): HttpRequest<any> {\r\n        if (!request.headers.has(this.PEPPERI_TOKEN_HEADER)) {\r\n            const wapiBaseUrl = this.sessionService.getWapiBaseUrl();\r\n\r\n            if (wapiBaseUrl && request.url.match(new RegExp(wapiBaseUrl, 'g'))) {\r\n                const webApiToken = this.sessionService.gettWapiToken();\r\n                if (webApiToken) {\r\n                    request = request.clone({\r\n                        headers: request.headers.set(this.PEPPERI_TOKEN_HEADER, webApiToken)\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        return request;\r\n    }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        console.warn('AuthInterceptor');\r\n\r\n        // Add content type\r\n        if (!req.headers.has('Content-Type')) {\r\n            req = req.clone({\r\n                headers: req.headers.set('Content-Type', 'application/json')\r\n            });\r\n        }\r\n\r\n        req = this.addAuthorizationToken(req);\r\n\r\n        req = this.addPepperiConsumerToken(req);\r\n\r\n        req = this.addWebApiToken(req);\r\n\r\n        return next.handle(req);\r\n\r\n        // TODO: Check if we need this - this is an advance code that try to refresh the token in case of expired.\r\n        // return next.handle(req).pipe(\r\n        //     catchError((error: HttpErrorResponse) => {\r\n        //         if (error && error.status === 401) {\r\n        //             // 401 errors are most likely going to be because we have an expired token that we need to refresh.\r\n        //             if (this.refreshTokenInProgress) {\r\n        //                 // If refreshTokenInProgress is true, we will wait until refreshTokenSubject has a non-null value\r\n        //                 // which means the new token is ready and we can retry the request again\r\n        //                 return this.refreshTokenSubject.pipe(\r\n        //                     filter(result => result !== null),\r\n        //                     take(1),\r\n        //                     switchMap(() => next.handle(this.addAuthenticationToken(req)))\r\n        //                 );\r\n        //             } else {\r\n        //                 this.refreshTokenInProgress = true;\r\n\r\n        //                 // Set the refreshTokenSubject to null so that subsequent API calls will\r\n        //                 // wait until the new token has been retrieved\r\n        //                 this.refreshTokenSubject.next(null);\r\n\r\n        //                 return this.refreshAccessToken().pipe(\r\n        //                     switchMap((success: boolean) => {\r\n        //                         this.refreshTokenSubject.next(success);\r\n        //                         return next.handle(this.addAuthenticationToken(req));\r\n        //                     }),\r\n        //                     // When the call to refreshToken completes we reset the refreshTokenInProgress to false\r\n        //                     // for the next time the token needs to be refreshed\r\n        //                     finalize(() => (this.refreshTokenInProgress = false))\r\n        //                 );\r\n        //             }\r\n        //         } else {\r\n        //             return throwError(error);\r\n        //         }\r\n        //     })\r\n        // );\r\n    }\r\n\r\n    // private refreshAccessToken(): Observable<any> {\r\n    //     return of('secret token');\r\n    // }\r\n\r\n    // private addAuthenticationToken(request: HttpRequest<any>): HttpRequest<any> {\r\n    //     // If we do not have a token yet then we should not set the header.\r\n    //     // Here we could first retrieve the token from where we store it.\r\n    //     if (!this.token) {\r\n    //         return request;\r\n    //     }\r\n    //     // If you are calling an outside domain then do not add the token.\r\n    //     if (!request.url.match(/www.mydomain.com\\//)) {\r\n    //         return request;\r\n    //     }\r\n    //     return request.clone({\r\n    //         headers: request.headers.set(this.AUTH_HEADER, `Bearer ${this.token}`)\r\n    //     });\r\n    // }\r\n}","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpEvent,\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpInterceptor,\r\n  HttpErrorResponse\r\n} from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, retry } from 'rxjs/operators';\r\n// import { ToastrService } from 'ngx-toastr';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n    constructor(\r\n        // private toastr: ToastrService\r\n    ) {}\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        console.warn('ErrorInterceptor');\r\n\r\n        return next.handle(req)\r\n            .pipe(\r\n                // retry(2), TODO: Check if we want to retry\r\n                catchError((error: HttpErrorResponse) => {\r\n                    // 401 handled in auth.interceptor\r\n                    if (error.status !== 401) {\r\n                        // TODO: Show error in dialog.\r\n                        // this.toastr.error(error.message);\r\n                    }\r\n                    return throwError(error);\r\n                })\r\n            );\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { distinctUntilChanged } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class LoaderService {\r\n    counter = 0;\r\n    private showLoaderSubject: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n\r\n    get onChanged$(): Observable<boolean> {\r\n        return this.showLoaderSubject.asObservable().pipe(distinctUntilChanged());\r\n    }\r\n\r\n    constructor() {}\r\n\r\n    show() {\r\n        this.counter++;\r\n        this.showLoaderSubject.next(true);\r\n    }\r\n\r\n    hide() {\r\n        this.counter--;\r\n\r\n        if (this.counter === 0) {\r\n            this.showLoaderSubject.next(false);\r\n        }\r\n    }\r\n}","import { Injectable, Injector } from '@angular/core';\r\nimport {\r\n    HttpEvent,\r\n    HttpRequest,\r\n    HttpHandler,\r\n    HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { finalize, delay } from 'rxjs/operators';\r\nimport { LoaderService } from '../services/loader.service';\r\n\r\n@Injectable()\r\nexport class LoaderInterceptor implements HttpInterceptor {\r\n\r\n    constructor(private injector: Injector) {}\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        console.warn('LoaderInterceptor');\r\n\r\n        const loaderService = this.injector.get(LoaderService);\r\n        loaderService.show();\r\n\r\n        // TODO: Remove the delay.\r\n        return next.handle(req).pipe(\r\n            delay(3000),\r\n            finalize(() => loaderService.hide())\r\n        );\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport {\r\n    HttpEvent,\r\n    HttpRequest,\r\n    HttpHandler,\r\n    HttpInterceptor,\r\n    HttpResponse\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { tap, finalize } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ProfilerInterceptor implements HttpInterceptor {\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        console.warn('ProfilerInterceptor');\r\n\r\n        const started = Date.now();\r\n        let ok: string;\r\n\r\n        return next.handle(req).pipe(\r\n            tap(\r\n                // Succeeds when there is a response; ignore other events\r\n                (event: HttpEvent<any>) => {\r\n                    if (event instanceof HttpResponse) {\r\n                        ok = 'succeeded';\r\n                    }\r\n                },\r\n                // Operation failed; error is an HttpErrorResponse\r\n                error => (ok = 'failed')\r\n            ),\r\n            // Log when response observable either completes or errors\r\n            finalize(() => {\r\n                const elapsed = Date.now() - started;\r\n                const msg = `${req.method} \"${req.urlWithParams}\" ${ok} in ${elapsed} ms.`;\r\n                console.log(msg);\r\n            })\r\n        );\r\n    }\r\n}","import { HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { AuthInterceptor } from './auth.interceptor';\r\n// import { CacheInterceptor } from './cache.interceptor';\r\n// import { ConvertInterceptor } from './convert.interceptor';\r\nimport { ErrorInterceptor } from './error.interceptor';\r\n// import { FakeInterceptor } from './fake.interceptor';\r\n// import { HeaderInterceptor } from './header.interceptor';\r\nimport { LoaderInterceptor } from './loader.interceptor';\r\nimport { ProfilerInterceptor } from './profiler.interceptor';\r\n\r\nexport const httpInterceptorProviders = [\r\n  { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\r\n//   { provide: HTTP_INTERCEPTORS, useClass: CacheInterceptor, multi: true },\r\n//   { provide: HTTP_INTERCEPTORS, useClass: ConvertInterceptor, multi: true },\r\n  { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\r\n//   { provide: HTTP_INTERCEPTORS, useClass: FakeInterceptor, multi: true },\r\n//   { provide: HTTP_INTERCEPTORS, useClass: HeaderInterceptor, multi: true },\r\n  { provide: HTTP_INTERCEPTORS, useClass: LoaderInterceptor, multi: true },\r\n  { provide: HTTP_INTERCEPTORS, useClass: ProfilerInterceptor, multi: true },\r\n];\r\n","import { Injectable, Optional, Inject } from '@angular/core';\r\nimport { Subject, Observable, BehaviorSubject } from 'rxjs';\r\nimport { distinctUntilChanged } from 'rxjs/operators';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n// Const BIDI_RTL_LANGS Array\r\n// BIDI_RTL_LANGS ref: http://en.wikipedia.org/wiki/Right-to-left\r\n// Table of scripts in Unicode: https://en.wikipedia.org/wiki/Script_(Unicode)\r\nconst _BIDI_RTL_LANGS = [\r\n    'ae',\t/* Avestan */\r\n    'ar',   /* 'العربية', Arabic */\r\n    'arc',  /* Aramaic */\r\n    'bcc',  /* 'بلوچی مکرانی', Southern Balochi */\r\n    'bqi',  /* 'بختياري', Bakthiari */\r\n    'ckb',  /* 'Soranî / کوردی', Sorani */\r\n    'dv',   /* Dhivehi */\r\n    'fa',   /* 'فارسی', Persian */\r\n    'glk',  /* 'گیلکی', Gilaki */\r\n    'he',   /* 'עברית', Hebrew */\r\n    'ku',   /* 'Kurdî / كوردی', Kurdish */\r\n    'mzn',  /* 'مازِرونی', Mazanderani */\r\n    'nqo',  /* N'Ko */\r\n    'pnb',  /* 'پنجابی', Western Punjabi */\r\n    'ps',   /* 'پښتو', Pashto, */\r\n    'sd',   /* 'سنڌي', Sindhi */\r\n    'ug',   /* 'Uyghurche / ئۇيغۇرچە', Uyghur */\r\n    'ur',   /* 'اردو', Urdu */\r\n    'yi'    /* 'ייִדיש', Yiddish */\r\n];\r\n\r\nexport enum ORIENTATION {\r\n    Landscape,\r\n    Portrait,\r\n}\r\n\r\nexport enum SCREEN_SIZE {\r\n    XL,\r\n    LG,\r\n    MD,\r\n    SM,\r\n    XS,\r\n}\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class LayoutService {\r\n    private resizeSubject: BehaviorSubject<SCREEN_SIZE>;\r\n\r\n    get onResize$(): Observable<SCREEN_SIZE> {\r\n        return this.resizeSubject.asObservable().pipe(distinctUntilChanged());\r\n    }\r\n\r\n    constructor(private translate: TranslateService) {\r\n        this.resizeSubject = new BehaviorSubject(SCREEN_SIZE.LG);\r\n    }\r\n\r\n    /**\r\n     * Set the current screen size.\r\n     * @param size The size to change to.\r\n     */\r\n    onResize(size: SCREEN_SIZE): void {\r\n        this.resizeSubject.next(size);\r\n    }\r\n\r\n    public getOrintation(): ORIENTATION {\r\n        if (window.innerHeight > window.innerWidth) {\r\n            return ORIENTATION.Portrait;\r\n        } else {\r\n            return ORIENTATION.Landscape;\r\n        }\r\n    }\r\n\r\n    public getScreenWidth(): number {\r\n        let retVal = 250.0;\r\n        switch (this.resizeSubject.getValue()) {\r\n            case SCREEN_SIZE.XS: {\r\n                retVal = this.getOrintation() === ORIENTATION.Landscape ? 130.0 : 65.0;\r\n                break;\r\n            }\r\n            case SCREEN_SIZE.SM:\r\n            case SCREEN_SIZE.MD: {\r\n                retVal = this.getOrintation() === ORIENTATION.Landscape ? 220.0 : 140.0;\r\n                break;\r\n            }\r\n            case SCREEN_SIZE.LG: {\r\n                retVal = this.getOrintation() === ORIENTATION.Landscape ? 400.0 : 250.0;\r\n                break;\r\n            }\r\n        }\r\n        return retVal;\r\n    }\r\n\r\n    public getScreenHeight(): number {\r\n        let retVal = 250.0;\r\n        switch (this.resizeSubject.getValue()) {\r\n            case SCREEN_SIZE.XS: {\r\n                retVal = this.getOrintation() === ORIENTATION.Landscape ? 65.0 : 130.0;\r\n                break;\r\n            }\r\n            case SCREEN_SIZE.SM:\r\n            case SCREEN_SIZE.MD: {\r\n                retVal = this.getOrintation() === ORIENTATION.Landscape ? 140.0 : 220.0;\r\n                break;\r\n            }\r\n            case SCREEN_SIZE.LG: {\r\n                retVal = this.getOrintation() === ORIENTATION.Landscape ? 250.0 : 400.0;\r\n                break;\r\n            }\r\n        }\r\n        return retVal;\r\n    }\r\n\r\n    getScreenHeightPx(): number {\r\n        return window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\r\n    }\r\n\r\n    getScreenWidthPx(): number {\r\n        return window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\r\n    }\r\n\r\n    getCurrentLanguage(): string {\r\n        return this.translate && this.translate.currentLang || navigator.language;\r\n    }\r\n\r\n    public isRtl(): boolean {\r\n        const userLang = this.getCurrentLanguage();\r\n        const isRtl = _BIDI_RTL_LANGS.indexOf(userLang) >= 0;\r\n\r\n        return isRtl;\r\n    }\r\n}\r\n","import {Directive, Renderer2, ElementRef, OnInit} from '@angular/core';\r\nimport { LayoutService } from './layout.service';\r\n\r\n@Directive({\r\n    selector: '[pepRtlClass]',\r\n})\r\nexport class RtlClassDirective implements OnInit {\r\n    constructor(\r\n        private layoutService: LayoutService,\r\n        private renderer: Renderer2,\r\n        private element: ElementRef\r\n    ) {}\r\n\r\n    ngOnInit(): void {\r\n        const isRtl = this.layoutService.isRtl();\r\n\r\n        if (isRtl) {\r\n            this.renderer.addClass(this.element.nativeElement, 'rtl');\r\n        }\r\n    }\r\n}\r\n\r\n@Directive({\r\n    selector: '[pepRtlDirection]',\r\n})\r\nexport class RtlDirectionDirective implements OnInit {\r\n    constructor(\r\n        private layoutService: LayoutService,\r\n        private renderer: Renderer2,\r\n        private element: ElementRef\r\n    ) {}\r\n\r\n    ngOnInit(): void {\r\n        const isRtl = this.layoutService.isRtl();\r\n\r\n        this.renderer.setAttribute(this.element.nativeElement, 'dir', isRtl ? 'rtl' : 'ltr');\r\n    }\r\n}\r\n","import {Pipe, PipeTransform} from \"@angular/core\";\r\nimport { DomSanitizer, SafeHtml, SafeStyle, SafeScript, SafeUrl, SafeResourceUrl } from '@angular/platform-browser';\r\n\r\n@Pipe({ name: 'capitalize' })\r\nexport class CapitalizePipe implements PipeTransform {\r\n\r\n    transform(value: any) {\r\n        if (value) {\r\n            return value.charAt(0).toUpperCase() + value.slice(1);\r\n        }\r\n        return value;\r\n    }\r\n\r\n}\r\n\r\n@Pipe({ name: 'encodePipe' })\r\nexport class EncodePipe implements PipeTransform {\r\n\r\n    transform(value: any) {\r\n        if (value) {\r\n            const v = btoa(value);\r\n            return v;\r\n        }\r\n        return value;\r\n    }\r\n}\r\n\r\ndeclare function escape(s: string): string;\r\n\r\n@Pipe({ name: 'escapePipe' })\r\nexport class EscapePipe implements PipeTransform {\r\n\r\n    transform(value: any) {\r\n        if (value) {\r\n            const v = escape(value);\r\n            return v;\r\n        }\r\n        return value;\r\n    }\r\n}\r\n\r\n@Pipe({ name: 'replaceLineBreaks' })\r\nexport class ReplaceLineBreaks implements PipeTransform {\r\n    transform(value: string): string {\r\n        const newValue = value.replace(/(<br\\ ?\\/?>)/g, ' ');\r\n        return newValue;\r\n    }\r\n}\r\n\r\n@Pipe({ name: 'dateFormatter' })\r\nexport class DateFormatter implements PipeTransform {\r\n    transform(value: Date, culture: any, showTime: boolean = false): string {\r\n        let res = '';\r\n        value = new Date(value);\r\n        if (value) {\r\n            res = value.toLocaleDateString(culture || 'en-US');\r\n            if (showTime) {\r\n                res += ' ' + value.toLocaleTimeString((culture || 'en-US'), { hour: '2-digit', minute: '2-digit' });\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n}\r\n\r\n@Pipe({ name: 'dateStringFormatter' })\r\nexport class DateStringFormatter implements PipeTransform {\r\n    transform(value: string, culture: any, showTime: boolean = false): string {\r\n        let res = '';\r\n        const tmpDate = new Date(value);\r\n        if (value) {\r\n            res = tmpDate.toLocaleDateString(culture || 'en-US');\r\n            if (showTime) {\r\n                res += ' ' + tmpDate.toLocaleTimeString(culture || 'en-US');\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n}\r\n\r\n@Pipe({ name: 'safeHtml' })\r\nexport class SafeHtmlPipe implements PipeTransform {\r\n    constructor(private sanitizer: DomSanitizer) { }\r\n\r\n    transform(html) {\r\n        return this.sanitizer.bypassSecurityTrustHtml(html);\r\n    }\r\n}\r\n\r\n@Pipe({\r\n    name: 'safe'\r\n})\r\nexport class SafePipe implements PipeTransform {\r\n    constructor(protected sanitizer: DomSanitizer) { }\r\n\r\n    public transform(value: any, type: string): SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl {\r\n        switch (type) {\r\n            case 'html': return this.sanitizer.bypassSecurityTrustHtml(value);\r\n\r\n            case 'style': return this.sanitizer.bypassSecurityTrustStyle(value);\r\n\r\n            case 'script': return this.sanitizer.bypassSecurityTrustScript(value);\r\n\r\n            case 'url': return this.sanitizer.bypassSecurityTrustUrl(value);\r\n\r\n            case 'resourceUrl': return this.sanitizer.bypassSecurityTrustResourceUrl(value);\r\n\r\n            default: throw new Error(`Invalid safe type specified: ${type}`);\r\n\r\n        }\r\n    }\r\n}\r\n\r\n@Pipe({ name: 'splitUppercase' })\r\nexport class SplitUppercase implements PipeTransform {\r\n    transform(value: string): string {\r\n        const newValue = value.replace(/([a-z])([A-Z])/g, '$1 $2');\r\n        return newValue;\r\n    }\r\n}\r\n\r\n@Pipe({ name: 'toNumber' })\r\nexport class ToNumber implements PipeTransform {\r\n    transform(value: string): number {\r\n        return parseInt(value);\r\n    }\r\n}","import { Directive, HostListener, ElementRef } from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[pepButtonBlur]'\r\n})\r\nexport class ButtonBlurDirective {\r\n    constructor(private element: ElementRef) { }\r\n\r\n    @HostListener('click')\r\n    onClick(): void {\r\n        setTimeout(() => {\r\n            this.element.nativeElement.blur();\r\n        }, 0);\r\n    }\r\n}\r\n","\r\nimport { Directive, HostListener, ElementRef } from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[pepMenuBlur]'\r\n})\r\nexport class MenuBlurDirective {\r\n    constructor(private element: ElementRef) { }\r\n\r\n    @HostListener('menuClosed')\r\n    menuClosedEvent(): void {\r\n        setTimeout(() => {\r\n            this.element.nativeElement.blur();\r\n        }, 0);\r\n    }\r\n\r\n    @HostListener('menuOpened')\r\n    menuOpenedEvent(): void {\r\n        setTimeout(() => {\r\n            this.element.nativeElement.blur();\r\n        }, 0);\r\n    }\r\n}\r\n","import {Injectable, TemplateRef, ViewContainerRef} from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class PortalService {\r\n    private targets: Map<string, ViewContainerRef>;\r\n\r\n    constructor() {\r\n        this.targets = new Map<string, ViewContainerRef>();\r\n    }\r\n\r\n    addTarget(targetName: string, viewContainer: ViewContainerRef) {\r\n        this.targets.set(targetName, viewContainer);\r\n    }\r\n\r\n    attach(targetName: string, template: TemplateRef<any>) {\r\n        const target = this.getTarget(targetName);\r\n\r\n        if (target) {\r\n            target.createEmbeddedView(template);\r\n        }\r\n    }\r\n\r\n    clear(targetName: string) {\r\n        const target = this.getTarget(targetName);\r\n\r\n        if (target) {\r\n            target.clear();\r\n        }\r\n    }\r\n\r\n    private getTarget(targetName: string) {\r\n        return this.targets.has(targetName) ? this.targets.get(targetName) : null;\r\n    }\r\n}\r\n","import {Directive, OnInit, OnDestroy, Input, TemplateRef} from '@angular/core';\r\nimport {PortalService} from './portal.service';\r\n\r\n@Directive({\r\n    selector: '[pepAttach]',\r\n})\r\nexport class AttachDirective implements OnInit, OnDestroy {\r\n    @Input('pepAttach') targetName: string;\r\n\r\n    constructor(\r\n        private portalService: PortalService,\r\n        private templateRef: TemplateRef<any>\r\n    ) {}\r\n\r\n    ngOnInit(): void {\r\n        this.portalService.attach(this.targetName, this.templateRef);\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.portalService.clear(this.targetName);\r\n    }\r\n}\r\n","import {Directive, OnInit, Input, ViewContainerRef} from '@angular/core';\r\nimport {PortalService} from './portal.service';\r\n\r\n@Directive({\r\n    selector: '[pepTarget]',\r\n})\r\nexport class TargetDirective implements OnInit {\r\n    @Input('pepTarget') targetName: string;\r\n\r\n    constructor(\r\n        private portalService: PortalService,\r\n        private viewContainer: ViewContainerRef\r\n    ) {}\r\n\r\n    ngOnInit(): void {\r\n        this.portalService.addTarget(this.targetName, this.viewContainer);\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\nimport { httpInterceptorProviders } from './core/http/interceptors/index';\r\n\r\nimport { RtlClassDirective, RtlDirectionDirective } from './core/layout/rtl.directive';\r\nconst layoutList = [\r\n    RtlClassDirective,\r\n    RtlDirectionDirective,\r\n];\r\n\r\nimport {\r\n    CapitalizePipe,\r\n    EncodePipe,\r\n    EscapePipe,\r\n    ReplaceLineBreaks,\r\n    DateFormatter,\r\n    DateStringFormatter,\r\n    SafeHtmlPipe,\r\n    SafePipe,\r\n    SplitUppercase,\r\n    ToNumber\r\n} from './core/common/pipes/common-pipes';\r\nconst pipeList = [\r\n    CapitalizePipe,\r\n    EncodePipe,\r\n    EscapePipe,\r\n    ReplaceLineBreaks,\r\n    DateFormatter,\r\n    DateStringFormatter,\r\n    SafeHtmlPipe,\r\n    SafePipe,\r\n    SplitUppercase,\r\n    ToNumber\r\n];\r\n\r\nimport { ButtonBlurDirective } from './core/common/directives/button-blur.directive';\r\nimport { MenuBlurDirective } from './core/common/directives/menu-blur.directive';\r\nconst utilitiesList = [\r\n    ButtonBlurDirective,\r\n    MenuBlurDirective\r\n];\r\n\r\nimport { AttachDirective } from './core/portal/attach.directive';\r\nimport { TargetDirective } from './core/portal/target.directive';\r\n\r\nconst portalList = [\r\n    AttachDirective,\r\n    TargetDirective\r\n];\r\n\r\nimport {\r\n    TranslateModule,\r\n    // TranslateLoader,\r\n    // TranslateService,\r\n    // MissingTranslationHandler,\r\n    // MissingTranslationHandlerParams\r\n} from '@ngx-translate/core';\r\n\r\n// export class Loader implements TranslateLoader {\r\n//     private translations = new Subject();\r\n    \r\n//     $translations = this.translations.asObservable();\r\n//     getTranslation(lang: string) {\r\n//         console.log(`called with ${lang}`);\r\n//         return this.$translations;\r\n//     }\r\n// }\r\n\r\n// export class Missing implements MissingTranslationHandler {\r\n//     handle(params: MissingTranslationHandlerParams) {\r\n//         return 'missing in libary...';\r\n//     }\r\n// }\r\n\r\n// export function LoaderFactory() {\r\n//     return new Loader();\r\n// }\r\n\r\n@NgModule({\r\n    declarations: [\r\n        pipeList,\r\n        utilitiesList,\r\n        layoutList,\r\n        portalList\r\n    ],\r\n    providers: [\r\n        httpInterceptorProviders, \r\n        // TranslateService\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        HttpClientModule,\r\n        BrowserModule,\r\n        BrowserAnimationsModule,\r\n        ReactiveFormsModule,\r\n        FormsModule,\r\n        // TranslateModule.forChild({\r\n        //     loader: {\r\n        //         provide: TranslateLoader,\r\n        //         useFactory: LoaderFactory\r\n        //     },\r\n        //     missingTranslationHandler: {\r\n        //         provide: MissingTranslationHandler,\r\n        //         useClass: Missing\r\n        //     }\r\n        // }),\r\n    ],\r\n    exports: [\r\n        pipeList,\r\n        utilitiesList,\r\n        layoutList,\r\n        portalList,\r\n        TranslateModule\r\n    ],\r\n})\r\nexport class PepperiModule {\r\n    // static forRoot(): ModuleWithProviders<PepperiModule> {\r\n    //     return {\r\n    //         ngModule: PepperiModule,\r\n    //         providers: [CustomizationService]\r\n    //     };\r\n    // }\r\n\r\n    // static forRoot() {\r\n    //     return {\r\n    //       ngModule: PepperiModule,\r\n    //       providers: [ CustomizationService ]\r\n    //     }\r\n    // }\r\n}\r\n","\r\nexport enum FIELD_TYPE {\r\n    // specify text field\r\n    'Default' = 0,\r\n    'TextBox' = 1,\r\n    'LimitedLengthTextBox' = 2,\r\n    // specify text area field\r\n    'TextArea' = 3,\r\n    'TextHeader' = 4,\r\n    // specify date field\r\n    'Date' = 5,\r\n    // specify date & time field\r\n    'DateAndTime' = 6,\r\n    // specify integer field\r\n    'NumberInteger' = 7,\r\n    // specify decimal field\r\n    'NumberReal' = 8,\r\n    // specify currency field\r\n    'Currency' = 9,\r\n    // specify boolean field\r\n    'Boolean' = 10,\r\n    // specify multiple options field\r\n    'ComboBox' = 11,\r\n    // specify multiple options field\r\n    'MultiTickBox' = 12,\r\n    // specify separator (view only) field\r\n    'Separator' = 13,\r\n    // specify address field\r\n    'Address' = 14,\r\n    // specify percentage field\r\n    'Percentage' = 15,\r\n    'EmptyComboBox' = 16, // For Category, CPIPriceList, Special Price List (ComboBox Without Values)\r\n    'InternalLink' = 17, // for reps, Contacts, Locations & Catalogs\r\n    // specify email field\r\n    'Email' = 18,\r\n    'LimitedDate' = 19,\r\n    // specify image field\r\n    'Image' = 20,\r\n    'MultiTickBoxToComboBox' = 21,\r\n    'EmptyMultiTickBox' = 22,\r\n    'Totals' = 23,\r\n    // specify attachment field\r\n    'Attachment' = 24,\r\n    'Signature' = 25,\r\n    // specify link field\r\n    'Link' = 26,\r\n    // specify image url field\r\n    'ImageURL' = 27,\r\n    'NumberIntegerQuantitySelector' = 28, // hack for quantity selector in case of integer\r\n    'NumberRealQuantitySelector' = 29, // hack for quantity selector in case of double\r\n    'NumberIntegerForMatrix' = 30, // hack for integer in matrix\r\n    'NumberRealForMatrix' = 31, // hack for double in matrix\r\n    'Images' = 32, // hack for Images (for filmstrip and variants)\r\n    'Indicators' = 33, // Indicators is like address (group field that conains boolean fields).\r\n    'CalculatedReal' = 34,\r\n    'CalculatedInt' = 35,\r\n    'CalculatedString' = 36,\r\n    'CalculatedDate' = 37,\r\n    'CalculatedBool' = 38,\r\n    'MapDataDropDown' = 39,\r\n    'MapDataReal' = 40,\r\n    'MapDataString' = 41,\r\n    'MapDataInt' = 42,\r\n    'Sum' = 43,\r\n    'Phone' = 44,\r\n    'UrlForApi' = 45,\r\n    'ManyToManyUrlForApi' = 46,\r\n    'ReferenceType' = 47,\r\n    'GuidReferenceType' = 48,\r\n    'Button' = 49,\r\n    'InternalPage' = 50, // The old value was 45 - in the cpi project the \"InternalPage\" value is 50 so i fixed it!!!\r\n    'Duration' = 51,\r\n    'ListOfObjects' = 52,\r\n    'Package' = 53, // Package Quantity Selector\r\n    'BooleanText' = 55, // Boolean that return a string defined by the user in case of true/false\r\n    'RichTextHTML' = 56 // Html Text\r\n}\r\n\r\nexport class FieldLayout {\r\n    X: number;\r\n    Width: number;\r\n    XAlignment: number;\r\n    Y: number;\r\n    Height: number;\r\n    YAlignment: number;\r\n    LineNumber: number;\r\n\r\n    constructor(x = 0, width = 1, xAlignment = 1, y = 0, height = 1, yAlignment = 1, lineNumber = 1) {\r\n        this.X = x;\r\n        this.Width = width;\r\n        this.XAlignment = xAlignment;\r\n        this.Y = y;\r\n        this.Height = height;\r\n        this.YAlignment = yAlignment;\r\n        this.LineNumber = lineNumber;\r\n    }\r\n}\r\n\r\nexport class UIControlField {\r\n    Title: string;\r\n    MandatoryField = false;\r\n    Mandatory = false;\r\n    ReadOnlyField: boolean;\r\n    ReadOnly: boolean;\r\n    FieldConditions: any;\r\n    CustomField: any;\r\n    ApiName: string;\r\n    FieldType: FIELD_TYPE;\r\n    OptionalValues: any;\r\n    MinValue: number;\r\n    MaxValue: number;\r\n    MaxCharacters: number;\r\n    MaxLines: number;\r\n    Layout: FieldLayout; // { X: number; Height: number; Y: number; Width: number; XAlignment: number; YAlignment: number };\r\n    ColumnWidth: number;\r\n    ColumnWidthType: number;\r\n    FieldName: string;\r\n    DefaultValue: string;\r\n    Hidden: boolean;\r\n    ObjectTypeReference: any;\r\n    ParentField: string;\r\n    WrntyFieldName: string;\r\n    Editor: any;\r\n    minFieldWidth = 45;\r\n    calcColumnWidth = 10;\r\n    calcTitleColumnWidthString = '100%';\r\n    calcColumnWidthString = '100%';\r\n}\r\n\r\nexport class UIControl {\r\n    ObjectID: any;\r\n    Type: string;\r\n    DisplayName: string;\r\n    ControlFields: Array<UIControlField>;\r\n    Columns: number;\r\n}\r\n\r\nexport class ObjectsDataRowCell {\r\n    ApiName: string;\r\n    Enabled: boolean;\r\n    Value: any;\r\n    FormattedValue: any;\r\n    GroupFields: Array<ObjectsDataRowCell>;\r\n    Type: string;\r\n    FieldType: number;\r\n    OptionalValues: any;\r\n    AdditionalValue: string;\r\n    NotificationInfo: string;\r\n    ReferenceObjectType: string;\r\n    ReferenceObjectSubType: string;\r\n    Visible: boolean;\r\n    TextColor: string;\r\n}\r\n\r\nexport class ObjectsDataRow {\r\n    Fields: Array<ObjectsDataRowCell>;\r\n    AdditionalData: any;\r\n    UID: any;\r\n    Type: number;\r\n    BackgroundColor: string;\r\n    IsSelectableForActions = true;\r\n    IsEditable = true;\r\n    ExtraInfo: Map<string, string>;\r\n    MainAction: string;\r\n}\r\n\r\nexport class ObjectSingleData {\r\n    Success: boolean;\r\n    ErrorMessage: string;\r\n    Data: ObjectsDataRow;\r\n    Type: string;\r\n    UIControl: UIControl;\r\n    IsEditable: boolean;\r\n\r\n    constructor(uiControl: UIControl = null, data: ObjectsDataRow = null) {\r\n        this.Success = true;\r\n        this.ErrorMessage = '';\r\n        this.Type = '';\r\n\r\n        this.UIControl = uiControl;\r\n        this.Data = data;\r\n    }\r\n}\r\n\r\nexport class ObjectsData {\r\n    ErrorMessage: string;\r\n    Success: boolean;\r\n    Rows: Array<ObjectsDataRow>;\r\n    AllRows: Array<ObjectsDataRow>;\r\n    SearchCode: string;\r\n    TotalRows: number;\r\n    UIControl: UIControl;\r\n    TotalAmount: any;\r\n    CurrencySymbol: any;\r\n    SmartSearchList: Array<SmartSearchResponse>;\r\n\r\n    constructor() {\r\n        this.ErrorMessage = '';\r\n        this.Success = true;\r\n        this.TotalAmount = '0';\r\n        this.CurrencySymbol = '$';\r\n    }\r\n}\r\n\r\nexport class SmartSearchValues {\r\n    ApiName: string;\r\n    ComparisonType: string;\r\n    Value: string;\r\n    ValueRange: { Start: string; End: string };\r\n    Values: Array<string>;\r\n}\r\n\r\nexport class SmartSearchResponse {\r\n    ApiName: string;\r\n    FieldType: any;\r\n    Title: string;\r\n    Values: Array<KeyValuePair<string>>;\r\n    SmartSearchData: SmartSearchValues;\r\n}\r\n\r\nexport interface KeyValuePair<T> {\r\n    Key: string;\r\n    Value: T;\r\n}\r\n\r\nexport class PepperiFieldData {\r\n    ApiName: string;\r\n    Value: string;\r\n    FormattedValue?: string;\r\n    FieldType: FIELD_TYPE;\r\n    ColumnWidth: number;\r\n    ColumnWidthType?: number;\r\n    XAlignment: number;\r\n    Title: string;\r\n    AdditionalValue?: string;\r\n    OptionalValues?: any;\r\n\r\n    constructor(\r\n        options: {\r\n            ApiName?: string;\r\n            Value?: string;\r\n            FormattedValue?: string;\r\n            FieldType?: FIELD_TYPE;\r\n            ColumnWidth?: number;\r\n            ColumnWidthType?: number;\r\n            XAlignment?: number;\r\n            Title?: string;\r\n        } = {}\r\n    ) {\r\n        this.ApiName = options.ApiName;\r\n        this.Value = options.Value;\r\n        this.FormattedValue = options.FormattedValue || '';\r\n        this.FieldType = options.FieldType;\r\n        this.ColumnWidth = options.ColumnWidth;\r\n        this.ColumnWidthType = options.ColumnWidthType;\r\n        this.XAlignment = options.XAlignment;\r\n        this.Title = options.Title || '';\r\n    }\r\n}\r\n\r\nexport class PepperiRowData {\r\n    Fields: PepperiFieldData[];\r\n}\r\n","\r\nexport class Guid {\r\n    private static pad4(num: number): string {\r\n        let ret: string = num.toString(16);\r\n        while (ret.length < 4) {\r\n            ret = '0' + ret;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    private static random4(): string {\r\n        return Math.floor((1 + Math.random()) * 0x10000)\r\n            .toString(16)\r\n            .substring(1);\r\n    }\r\n\r\n    public static newGuid(): string {\r\n        // This is not build for -prod\r\n        // return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\r\n        //     const r = Math.random() * 16 | 0;\r\n        //     const v = c === 'x' ? r : (r & 0x3 | 0x8);\r\n        //     return v.toString(16);\r\n        // });\r\n\r\n        // If we have a cryptographically secure PRNG, use that\r\n        if (typeof (window) !== 'undefined' &&\r\n            typeof (window.crypto) !== 'undefined' &&\r\n            typeof (window.crypto.getRandomValues) !== 'undefined'\r\n        ) {\r\n            const buf: Uint16Array = new Uint16Array(8);\r\n            window.crypto.getRandomValues(buf);\r\n            return (this.pad4(buf[0]) + this.pad4(buf[1]) + '-' + this.pad4(buf[2]) + '-' + this.pad4(buf[3]) + '-' +\r\n                this.pad4(buf[4]) + '-' + this.pad4(buf[5]) + this.pad4(buf[6]) + this.pad4(buf[7]));\r\n        } else { // Otherwise, just use Math.random\r\n            return this.random4() + this.random4() + '-' + this.random4() + '-' + this.random4() + '-' +\r\n                this.random4() + '-' + this.random4() + this.random4() + this.random4();\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// export interface IKeyedCollection<T> {\r\n//     Add(key: string, value: T);\r\n//     ContainsKey(key: string): boolean;\r\n//     Count(): number;\r\n//     Item(key: string): T;\r\n//     Keys(): string[];\r\n//     Remove(key: string): T;\r\n//     RemoveAll();\r\n//     Values(): T[];\r\n// }\r\n\r\n// export class KeyedCollection<T> implements IKeyedCollection<T> {\r\n//     private items: { [index: string]: T } = {};\r\n//     private count: number = 0;\r\n\r\n//     initFromObj(collection: KeyedCollection<T>) {\r\n//         this.items = {};\r\n//         this.count = 0;\r\n//         const keys = [];\r\n\r\n//         for (const prop in collection.items) {\r\n//             if (collection.items.hasOwnProperty(prop)) {\r\n//                 this.Add(prop, collection.items[prop]);\r\n//             }\r\n//         }\r\n//     }\r\n\r\n//     public ContainsKey(key: string): boolean {\r\n//         return this.items.hasOwnProperty(key);\r\n//     }\r\n\r\n//     public Count(): number {\r\n//         return this.count;\r\n//     }\r\n\r\n//     public Add(key: string, value: T) {\r\n//         if (!this.ContainsKey(key)) {\r\n//             this.count++;\r\n//         }\r\n\r\n//         this.items[key] = value;\r\n//     }\r\n\r\n//     public Remove(key: string): T {\r\n//         var val = this.items[key];\r\n\r\n//         if (this.ContainsKey(key)) {\r\n//             delete this.items[key];\r\n//             this.count--;\r\n//         }\r\n\r\n//         return val;\r\n//     }\r\n\r\n//     public RemoveAll() {\r\n//         this.items = {};\r\n//         this.count = 0;\r\n//     }\r\n\r\n//     public Item(key: string): T {\r\n//         return this.items[key];\r\n//     }\r\n\r\n//     public Keys(): string[] {\r\n//         var keySet: string[] = [];\r\n\r\n//         for (var prop in this.items) {\r\n//             if (this.items.hasOwnProperty(prop)) {\r\n//                 keySet.push(prop);\r\n//             }\r\n//         }\r\n\r\n//         return keySet;\r\n//     }\r\n\r\n//     public Values(): T[] {\r\n//         var values: T[] = [];\r\n\r\n//         for (var prop in this.items) {\r\n//             if (this.items.hasOwnProperty(prop)) {\r\n//                 values.push(this.items[prop]);\r\n//             }\r\n//         }\r\n\r\n//         return values;\r\n//     }\r\n// }\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpErrorResponse, HttpParams, HttpHeaders } from '@angular/common/http';\r\nimport { throwError, Observable } from 'rxjs';\r\nimport { retry, catchError, tap } from 'rxjs/operators';\r\nimport { SessionService } from '../../common/services/session.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class HttpService {\r\n    constructor(\r\n        private sessionService: SessionService,\r\n        private http: HttpClient) {\r\n    }\r\n\r\n    getTextFile(filename: string) {\r\n        // The Observable returned by get() is of type Observable<string>\r\n        // because a text response was specified.\r\n        // There's no need to pass a <string> type parameter to get().\r\n        // return this.http.get(filename, {responseType: 'text'})\r\n        //     .pipe(\r\n        //         tap( // Log the result or error\r\n        //         data => this.log(filename, data),\r\n        //         error => this.logError(filename, error)\r\n        //         )\r\n        // );\r\n    }\r\n\r\n    getHttpCall(url: string, httpOptions = {}): Observable<any> {\r\n        return this.http.get(url, httpOptions)\r\n            .pipe(catchError(this.handleError.bind(this)));\r\n        //     .subscribe(\r\n        //         (res) => console.log(''),\r\n        //         (error) => console.log(''),\r\n        //         () => {}\r\n        // );\r\n    }\r\n\r\n    postHttpCall(url: string, body = {}, httpOptions = {}): Observable<any> {\r\n        return this.http.post(url, body, httpOptions)\r\n            .pipe(catchError(this.handleError.bind(this)));\r\n        //     .subscribe(\r\n        //         (res) => console.log(''),\r\n        //         (error) => console.log(''),\r\n        //         () => {}\r\n        // );\r\n    }\r\n\r\n    getWapiApiCall(url: string, httpOptions = {}): Observable<any> {\r\n        const wapiBaseUrl = this.sessionService.getWapiBaseUrl();\r\n        return this.getHttpCall(`${wapiBaseUrl}${url}`, httpOptions);\r\n    }\r\n\r\n    postWapiApiCall(url: string, body = {}, httpOptions = {}): Observable<any> {\r\n        const wapiBaseUrl = this.sessionService.getWapiBaseUrl();\r\n        return this.postHttpCall(`${wapiBaseUrl}${url}`, body, httpOptions);\r\n    }\r\n\r\n    getPapiApiCall(url: string, httpOptions = {}): Observable<any> {\r\n        const papiBaseUrl = this.sessionService.getPapiBaseUrl();\r\n        return this.getHttpCall(`${papiBaseUrl}${url}`, httpOptions);\r\n    }\r\n\r\n    postPapiApiCall(url: string, body = {}, httpOptions = {}): Observable<any> {\r\n        const papiBaseUrl = this.sessionService.getPapiBaseUrl();\r\n        return this.postHttpCall(`${papiBaseUrl}${url}`, body, httpOptions);\r\n    }\r\n\r\n    private handleError(error: HttpErrorResponse): Observable<never> {\r\n        let errorMessage = 'Unknown error!';\r\n        if (error.error instanceof ErrorEvent) {\r\n            // Client-side errors\r\n            errorMessage = `Error: ${error.error.message}`;\r\n        } else {\r\n            // Server-side errors\r\n            errorMessage = this.getServerErrorMessage(error);\r\n        }\r\n\r\n        return throwError(errorMessage);\r\n    }\r\n\r\n    private getServerErrorMessage(error: HttpErrorResponse): string {\r\n        switch (error.status) {\r\n            case 404: {\r\n                return `Not Found: ${error.message}`;\r\n            }\r\n            case 403: {\r\n                return `Access Denied: ${error.message}`;\r\n            }\r\n            case 500: {\r\n                return `Internal Server Error: ${error.message}`;\r\n            }\r\n            default: {\r\n                return `Unknown Server Error\\nError Code: ${error.status}\\nMessage: ${error.message}`;\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { SessionService } from './session.service';\r\nimport { HttpService } from '../../http/services/http.service';\r\nimport { Observable } from 'rxjs';\r\n\r\n/*\r\n    This service is the webapp api for addon usege.\r\n*/\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AddonService {\r\n    private readonly ADDON_ASSETS_PATH_KEY = 'AddonAssetsPath';\r\n\r\n    constructor(\r\n        private sessionService: SessionService,\r\n        private httpService: HttpService\r\n    ) {}\r\n\r\n    getAddonStaticFolder(): string {\r\n        // return this.assetsPath;\r\n        return this.sessionService.getObject(this.ADDON_ASSETS_PATH_KEY) || '';\r\n    }\r\n\r\n    setAddonStaticFolder(path: string): void {\r\n        // this.assetsPath = path;\r\n        return this.sessionService.setObject(this.ADDON_ASSETS_PATH_KEY, path);\r\n    }\r\n\r\n    getAddonApiCall(\r\n        addonUUID: string,\r\n        fileName: string,\r\n        functionName: string,\r\n        httpOptions = {}): Observable<any>{\r\n        return this.httpService.getPapiApiCall(`/addons/api/${addonUUID}/${fileName}/${functionName}`, httpOptions);\r\n    }\r\n\r\n    postAddonApiCall(\r\n        addonUUID: string,\r\n        fileName: string,\r\n        functionName: string,\r\n        body = {},\r\n        httpOptions = {}): Observable<any>  {\r\n        return this.httpService.postPapiApiCall(`/addons/api/${addonUUID}/${fileName}/${functionName}`, body, httpOptions);\r\n    }\r\n}","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Injectable, Inject, PLATFORM_ID, InjectionToken, Optional } from '@angular/core';\r\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CookieService {\r\n    private readonly documentIsAccessible: boolean;\r\n\r\n    constructor(\r\n        @Optional() @Inject(DOCUMENT) private document: any,\r\n        @Inject(PLATFORM_ID) private platformId: InjectionToken<object>\r\n    ) {\r\n        this.documentIsAccessible = isPlatformBrowser(this.platformId);\r\n    }\r\n\r\n    /**\r\n     * @param name Cookie name\r\n     * @returns boolean - whether cookie with specified name exists\r\n     */\r\n    check(name: string): boolean {\r\n        if (!this.documentIsAccessible) {\r\n            return false;\r\n        }\r\n\r\n        name = encodeURIComponent(name);\r\n\r\n        const regExp: RegExp = this.getCookieRegExp(name);\r\n        const exists: boolean = regExp.test(this.document.cookie);\r\n\r\n        return exists;\r\n    }\r\n\r\n    /**\r\n     * @param name Cookie name\r\n     * @returns property value\r\n     */\r\n    get(name: string): string {\r\n        if (this.documentIsAccessible && this.check(name)) {\r\n            name = encodeURIComponent(name);\r\n\r\n            const regExp: RegExp = this.getCookieRegExp(name);\r\n            const result: RegExpExecArray = regExp.exec(this.document.cookie);\r\n\r\n            return this.safeDecodeURIComponent(result[1]);\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @returns all the cookies in json\r\n     */\r\n    getAll(): { [key: string]: string } {\r\n        if (!this.documentIsAccessible) {\r\n            return {};\r\n        }\r\n\r\n        const cookies: { [key: string]: string } = {};\r\n        const document: any = this.document;\r\n\r\n        if (document.cookie && document.cookie !== '') {\r\n            document.cookie.split(';').forEach((currentCookie) => {\r\n                const [cookieName, cookieValue] = currentCookie.split('=');\r\n                cookies[this.safeDecodeURIComponent(cookieName.replace(/^ /, ''))] = this.safeDecodeURIComponent(cookieValue);\r\n            });\r\n        }\r\n\r\n        return cookies;\r\n    }\r\n\r\n    /**\r\n     * @param name     Cookie name\r\n     * @param value    Cookie value\r\n     * @param expires  Number of days until the cookies expires or an actual `Date`\r\n     * @param path     Cookie path\r\n     * @param domain   Cookie domain\r\n     * @param secure   Secure flag\r\n     * @param sameSite OWASP samesite token `Lax`, `None`, or `Strict`. Defaults to `Lax`\r\n     */\r\n    set(\r\n        name: string,\r\n        value: string,\r\n        expires?: number | Date,\r\n        path?: string,\r\n        domain?: string,\r\n        secure?: boolean,\r\n        sameSite: 'Lax' | 'None' | 'Strict' = 'Lax'\r\n    ): void {\r\n        if (!this.documentIsAccessible) {\r\n            return;\r\n        }\r\n\r\n        let cookieString: string = encodeURIComponent(name) + '=' + encodeURIComponent(value) + ';';\r\n\r\n        if (expires) {\r\n            if (typeof expires === 'number') {\r\n                const dateExpires: Date = new Date(new Date().getTime() + expires * 1000 * 60 * 60 * 24);\r\n\r\n                cookieString += 'expires=' + dateExpires.toUTCString() + ';';\r\n            } else {\r\n                cookieString += 'expires=' + expires.toUTCString() + ';';\r\n            }\r\n        }\r\n\r\n        if (path) {\r\n            cookieString += 'path=' + path + ';';\r\n        }\r\n\r\n        if (domain) {\r\n        cookieString += 'domain=' + domain + ';';\r\n        }\r\n\r\n        if (secure === false && sameSite === 'None') {\r\n            secure = true;\r\n        }\r\n        if (secure) {\r\n            cookieString += 'secure;';\r\n        }\r\n\r\n        cookieString += 'sameSite=' + sameSite + ';';\r\n\r\n        this.document.cookie = cookieString;\r\n    }\r\n\r\n    /**\r\n     * @param name   Cookie name\r\n     * @param path   Cookie path\r\n     * @param domain Cookie domain\r\n     */\r\n    delete(name: string, path?: string, domain?: string, secure?: boolean, sameSite: 'Lax' | 'None' | 'Strict' = 'Lax'): void {\r\n        if (!this.documentIsAccessible) {\r\n            return;\r\n        }\r\n\r\n        this.set(name, '', new Date('Thu, 01 Jan 1970 00:00:01 GMT'), path, domain, secure, sameSite);\r\n    }\r\n\r\n    /**\r\n     * @param path   Cookie path\r\n     * @param domain Cookie domain\r\n     */\r\n    deleteAll(path?: string, domain?: string, secure?: boolean, sameSite: 'Lax' | 'None' | 'Strict' = 'Lax'): void {\r\n        if (!this.documentIsAccessible) {\r\n            return;\r\n        }\r\n\r\n        const cookies: any = this.getAll();\r\n\r\n        for (const cookieName in cookies) {\r\n            if (cookies.hasOwnProperty(cookieName)) {\r\n                this.delete(cookieName, path, domain, secure, sameSite);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param name Cookie name\r\n     * @returns property RegExp\r\n     */\r\n    private getCookieRegExp(name: string): RegExp {\r\n        const escapedName: string = name.replace(/([\\[\\]\\{\\}\\(\\)\\|\\=\\;\\+\\?\\,\\.\\*\\^\\$])/gi, '\\\\$1');\r\n\r\n        return new RegExp('(?:^' + escapedName + '|;\\\\s*' + escapedName + ')=(.*?)(?:;|$)', 'g');\r\n    }\r\n\r\n    private safeDecodeURIComponent(encodedURIComponent: string): string {\r\n        try {\r\n            return decodeURIComponent(encodedURIComponent);\r\n        } catch {\r\n            // probably it is not uri encoded. return as is\r\n            return encodedURIComponent;\r\n        }\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\n\r\nexport enum FileTypeEnum {\r\n    'Script' = 1,\r\n    'Style' = 2,\r\n}\r\n\r\nexport interface ExternalFileModel {\r\n    path: string;\r\n    type: FileTypeEnum;\r\n}\r\n\r\ndeclare var document: any;\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class FileService {\r\n    private scripts: Map<string, {loaded: boolean; src: string}>;\r\n    private styles: Map<string, {loaded: boolean; src: string}>;\r\n\r\n    constructor() {\r\n        this.scripts = new Map<string, {loaded: boolean; src: string}>();\r\n        this.styles = new Map<string, {loaded: boolean; src: string}>();\r\n    }\r\n\r\n    loadFiles(files: ExternalFileModel[]): Promise<any[]> {\r\n        const promises: any[] = [];\r\n        files.forEach((file) => {\r\n            if (file.type === FileTypeEnum.Style) {\r\n                promises.push(this.loadStyle(file.path));\r\n            } else if (file.type === FileTypeEnum.Script) {\r\n                promises.push(this.loadScript(file.path));\r\n            }\r\n        });\r\n        return Promise.all(promises);\r\n    }\r\n\r\n    removeFiles(files: ExternalFileModel[]): void {\r\n        for (let index = 0; index < files.length && files[index].path && files[index].path.trim() !== ''; index++) {\r\n            const name = this.getFileName(files[index].path, true);\r\n            const element = document.getElementById(name);\r\n            element.parentNode.removeChild(element);\r\n\r\n            if (files[index].type === FileTypeEnum.Script && this.scripts.has(name)) {\r\n                this.scripts.delete(name);\r\n            } else if (files[index].type === FileTypeEnum.Style && this.styles.has(name)) {\r\n                this.styles.delete(name);\r\n            }\r\n        }\r\n    }\r\n\r\n    loadScript(path: string): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n            const name = this.getFileName(path, true);\r\n\r\n            // If the script isn't exist add it.\r\n            if (!this.scripts.has(name)) {\r\n                this.scripts.set(name, {loaded: false, src: path});\r\n            }\r\n\r\n            const scriptItem = this.scripts.get(name);\r\n\r\n            // Resolve if already loaded\r\n            if (scriptItem.loaded) {\r\n                resolve({script: name, loaded: true, status: 'Already Loaded'});\r\n            } else {\r\n                // Load script\r\n                const script = document.createElement('script');\r\n                script.type = 'text/javascript';\r\n                script.src = scriptItem.src;\r\n                script.setAttribute('id', name);\r\n                script.async = false;\r\n\r\n                if (script.readyState) {\r\n                    // IE\r\n                    script.onreadystatechange = () => {\r\n                        if (script.readyState === 'loaded' || script.readyState === 'complete') {\r\n                            script.onreadystatechange = null;\r\n                            scriptItem.loaded = true;\r\n                            resolve({path, type: FileTypeEnum.Script, loaded: true, status: 'Loaded'});\r\n                        }\r\n                    };\r\n                } else {\r\n                    // Others\r\n                    script.onload = () => {\r\n                        scriptItem.loaded = true;\r\n                        resolve({path, type: FileTypeEnum.Script, loaded: true, status: 'Loaded'});\r\n                    };\r\n                }\r\n                script.onerror = (error: any) => resolve({path, type: FileTypeEnum.Script, loaded: false, status: 'Loaded'});\r\n                document.getElementsByTagName('head')[0].appendChild(script);\r\n            }\r\n        });\r\n    }\r\n\r\n    loadStyle(path: string): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n            const name = this.getFileName(path, true);\r\n\r\n            // If the style isn't exist add it.\r\n            if (!this.styles.has(name)) {\r\n                this.styles.set(name, {loaded: false, src: path});\r\n            }\r\n\r\n            const styleItem = this.styles.get(name);\r\n\r\n            // Resolve if already loaded\r\n            if (styleItem.loaded) {\r\n                resolve({path, type: FileTypeEnum.Style, loaded: true, status: 'Already Loaded'});\r\n            } else {\r\n                // Load style\r\n                const style = document.createElement('link');\r\n                style.type = 'text/css';\r\n                style.rel = 'stylesheet';\r\n                style.href = styleItem.src;\r\n                style.media = 'all';\r\n                style.setAttribute('id', name);\r\n\r\n                styleItem.loaded = true;\r\n                resolve({path, type: FileTypeEnum.Style, loaded: true, status: 'Loaded'});\r\n\r\n                document.getElementsByTagName('head')[0].appendChild(style);\r\n            }\r\n        });\r\n    }\r\n\r\n    getFileName(filePath: string, withExtenstion: boolean = false): string {\r\n        let lastIndex = withExtenstion ? filePath.length - 1 : filePath.lastIndexOf('.');\r\n\r\n        return filePath.substr(filePath.lastIndexOf('/') + 1, lastIndex);\r\n    }\r\n\r\n    getFileExtension(filePath: string): string {\r\n        var fileSplit = filePath.split('.');\r\n        var fileExt = '';\r\n        if (fileSplit.length > 1) {\r\n            fileExt = fileSplit[fileSplit.length - 2];\r\n        }\r\n        return fileExt;\r\n    }\r\n\r\n    /* Returns true if url is valid */\r\n    isValidUrl(url: string): boolean {\r\n        /* Try creating a valid URL */\r\n        try {\r\n            const tmp = new URL(url);\r\n            return true;\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    convertFromb64toBlob(b64Data: any, contentType = '', sliceSize = 512): Blob {\r\n        const byteCharacters = atob(b64Data);\r\n        const byteArrays = [];\r\n\r\n        for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\r\n            const slice = byteCharacters.slice(offset, offset + sliceSize);\r\n\r\n            const byteNumbers = new Array(slice.length);\r\n            for (let i = 0; i < slice.length; i++) {\r\n                byteNumbers[i] = slice.charCodeAt(i);\r\n            }\r\n\r\n            const byteArray = new Uint8Array(byteNumbers);\r\n            byteArrays.push(byteArray);\r\n        }\r\n\r\n        const blob = new Blob(byteArrays, {type: contentType});\r\n        return blob;\r\n    }\r\n\r\n    getAssetsPath(): string {\r\n        return `/assets/ngx-lib/`;\r\n    }\r\n\r\n    getAssetsTranslationsPath(): string {\r\n        return `${this.getAssetsPath()}i18n/`;\r\n    }\r\n\r\n    getAssetsImagesPath(image: string = ''): string {\r\n        return `${this.getAssetsPath()}images/${image}`;\r\n    }\r\n\r\n    getNoImagePath(): string {\r\n        return this.getAssetsImagesPath('no-image.svg');\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport { FieldLayout, PepperiRowData, ObjectSingleData, ObjectsDataRow, UIControl,\r\n    ObjectsData, PepperiFieldData, UIControlField, ObjectsDataRowCell } from '../model/api.model';\r\nimport { Guid } from '../model/utilities.model';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class DataConvertorService {\r\n    constructor() {\r\n    }\r\n\r\n    convertFormData(formData: PepperiRowData): ObjectSingleData {\r\n        const objectsData = new ObjectSingleData();\r\n        const rowData = new ObjectsDataRow();\r\n        const uiRow = formData.Fields;\r\n        const uiControl = new UIControl();\r\n        uiControl.ControlFields = [];\r\n        uiRow.forEach( field => uiControl.ControlFields.push( this.setUIControlField(field) ));\r\n        rowData.Fields = [];\r\n        rowData.Type = 0;\r\n        rowData.UID = Guid.newGuid();\r\n        formData.Fields.forEach(field => rowData.Fields.push(this.setDataField(field)));\r\n        objectsData.Data = rowData;\r\n        objectsData.UIControl = uiControl;\r\n\r\n        return objectsData;\r\n    }\r\n\r\n    convertListData(tableData: PepperiRowData[]): ObjectsData {\r\n        const objectsData = new ObjectsData();\r\n        const rows = new Array<ObjectsDataRow>();\r\n        const uiRow = tableData[0].Fields;\r\n        const uiControl = new UIControl();\r\n\r\n        uiControl.ControlFields = [];\r\n        uiRow.forEach( field => uiControl.ControlFields.push(this.setUIControlField(field)));\r\n\r\n        tableData.forEach( row => {\r\n            const rowData = new ObjectsDataRow();\r\n            rowData.Fields = [];\r\n            rowData.Type = 0;\r\n            rowData.UID = Guid.newGuid();\r\n            row.Fields.forEach(field => rowData.Fields.push(this.setDataField(field)));\r\n            rows.push(rowData);\r\n        });\r\n\r\n        objectsData.Rows = rows;\r\n        objectsData.UIControl = uiControl;\r\n\r\n        return objectsData;\r\n    }\r\n\r\n    setUIControlField(field: PepperiFieldData): UIControlField {\r\n        const controlField = new UIControlField();\r\n        controlField.ApiName = field.ApiName;\r\n        controlField.FieldType = field.FieldType;\r\n        // { X: 1, Width: 1, XAlignment: field.XAlignment, Y: 1, Height: 1, YAlignment: 1 };\r\n        controlField.Layout = new FieldLayout(1, 1, field.XAlignment, 1, 1, 1);\r\n        controlField.Title =  field.Title;\r\n        controlField.ReadOnly =  false;\r\n        controlField.ColumnWidth = field.ColumnWidth;\r\n        controlField.ColumnWidthType = field.ColumnWidthType || 1;\r\n        return controlField;\r\n    }\r\n\r\n    setDataField(field: PepperiFieldData): ObjectsDataRowCell {\r\n        const dataField = new ObjectsDataRowCell();\r\n        dataField.AdditionalValue = field.AdditionalValue;\r\n        dataField.ApiName = field.ApiName;\r\n        dataField.Enabled = true;\r\n        dataField.FieldType = field.FieldType;\r\n        dataField.FormattedValue = field.FormattedValue || field.Value.toString();\r\n        dataField.GroupFields = null;\r\n        dataField.NotificationInfo = '';\r\n        dataField.OptionalValues = field.OptionalValues;\r\n        dataField.ReferenceObjectSubType = '';\r\n        dataField.TextColor = '';\r\n        dataField.Value = field.Value.toString();\r\n        dataField.Visible = true;\r\n        dataField.Type = '0';\r\n        return dataField;\r\n    }\r\n\r\n    setFieldLayout(x: number, width: number, xAlignment: number,\r\n                   y: number, height: number, yAlignment: number, lineNumber: number): FieldLayout {\r\n        const layout = new FieldLayout(x, width, xAlignment, y, height, yAlignment, lineNumber);\r\n        return layout;\r\n    }\r\n}\r\n","import { FIELD_TYPE } from '../common/model/api.model';\r\n\r\nexport enum LAYOUT_TYPE {\r\n    PepperiForm,\r\n    PepperiCard,\r\n    PepperiTable,\r\n    // PepperiCampaign,\r\n    Editmodal,\r\n}\r\n\r\nexport enum STYLE_TYPE {\r\n    Weak = 'weak',\r\n    Regular = 'regular',\r\n    Strong = 'strong',\r\n}\r\n\r\nexport class PepperiOption {\r\n    Key: string;\r\n    Value: string;\r\n}\r\n\r\nexport class PepperiFieldBase {\r\n    value: any;\r\n    formattedValue: any;\r\n    additionalValue: string;\r\n    notificationInfo: any = {};\r\n    key: string;\r\n    label: string;\r\n    accessory: string;\r\n    required: boolean;\r\n    readonly: boolean;\r\n    disabled: boolean;\r\n    order: number;\r\n    type: string;\r\n    controlType: string;\r\n    placeholder: string;\r\n    hidden: boolean;\r\n    row: number;\r\n    rowSpan: number;\r\n    col: number;\r\n    colSpan: number;\r\n    xAlignment: number;\r\n    yAlignment: number;\r\n    groupFields: PepperiFieldBase[];\r\n    maxFieldCharacters: number;\r\n    minValue: number;\r\n    maxValue: number;\r\n    textColor: string;\r\n    updatedDataCount: number;\r\n    lastFocusField: any;\r\n    options: PepperiOption[];\r\n\r\n    constructor(\r\n        options: {\r\n            value?: any;\r\n            formattedValue?: any;\r\n            additionalValue?: string;\r\n            notificationInfo?: any;\r\n            key?: string;\r\n            label?: string;\r\n            accessory?: string;\r\n            required?: boolean;\r\n            readonly?: boolean;\r\n            disabled?: boolean;\r\n            order?: number;\r\n            controlType?: string;\r\n            type?: string;\r\n            placeholder?: string;\r\n            hidden?: string;\r\n            row?: number;\r\n            rowSpan?: number;\r\n            col?: number;\r\n            colSpan?: number;\r\n            xAlignment?: number;\r\n            yAlignment?: number;\r\n            maxFieldCharacters?: number;\r\n            minValue?: number;\r\n            maxValue?: number;\r\n            textColor?: string;\r\n            lastFocusField?: any;\r\n        } = {}\r\n    ) {\r\n        this.value = options.value;\r\n        this.formattedValue = options.formattedValue;\r\n        this.additionalValue = options.additionalValue;\r\n        this.notificationInfo = options.notificationInfo;\r\n        this.key = options.key || '';\r\n        this.label = options.label || '';\r\n        this.accessory = options.accessory || '';\r\n        this.required = !!options.required;\r\n        this.readonly = !!options.readonly;\r\n        this.disabled = !!options.disabled;\r\n        this.order = options.order === undefined ? 1 : options.order;\r\n        this.controlType = options.controlType || '';\r\n        this.type = options.type || '';\r\n        this.placeholder = options.placeholder || '';\r\n        this.hidden = !!options.hidden;\r\n\r\n        this.row = options.row === undefined ? 1 : options.row;\r\n        this.rowSpan = options.rowSpan === undefined ? 1 : options.rowSpan;\r\n        this.col = options.col === undefined ? 1 : options.col;\r\n        this.colSpan = options.colSpan === undefined ? 1 : options.colSpan;\r\n\r\n        this.xAlignment = options.xAlignment === undefined ? 1 : options.xAlignment;\r\n        this.yAlignment = options.yAlignment === undefined ? 1 : options.yAlignment;\r\n\r\n        this.maxFieldCharacters = options.maxFieldCharacters === undefined ? 0 : options.maxFieldCharacters;\r\n        this.minValue = options.minValue === undefined ? 0 : options.minValue;\r\n        this.maxValue = options.maxValue === undefined ? 0 : options.maxValue;\r\n\r\n        this.textColor = options.textColor || '';\r\n        this.lastFocusField = options.lastFocusField || null;\r\n\r\n        this.updatedDataCount = 0;\r\n    }\r\n\r\n    public updateField(updatedField: any, canEditObject: boolean, lastFocusField: any = null): void {\r\n        this.disabled = !updatedField.Enabled || !canEditObject;\r\n        this.readonly = !updatedField.Enabled || !canEditObject;\r\n        this.value = updatedField.Value;\r\n        this.additionalValue = updatedField.AdditionalValue;\r\n        this.formattedValue = updatedField.FormattedValue;\r\n        this.notificationInfo = updatedField.NotificationInfo;\r\n        this.textColor = updatedField.TextColor;\r\n        this.lastFocusField = lastFocusField;\r\n\r\n        if (this.controlType === 'qs') {\r\n            this.updatedDataCount += 1;\r\n        }\r\n        if (this.type === 'link') {\r\n            // DI-11292 - add changes for link field for the \"Read Only display value\" prop\r\n            this.formattedValue =\r\n                this.disabled && this.formattedValue !== null && this.value !== null ? this.formattedValue : this.value;\r\n        }\r\n    }\r\n}\r\n\r\nexport class PepperiPlaceholderField extends PepperiFieldBase {\r\n    controlType = 'placeholder';\r\n\r\n    constructor(options: any = {}) {\r\n        super(options);\r\n    }\r\n}\r\n\r\nexport class PepperiSeparatorField extends PepperiFieldBase {\r\n    controlType = 'separator';\r\n\r\n    constructor(options: any = {}) {\r\n        super(options);\r\n    }\r\n}\r\n\r\nexport class PepperiButtonField extends PepperiFieldBase {\r\n    controlType = 'button';\r\n    referenceObjectType;\r\n    referenceObjectSubType = '';\r\n    referenceObjectInternalType = '';\r\n\r\n    constructor(options: any = {}) {\r\n        super(options);\r\n\r\n        this.referenceObjectType = options.referenceObjectType || null;\r\n        this.referenceObjectSubType = options.referenceObjectSubType || null;\r\n        this.referenceObjectInternalType = options.referenceObjectInternalType || null;\r\n    }\r\n}\r\n\r\nexport class PepperiAttachmentField extends PepperiFieldBase {\r\n    controlType = 'attachment';\r\n\r\n    constructor(options: any = {}) {\r\n        super(options);\r\n    }\r\n}\r\n\r\nexport class PepperiIndicatorsField extends PepperiFieldBase {\r\n    controlType = 'indicators';\r\n\r\n    constructor(options: any = {}) {\r\n        super(options);\r\n    }\r\n}\r\n\r\nexport class PepperiTextboxField extends PepperiFieldBase {\r\n    controlType = 'textbox';\r\n\r\n    constructor(options: any = {}) {\r\n        super(options);\r\n    }\r\n}\r\n\r\nexport class PepperiTextareaField extends PepperiFieldBase {\r\n    controlType = 'textarea';\r\n\r\n    constructor(options: any = {}) {\r\n        super(options);\r\n        this.type = 'textarea';\r\n    }\r\n}\r\n\r\nexport class PepperiRichHtmlTextareaField extends PepperiFieldBase {\r\n    controlType = 'richhtmltextarea';\r\n\r\n    constructor(options: any = {}) {\r\n        super(options);\r\n        this.type = 'richhtmltextarea';\r\n    }\r\n}\r\n\r\nexport class PepperiSignatureField extends PepperiFieldBase {\r\n    controlType = 'signature';\r\n    options: PepperiOption[] = [];\r\n\r\n    constructor(options: any = {}) {\r\n        super(options);\r\n        this.options = options.options || [];\r\n    }\r\n}\r\n\r\nexport class PepperiImageField extends PepperiFieldBase {\r\n    controlType = 'image';\r\n    hasCampaignField = null;\r\n    indicatorsField = null;\r\n    menuField = null;\r\n    options: PepperiOption[] = [];\r\n    sizeLimitMB = 5;\r\n\r\n    constructor(options: any = {}) {\r\n        super(options);\r\n        this.hasCampaignField = options.hasCampaignField || null;\r\n        this.indicatorsField = options.indicatorsField || null;\r\n        this.menuField = options.menuField || null;\r\n        this.options = options.options || [];\r\n        this.sizeLimitMB = options.sizeLimitMB || 5;\r\n    }\r\n}\r\n\r\nexport class PepperiImagesField extends PepperiFieldBase {\r\n    controlType = 'images';\r\n    options: PepperiOption[] = [];\r\n\r\n    constructor(options: any = {}) {\r\n        super(options);\r\n        this.options = options.options || [];\r\n    }\r\n}\r\n\r\nexport class PepperiQuantitySelectorField extends PepperiFieldBase {\r\n    controlType = 'qs';\r\n    alowDecimal: boolean;\r\n\r\n    constructor(options: any = {}) {\r\n        super(options);\r\n        this.alowDecimal = options.alowDecimal || false;\r\n    }\r\n}\r\n\r\nexport class PepperiDateField extends PepperiFieldBase {\r\n    controlType = 'date';\r\n\r\n    constructor(options: any = {}) {\r\n        super(options);\r\n    }\r\n}\r\n\r\nexport class PepperiCheckboxField extends PepperiFieldBase {\r\n    controlType = 'checkbox';\r\n\r\n    constructor(options: any = {}) {\r\n        super(options);\r\n    }\r\n}\r\n\r\nexport class PepperiSelectField extends PepperiFieldBase {\r\n    controlType = 'select';\r\n    options: PepperiOption[] = [];\r\n\r\n    constructor(options: any = {}) {\r\n        super(options);\r\n        this.options = options.options || [];\r\n    }\r\n\r\n    public updateField(updatedField: any, canEditObject: boolean): void {\r\n        super.updateField(updatedField, canEditObject);\r\n\r\n        this.options = updatedField.OptionalValues;\r\n    }\r\n}\r\n\r\nexport class PepperiAddressField extends PepperiFieldBase {\r\n    controlType = 'address';\r\n    groupFields: PepperiFieldBase[] = null;\r\n\r\n    constructor(options: any = {}) {\r\n        super(options);\r\n        this.groupFields = options.groupFields || null;\r\n    }\r\n}\r\n\r\nexport class PepperiInternalPageField extends PepperiFieldBase {\r\n    controlType = 'internalPage';\r\n    objectId = '';\r\n    parentId = '';\r\n    searchCode = '';\r\n\r\n    constructor(options: any = {}) {\r\n        super(options);\r\n        this.objectId = options.objectId || '';\r\n        this.parentId = options.parentId || '';\r\n        this.searchCode = options.searchCode || '';\r\n    }\r\n}\r\n\r\nexport class PepperiMenuField extends PepperiFieldBase {\r\n    controlType = 'menu';\r\n    options: PepperiOption[] = [];\r\n    // hasSubMenu: boolean = false;\r\n\r\n    constructor(options: any = {}) {\r\n        super(options);\r\n        this.options = options.options || [];\r\n        // this.hasSubMenu = options['hasSubMenu'];\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class PepperiObjectChangedData {\r\n    Id: string;\r\n    ApiName: string;\r\n    Value: string;\r\n    ControlType: string;\r\n\r\n    constructor(id: string, apiName: string, value: string, controlType: string = '') {\r\n        this.Id = id;\r\n        this.ApiName = apiName;\r\n        this.Value = value;\r\n        this.ControlType = controlType || '';\r\n    }\r\n}\r\n\r\nexport class PepperiFieldClickedData {\r\n    Id: string;\r\n    ApiName: string;\r\n    FieldType: FIELD_TYPE;\r\n    IdType: string;\r\n    Which: any;\r\n    Value: any;\r\n    Editable: boolean;\r\n    OtherData: any;\r\n\r\n    constructor(id: string, apiName: string, idType: any, which: any, value: any, fieldType: FIELD_TYPE, otherData: any = null) {\r\n        this.Id = id;\r\n        this.ApiName = apiName;\r\n        this.IdType = idType;\r\n        this.FieldType = fieldType;\r\n        this.Which = which;\r\n        this.Value = value;\r\n        this.OtherData = otherData;\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\n\r\n// export class JsonFilter {\r\n//     ExpressionId: number;\r\n//     ComplexId: number;\r\n//     ApiName: string;\r\n//     Operation: string;\r\n//     Values: string[];\r\n//     constructor() {\r\n//         this.ExpressionId = 1;\r\n//         this.ApiName = '';\r\n//         this.Operation = '';\r\n//         this.Values = [];\r\n//     }\r\n\r\n//     initFromObj(obj: JsonFilter): void {\r\n//         if (obj) {\r\n//             this.ExpressionId = obj.ExpressionId;\r\n//             this.ApiName = obj.ApiName;\r\n//             this.Operation = obj.Operation;\r\n\r\n//             if (this.Values !== obj.Values) {\r\n//                 this.Values = [];\r\n//                 if (obj.Values) {\r\n//                     obj.Values.forEach((value) => this.Values.push(value));\r\n//                 }\r\n//             }\r\n//         }\r\n//     }\r\n\r\n//     Valid(): boolean {\r\n//         return this.Operation !== '' && this.ApiName !== '';\r\n//     }\r\n// }\r\n\r\n// export class JsonFilters {\r\n//     leftNode: string;\r\n//     rightNode: string;\r\n//     operator: string;\r\n//     ComplexId: number;\r\n\r\n//     constructor(left = '', right = '', operator = 'AND', complexId = 2) {\r\n//         this.leftNode = left;\r\n//         this.rightNode = right;\r\n//         this.operator = operator;\r\n//         this.ComplexId = complexId;\r\n//     }\r\n\r\n//     toString(): string {\r\n//         let retVal = '';\r\n//         if (this.leftNode !== '' && this.rightNode === '') {\r\n//             retVal = this.leftNode;\r\n//         } else if (this.leftNode === '' && this.rightNode !== '') {\r\n//             retVal = this.rightNode;\r\n//         } else if (this.leftNode !== '' && this.rightNode !== '') {\r\n//             retVal = '{ \"ComplexId\":' + this.ComplexId + ',';\r\n//             retVal += ' \"Operation\":\"' + this.operator + '\",';\r\n//             retVal += ' \"LeftNode\": ' + this.leftNode + ',';\r\n//             retVal += ' \"RightNode\": ' + this.rightNode + '}';\r\n//         }\r\n//         return retVal;\r\n//     }\r\n// }\r\n\r\n// export enum DATE_RANGE {\r\n//     None = 0,\r\n//     InTheLast = 1,\r\n//     Today = 2,\r\n//     ThisWeek = 3,\r\n//     ThisMonth = 4,\r\n//     /*Before = 5, After = 6,*/ Between = 5,\r\n//     DueIn = 6,\r\n//     On = 7,\r\n//     NotInTheLast = 8,\r\n//     NotDueIn = 9,\r\n//     IsEmpty = 10,\r\n//     IsNotEmpty = 11,\r\n// }\r\n// export enum DATE_PERIOD {\r\n//     None = 0,\r\n//     Days = 1,\r\n//     Weeks = 2,\r\n//     Months = 3,\r\n//     Years = 4,\r\n// }\r\n// export enum DATE_RANGE_VIEWTYPE {\r\n//     None = 0,\r\n//     Period = 1,\r\n//     OneCalendar = 2,\r\n//     TwoCalendars = 3,\r\n//     NoCalendars = 4,\r\n// }\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class UtilitiesService {\r\n\r\n    constructor() {}\r\n\r\n    parseDate(dateStr: string, showTime: boolean = false): any {\r\n        let retVal = null;\r\n        if (dateStr !== '') {\r\n            retVal = new Date(dateStr);\r\n            const dateText = dateStr.split('-');\r\n            if (dateText.length === 3 && !showTime) {\r\n                const year = Number(dateText[0]);\r\n                const month = Number(dateText[1]) - 1;\r\n                const day = Number(dateText[2]);\r\n                retVal = new Date(year, month, day);\r\n            }\r\n        }\r\n        if (retVal && isNaN(retVal.getTime())) {\r\n            retVal = null;\r\n        }\r\n        return retVal;\r\n    }\r\n\r\n    stringifyDate(date: Date, showTime: boolean = false): string {\r\n        if (date) {\r\n            const dateText = [];\r\n            dateText.push(date.getFullYear(), '-', date.getMonth() + 1, '-', date.getDate());\r\n\r\n            if (showTime) {\r\n                dateText.push(\r\n                    'T',\r\n                    (date.getHours() < 10 ? '0' : '') + date.getHours(),\r\n                    ':',\r\n                    (date.getMinutes() < 10 ? '0' : '') + date.getMinutes(),\r\n                    ':',\r\n                    (date.getSeconds() < 10 ? '0' : '') + date.getSeconds(),\r\n                    'Z'\r\n                );\r\n            }\r\n\r\n            return dateText.join('');\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    stringifyDateWithOffset(date: Date, showTime: boolean = false): string {\r\n        if (showTime) {\r\n            const offsetMinutes = new Date().getTimezoneOffset() * -1;\r\n            date.setMinutes(date.getMinutes() - offsetMinutes);\r\n        }\r\n\r\n        return this.stringifyDate(date, showTime);\r\n    }\r\n\r\n    isValueHtml(value: string): boolean {\r\n        let res = false;\r\n        const REGEXP = /<\\/?[a-z][\\s\\S]*>/i;\r\n        res = REGEXP.test(value);\r\n\r\n        return res;\r\n    }\r\n\r\n    isJsonString(str: string): boolean {\r\n        try {\r\n            JSON.parse(str);\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { FormBuilder, Validators, FormControl, FormGroup } from '@angular/forms';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { SessionService } from '../common/services/session.service';\r\nimport { LAYOUT_TYPE, STYLE_TYPE } from './customization.model';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class CustomizationService {\r\n    static STAND_ALONE_FIELD_CLASS_NAME = 'pepperi-field';\r\n\r\n    static REM_STRING = 'rem';\r\n    static PX_STRING = 'px';\r\n    static USER_THEME = 'user_theme';\r\n    static USER_COLOR = 'user_color';\r\n    static USER_THEME_VARIABLES = 'user_theme_variables';\r\n\r\n    // Header height\r\n    static HEADER_HEIGHT_KEY = '--pep-header-height';\r\n\r\n    // Footer height\r\n    static FOOTER_HEIGHT_KEY = '--pep-footer-bar-height';\r\n\r\n    // Main container height\r\n    static MAIN_HEIGHT_KEY = '--pep-main-height';\r\n\r\n    // Colors variables keys\r\n    static COLOR_USER_PRIMARY_KEY = '--pep-color-user-primary';\r\n    static COLOR_USER_SECONDARY_KEY = '--pep-color-user-secondary';\r\n    static COLOR_SYSTEM_PRIMARY_INVERT_KEY = '--pep-color-system-primary-invert';\r\n    static COLOR_SYSTEM_PRIMARY_KEY = '--pep-color-system-primary';\r\n    static COLOR_TEXT_LINK_KEY = '--pep-color-text-link';\r\n    static COLOR_SYSTEM_CAUTION_KEY = '--pep-color-system-caution';\r\n    static COLOR_SYSTEM_SUCCESS_KEY = '--pep-color-system-success';\r\n    static COLOR_STRONG_KEY = '--pep-color-strong';\r\n    static COLOR_REGULAR_KEY = '--pep-color-regular';\r\n    static COLOR_WEAK_KEY = '--pep-color-weak';\r\n\r\n    // Top header variables keys\r\n    static COLOR_TOP_HEADER_KEY = '--pep-color-top-header';\r\n    static STYLE_TOP_HEADER_KEY = '--pep-style-top-header';\r\n\r\n    // QS variables keys\r\n    static COLOR_QS_KEY = '--pep-color-qs';\r\n    static STYLE_QS_KEY = '--pep-style-qs';\r\n\r\n    // Fonts variables keys\r\n    static FONT_FAMILY_TITLE_KEY = '--pep-font-family-title';\r\n    static FONT_FAMILY_BODY_KEY = '--pep-font-family-body';\r\n\r\n    // Border radius variables keys\r\n    static BORDER_RADIUS_KEY = '--pep-border-radius';\r\n    static BORDER_RADIUS_SM_KEY = CustomizationService.BORDER_RADIUS_KEY + '-sm';\r\n    static BORDER_RADIUS_MD_KEY = CustomizationService.BORDER_RADIUS_KEY + '-md';\r\n    static BORDER_RADIUS_LG_KEY = CustomizationService.BORDER_RADIUS_KEY + '-lg';\r\n\r\n    // Fonts variables keys\r\n    static FONT_SIZE_2XS_KEY = '--pep-font-size-2xs';\r\n    static FONT_SIZE_XS_KEY = '--pep-font-size-xs';\r\n    static FONT_SIZE_SM_KEY = '--pep-font-size-sm';\r\n    static FONT_SIZE_MD_KEY = '--pep-font-size-md';\r\n    static FONT_SIZE_LG_KEY = '--pep-font-size-lg';\r\n    static FONT_SIZE_XL_KEY = '--pep-font-size-xl';\r\n    static FONT_SIZE_2XL_KEY = '--pep-font-size-2xl';\r\n\r\n    // Line height variables keys\r\n    static LINE_HEIGHT_2XS_KEY = '--pep-line-height-2xs';\r\n    static LINE_HEIGHT_XS_KEY = '--pep-line-height-xs';\r\n    static LINE_HEIGHT_SM_KEY = '--pep-line-height-sm';\r\n    static LINE_HEIGHT_MD_KEY = '--pep-line-height-md';\r\n    static LINE_HEIGHT_LG_KEY = '--pep-line-height-lg';\r\n    static LINE_HEIGHT_XL_KEY = '--pep-line-height-xl';\r\n    static LINE_HEIGHT_2XL_KEY = '--pep-line-height-2xl';\r\n\r\n    // Shadows offset variables keys\r\n    static SHADOW_NONE_OFFSET_KEY = '--pep-shadow-none-offset';\r\n    static SHADOW_XS_OFFSET_KEY = '--pep-shadow-xs-offset';\r\n    static SHADOW_SM_OFFSET_KEY = '--pep-shadow-sm-offset';\r\n    static SHADOW_MD_OFFSET_KEY = '--pep-shadow-md-offset';\r\n    static SHADOW_LG_OFFSET_KEY = '--pep-shadow-lg-offset';\r\n    static SHADOW_XL_OFFSET_KEY = '--pep-shadow-xl-offset';\r\n\r\n    // Spacing variables keys\r\n    static SPACING_SIZE_2XS_KEY = '--pep-spacing-2xs';\r\n    static SPACING_SIZE_XS_KEY = '--pep-spacing-xs';\r\n    static SPACING_SIZE_SM_KEY = '--pep-spacing-sm';\r\n    static SPACING_SIZE_MD_KEY = '--pep-spacing-md';\r\n    static SPACING_SIZE_LG_KEY = '--pep-spacing-lg';\r\n    static SPACING_SIZE_XL_KEY = '--pep-spacing-xl';\r\n    static SPACING_SIZE_2XL_KEY = '--pep-spacing-2xl';\r\n\r\n    // Side bar variables keys\r\n    static SIDE_BAR_WIDTH_KEY = '--pep-side-bar-width';\r\n\r\n    // Top bar variables keys\r\n    static TOP_BAR_SPACING_TOP_KEY = '--pep-top-bar-spacing-top';\r\n    static TOP_BAR_SPACING_BOTTOM_KEY = '--pep-top-bar-spacing-bottom';\r\n    static TOP_BAR_FIELD_HEIGHT_KEY = '--pep-top-bar-field-height';\r\n\r\n    // Footer variables keys\r\n    static FOOTER_BAR_SPACING_TOP_KEY = '--pep-footer-bar-spacing-top';\r\n    static FOOTER_BAR_SPACING_BOTTOM_KEY = '--pep-footer-bar-spacing-bottom';\r\n\r\n    // Form variables keys\r\n    static FORM_FIELD_HEIGHT_KEY = '--pep-form-field-height';\r\n    static FORM_FIELD_TITLE_HEIGHT_KEY = '--pep-form-field-title-height';\r\n    static FORM_FIELD_SPACEING_KEY = '--pep-form-field-spacing';\r\n    static FORM_SPACEING_KEY = '--pep-form-spacing';\r\n\r\n    // Card variables keys\r\n    static CARD_FIELD_HEIGHT_KEY = '--pep-card-field-height';\r\n    static CARD_SPACEING_KEY = '--pep-card-spacing';\r\n    static CARD_SHADOW_OFFSET_KEY = '--pep-shadow-card-offset';\r\n    static CARD_BORDER_RADIUS_KEY = '--pep-card-border-radius';\r\n\r\n    // Table variables keys\r\n    static TABLE_FIELD_HEIGHT_KEY = '--pep-table-field-height';\r\n    static TABLE_SPACEING_KEY = '--pep-table-spacing';\r\n    static TABLE_BORDER_RADIUS_KEY = '--pep-table-border-radius';\r\n\r\n    static DEFAULT_HEADER_HEIGHT = 64; // Default\r\n\r\n    static DEFAULT_SPINNER_COLOR = '#78aa00';\r\n    static DEFAULT_BRANDING_COLOR = '#fff';\r\n\r\n    public hasCustomHomepage: boolean = null;\r\n    public hasCustomHeader: boolean = null;\r\n    public customHeaderHeight = CustomizationService.DEFAULT_HEADER_HEIGHT;\r\n    public mainContHeight = 0;\r\n    public footerHeight = new BehaviorSubject<number>(0);\r\n\r\n    constructor(\r\n        private sessionService: SessionService,\r\n        public fb: FormBuilder) { }\r\n\r\n    getValidatorsForField(required: boolean, readonly: boolean, disabled: boolean,\r\n                          maxFieldCharacters: number, type: string, isCheckbox = false,\r\n                          minValue = NaN, maxValue = NaN): Array<any> {\r\n        const validators = [];\r\n\r\n        if (required && !readonly && !disabled) {\r\n            if (isCheckbox) {\r\n                validators.push(Validators.requiredTrue);\r\n            } else {\r\n                validators.push(Validators.required);\r\n            }\r\n        } else {\r\n            validators.push(Validators.nullValidator);\r\n        }\r\n\r\n        if (maxFieldCharacters > 0) {\r\n            validators.push(Validators.maxLength(maxFieldCharacters));\r\n        }\r\n\r\n        if (type === 'email') {\r\n            validators.push(\r\n                Validators.pattern(\r\n                    /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n                )\r\n            );\r\n        } else if (type === 'phone') {\r\n            validators.push(Validators.pattern(/^[\\d\\.\\-\\+\\(\\)\\*\\#]+$/));\r\n        } else if (type === 'int' || type === 'real') {\r\n            validators.push(Validators.pattern(/^[\\.,\\-\\+\\d]+$/));\r\n\r\n            if (!isNaN(minValue)) {\r\n                validators.push(Validators.min(minValue));\r\n            }\r\n\r\n            if (!isNaN(maxValue)) {\r\n                validators.push(Validators.max(maxValue));\r\n            }\r\n        }\r\n\r\n        return validators;\r\n    }\r\n\r\n    getDefaultFromGroup(\r\n        key: string,\r\n        value: string,\r\n        required: boolean,\r\n        readonly: boolean,\r\n        disabled: boolean,\r\n        maxFieldCharacters: number = 0,\r\n        type: string = '',\r\n        isCheckbox = false,\r\n        withValidators = true,\r\n        minValue = NaN,\r\n        maxValue = NaN\r\n    ): FormGroup {\r\n        const validators = withValidators ?\r\n            this.getValidatorsForField(required, readonly, disabled, maxFieldCharacters, type, isCheckbox, minValue, maxValue) : [];\r\n        const group = {};\r\n        group[key] = [{ value, disabled }, validators];\r\n        return this.fb.group(group);\r\n    }\r\n\r\n    private getFormControl(form, fieldKey, parentFieldKey = null): any {\r\n        let formControl = null;\r\n\r\n        if (form && form.controls) {\r\n            if (parentFieldKey === null) {\r\n                formControl = form.controls[fieldKey];\r\n            } else {\r\n                formControl = form.controls[parentFieldKey].get(fieldKey);\r\n            }\r\n        }\r\n\r\n        return formControl;\r\n    }\r\n\r\n    updateFormFieldValue(form, fieldKey, value = '', parentFieldKey = null): void {\r\n        const formControl = this.getFormControl(form, fieldKey, parentFieldKey);\r\n        if (formControl) {\r\n            formControl.setValue(value);\r\n        }\r\n    }\r\n\r\n    updateFormField(form, field, value = '', parentField = null): void {\r\n        const formControl: FormControl = this.getFormControl(form, field.key, parentField);\r\n        if (formControl) {\r\n            formControl.setValue(value);\r\n\r\n            // If disabled has changed.\r\n            if (formControl.disabled !== field.disabled) {\r\n                field.disabled ? formControl.disable() : formControl.enable();\r\n\r\n                const validators = this.getValidatorsForField(field.required, field.readonly, field.disabled,\r\n                    field.maxFieldCharacters, field.type, field.controlType === 'checkbox');\r\n                formControl.setValidators(validators);\r\n            }\r\n        }\r\n    }\r\n\r\n    calculateFormFieldHeight(withTitle = true, rowSpan = 1, standAlone = false): number {\r\n        const themeVars = this.getThemeVariables();\r\n        const rowFieldHeight = this.getNumberThemeVariable(themeVars, CustomizationService.FORM_FIELD_HEIGHT_KEY);\r\n        const rowFieldTitleHeight = this.getNumberThemeVariable(themeVars, CustomizationService.FORM_FIELD_TITLE_HEIGHT_KEY);\r\n        const rowFieldSpacingBottom = this.getNumberThemeVariable(themeVars, CustomizationService.FORM_SPACEING_KEY);\r\n\r\n        let fieldHeight = 0;\r\n        if (rowSpan === 1) {\r\n            fieldHeight = (withTitle ? rowFieldTitleHeight : 0) + rowFieldHeight;\r\n        } else {\r\n            const rowSpanCalc = withTitle ? rowSpan : rowSpan - 1;\r\n            fieldHeight =\r\n                rowSpan * rowFieldHeight +\r\n                rowSpanCalc * rowFieldTitleHeight +\r\n                (standAlone ? 0 : rowSpanCalc * rowFieldSpacingBottom);\r\n        }\r\n\r\n        return fieldHeight;\r\n    }\r\n\r\n    calculateCardRowsHeight(rowsCount = 1, withSpacing = true): number {\r\n        const themeVars = this.getThemeVariables();\r\n        const cardFieldHeight = this.getNumberThemeVariable(themeVars, CustomizationService.CARD_FIELD_HEIGHT_KEY);\r\n        const cardFieldSpacing = this.getNumberThemeVariable(themeVars, CustomizationService.CARD_SPACEING_KEY);\r\n\r\n        const fieldHeight = rowsCount * cardFieldHeight + (rowsCount - 1) * (withSpacing ? cardFieldSpacing : 0);\r\n        return fieldHeight;\r\n    }\r\n\r\n    calculateTableRowsHeight(rowsCount = 1, withSpacing = true): number {\r\n        const themeVars = this.getThemeVariables();\r\n        const tableFieldHeight = this.getNumberThemeVariable(themeVars, CustomizationService.TABLE_FIELD_HEIGHT_KEY);\r\n        const tableFieldSpacing = this.getNumberThemeVariable(themeVars, CustomizationService.TABLE_SPACEING_KEY);\r\n\r\n        const fieldHeight = rowsCount * (tableFieldHeight + (withSpacing ? tableFieldSpacing * 2 : 0));\r\n        return fieldHeight;\r\n    }\r\n\r\n    calculateFieldHeight(layoutType = LAYOUT_TYPE.PepperiForm, rowSpan, standAlone): string {\r\n        let fieldHeight = 'inherit'; // Default for card (with no title)\r\n        if (layoutType === LAYOUT_TYPE.PepperiTable) {\r\n            fieldHeight = this.getThemeVariable(CustomizationService.TABLE_FIELD_HEIGHT_KEY);\r\n        } else if (layoutType === LAYOUT_TYPE.PepperiCard) {\r\n            fieldHeight = this.calculateCardRowsHeight(rowSpan, !standAlone) + CustomizationService.REM_STRING;\r\n        } else {\r\n            // PepperiForm\r\n            fieldHeight = this.calculateFormFieldHeight(false, rowSpan, standAlone) + CustomizationService.REM_STRING;\r\n        }\r\n\r\n        return fieldHeight;\r\n    }\r\n\r\n    getBrandingTheme(): string {\r\n        const themeObj = this.sessionService.getObject(CustomizationService.USER_THEME);\r\n        return (themeObj && themeObj.Theme) || 'default-theme'; // 'light-theme';\r\n    }\r\n\r\n    getDefaultThemeLayoutVariables(themeVars: any): void {\r\n        // Declare default screen sizes.\r\n        themeVars['--pep-screen-max-size-2xs'] = '460' + CustomizationService.PX_STRING;\r\n        themeVars['--pep-screen-max-size-xs'] = '767' + CustomizationService.PX_STRING;\r\n        themeVars['--pep-screen-max-size-sm'] = '991' + CustomizationService.PX_STRING;\r\n        themeVars['--pep-screen-max-size-md'] = '1199' + CustomizationService.PX_STRING;\r\n        themeVars['--pep-screen-max-size-lg'] = '1366' + CustomizationService.PX_STRING;\r\n        themeVars['--pep-screen-max-size-xl'] = '1920' + CustomizationService.PX_STRING;\r\n\r\n        // Declare default top bar.\r\n        themeVars[CustomizationService.SIDE_BAR_WIDTH_KEY] = '16' + CustomizationService.REM_STRING;\r\n\r\n        // Declare default top bar.\r\n        themeVars[CustomizationService.TOP_BAR_SPACING_TOP_KEY] = '1.5' + CustomizationService.REM_STRING;\r\n        themeVars[CustomizationService.TOP_BAR_SPACING_BOTTOM_KEY] = '0.5' + CustomizationService.REM_STRING;\r\n        themeVars[CustomizationService.TOP_BAR_FIELD_HEIGHT_KEY] = '2.5' + CustomizationService.REM_STRING;\r\n\r\n        // Declare default footer.\r\n        themeVars[CustomizationService.FOOTER_BAR_SPACING_TOP_KEY] = '0.75' + CustomizationService.REM_STRING;\r\n        themeVars[CustomizationService.FOOTER_BAR_SPACING_BOTTOM_KEY] = '1.25' + CustomizationService.REM_STRING;\r\n    }\r\n\r\n    getDefaultThemeBorderRadiusVariables(themeVars: any): void {\r\n        themeVars[CustomizationService.BORDER_RADIUS_SM_KEY] = '0.125' + CustomizationService.REM_STRING;\r\n        themeVars[CustomizationService.BORDER_RADIUS_MD_KEY] = '0.25' + CustomizationService.REM_STRING;\r\n        themeVars[CustomizationService.BORDER_RADIUS_LG_KEY] = '0.5' + CustomizationService.REM_STRING;\r\n    }\r\n\r\n    getDefaultThemeSpacingVariables(themeVars: any): void {\r\n        themeVars[CustomizationService.SPACING_SIZE_2XS_KEY] = '0.125' + CustomizationService.REM_STRING;\r\n        themeVars[CustomizationService.SPACING_SIZE_XS_KEY] = '0.25' + CustomizationService.REM_STRING;\r\n        themeVars[CustomizationService.SPACING_SIZE_SM_KEY] = '0.5' + CustomizationService.REM_STRING;\r\n        themeVars[CustomizationService.SPACING_SIZE_MD_KEY] = '0.75' + CustomizationService.REM_STRING;\r\n        themeVars[CustomizationService.SPACING_SIZE_LG_KEY] = '1' + CustomizationService.REM_STRING;\r\n        themeVars[CustomizationService.SPACING_SIZE_XL_KEY] = '1.5' + CustomizationService.REM_STRING;\r\n        themeVars[CustomizationService.SPACING_SIZE_2XL_KEY] = '2' + CustomizationService.REM_STRING;\r\n    }\r\n\r\n    getDefaultThemeFontsVariables(themeVars: any): void {\r\n        // Title font family\r\n        themeVars[CustomizationService.FONT_FAMILY_TITLE_KEY] = 'Nexa';\r\n\r\n        // Body font family\r\n        themeVars[CustomizationService.FONT_FAMILY_BODY_KEY] = 'Inter';\r\n\r\n        // Font sizes\r\n        themeVars[CustomizationService.FONT_SIZE_2XS_KEY] = '0.625' + CustomizationService.REM_STRING;\r\n        themeVars[CustomizationService.FONT_SIZE_XS_KEY] = '0.75' + CustomizationService.REM_STRING;\r\n        themeVars[CustomizationService.FONT_SIZE_SM_KEY] = '0.875' + CustomizationService.REM_STRING;\r\n        themeVars[CustomizationService.FONT_SIZE_MD_KEY] = '1' + CustomizationService.REM_STRING;\r\n        themeVars[CustomizationService.FONT_SIZE_LG_KEY] = '1.125' + CustomizationService.REM_STRING;\r\n        themeVars[CustomizationService.FONT_SIZE_XL_KEY] = '1.25' + CustomizationService.REM_STRING;\r\n        themeVars[CustomizationService.FONT_SIZE_2XL_KEY] = '1.5' + CustomizationService.REM_STRING;\r\n\r\n        // Line height\r\n        themeVars[CustomizationService.LINE_HEIGHT_2XS_KEY] = '0.75' + CustomizationService.REM_STRING;\r\n        themeVars[CustomizationService.LINE_HEIGHT_XS_KEY] = '1' + CustomizationService.REM_STRING;\r\n        themeVars[CustomizationService.LINE_HEIGHT_SM_KEY] = '1.25' + CustomizationService.REM_STRING;\r\n        themeVars[CustomizationService.LINE_HEIGHT_MD_KEY] = '1.5' + CustomizationService.REM_STRING;\r\n        themeVars[CustomizationService.LINE_HEIGHT_LG_KEY] = '1.75' + CustomizationService.REM_STRING;\r\n        themeVars[CustomizationService.LINE_HEIGHT_XL_KEY] = '2' + CustomizationService.REM_STRING;\r\n        themeVars[CustomizationService.LINE_HEIGHT_2XL_KEY] = '2.25' + CustomizationService.REM_STRING;\r\n\r\n        // Font weight\r\n        themeVars['--pep-font-weight-normal'] = 400;\r\n        themeVars['--pep-font-weight-bold'] = 600;\r\n        themeVars['--pep-font-weight-bolder'] = 800;\r\n    }\r\n\r\n    getDefaultThemeButtonsVariables(themeVars: any): void {\r\n        themeVars['--pep-button-2xs-horizontal-spacing'] = '0.25' + CustomizationService.REM_STRING;\r\n        themeVars['--pep-button-2xs-min-width'] = '1' + CustomizationService.REM_STRING;\r\n        themeVars['--pep-button-2xs-height'] = '1' + CustomizationService.REM_STRING;\r\n        themeVars['--pep-button-2xs-font-size'] = 'var(' + CustomizationService.FONT_SIZE_2XS_KEY + ')';\r\n        // themeVars['--pep-button-2xs-icon-horizontal-spacing'] = '0.125' + CustomizationService.REM_STRING;\r\n\r\n        themeVars['--pep-button-xs-horizontal-spacing'] = '0.5' + CustomizationService.REM_STRING;\r\n        themeVars['--pep-button-xs-min-width'] = '2' + CustomizationService.REM_STRING;\r\n        themeVars['--pep-button-xs-height'] = '1.5' + CustomizationService.REM_STRING;\r\n        themeVars['--pep-button-xs-font-size'] = 'var(' + CustomizationService.FONT_SIZE_XS_KEY + ')';\r\n        // themeVars['--pep-button-xs-icon-horizontal-spacing'] = '0.25' + CustomizationService.REM_STRING;\r\n\r\n        themeVars['--pep-button-sm-horizontal-spacing'] = '0.75' + CustomizationService.REM_STRING;\r\n        themeVars['--pep-button-sm-min-width'] = '2' + CustomizationService.REM_STRING;\r\n        themeVars['--pep-button-sm-height'] = '2' + CustomizationService.REM_STRING;\r\n        themeVars['--pep-button-sm-font-size'] = 'var(' + CustomizationService.FONT_SIZE_SM_KEY + ')';\r\n        // themeVars['--pep-button-sm-icon-horizontal-spacing'] = '0.5' + CustomizationService.REM_STRING;\r\n\r\n        themeVars['--pep-button-md-horizontal-spacing'] = '1' + CustomizationService.REM_STRING;\r\n        themeVars['--pep-button-md-min-width'] = '2.5' + CustomizationService.REM_STRING;\r\n        themeVars['--pep-button-md-height'] = '2.5' + CustomizationService.REM_STRING;\r\n        themeVars['--pep-button-md-font-size'] = 'var(' + CustomizationService.FONT_SIZE_MD_KEY + ')';\r\n        // themeVars['--pep-button-md-icon-horizontal-spacing'] = '0.5' + CustomizationService.REM_STRING;\r\n\r\n        themeVars['--pep-button-lg-horizontal-spacing'] = '1' + CustomizationService.REM_STRING;\r\n        themeVars['--pep-button-lg-min-width'] = '3' + CustomizationService.REM_STRING;\r\n        themeVars['--pep-button-lg-height'] = '3' + CustomizationService.REM_STRING;\r\n        themeVars['--pep-button-lg-font-size'] = 'var(' + CustomizationService.FONT_SIZE_LG_KEY + ')';\r\n        // themeVars['--pep-button-lg-icon-horizontal-spacing'] = '0.75' + CustomizationService.REM_STRING;\r\n\r\n        themeVars['--pep-button-xl-horizontal-spacing'] = '1.5' + CustomizationService.REM_STRING;\r\n        themeVars['--pep-button-xl-min-width'] = '5' + CustomizationService.REM_STRING;\r\n        themeVars['--pep-button-xl-height'] = '4' + CustomizationService.REM_STRING;\r\n        themeVars['--pep-button-xl-font-size'] = 'var(' + CustomizationService.FONT_SIZE_XL_KEY + ')';\r\n        // themeVars['--pep-button-xl-icon-horizontal-spacing'] = '1' + CustomizationService.REM_STRING;\r\n    }\r\n\r\n    getSystemPrimaryInvertColorsVariables(themeVars: any): void {\r\n        themeVars[CustomizationService.COLOR_SYSTEM_PRIMARY_INVERT_KEY + '-h'] = '255';\r\n        themeVars[CustomizationService.COLOR_SYSTEM_PRIMARY_INVERT_KEY + '-s'] = '100%';\r\n        themeVars[CustomizationService.COLOR_SYSTEM_PRIMARY_INVERT_KEY + '-l'] = '100%';\r\n    }\r\n\r\n    getSystemPrimaryColorsVariables(themeVars: any): void {\r\n        themeVars[CustomizationService.COLOR_SYSTEM_PRIMARY_KEY + '-h'] = '0';\r\n        themeVars[CustomizationService.COLOR_SYSTEM_PRIMARY_KEY + '-s'] = '0%';\r\n        themeVars[CustomizationService.COLOR_SYSTEM_PRIMARY_KEY + '-l'] = '10%';\r\n    }\r\n\r\n    getSystemSuccessColorsVariables(themeVars: any): void {\r\n        themeVars[CustomizationService.COLOR_SYSTEM_SUCCESS_KEY + '-h'] = '100';\r\n        themeVars[CustomizationService.COLOR_SYSTEM_SUCCESS_KEY + '-s'] = '100%';\r\n        themeVars[CustomizationService.COLOR_SYSTEM_SUCCESS_KEY + '-l'] = '25%';\r\n    }\r\n\r\n    getSystemCautionColorsVariables(themeVars: any): void {\r\n        themeVars[CustomizationService.COLOR_SYSTEM_CAUTION_KEY + '-h'] = '360';\r\n        themeVars[CustomizationService.COLOR_SYSTEM_CAUTION_KEY + '-s'] = '100%';\r\n        themeVars[CustomizationService.COLOR_SYSTEM_CAUTION_KEY + '-l'] = '40%';\r\n    }\r\n\r\n    getUserPrimaryColorsVariables(themeVars: any): void {\r\n        themeVars[CustomizationService.COLOR_USER_PRIMARY_KEY + '-h'] = '78';\r\n        themeVars[CustomizationService.COLOR_USER_PRIMARY_KEY + '-s'] = '87%';\r\n        themeVars[CustomizationService.COLOR_USER_PRIMARY_KEY + '-l'] = '27%';\r\n    }\r\n\r\n    getUserSecondaryColorsVariables(themeVars: any): void {\r\n        themeVars[CustomizationService.COLOR_USER_SECONDARY_KEY + '-h'] = '77';\r\n        themeVars[CustomizationService.COLOR_USER_SECONDARY_KEY + '-s'] = '87%';\r\n        themeVars[CustomizationService.COLOR_USER_SECONDARY_KEY + '-l'] = '42%';\r\n    }\r\n\r\n    getWeakColorsVariables(themeVars: any): void {\r\n        themeVars[CustomizationService.COLOR_WEAK_KEY + '-h'] = 'var(' + CustomizationService.COLOR_SYSTEM_PRIMARY_KEY + '-h)';\r\n        themeVars[CustomizationService.COLOR_WEAK_KEY + '-s'] = 'var(' + CustomizationService.COLOR_SYSTEM_PRIMARY_KEY + '-s)';\r\n        themeVars[CustomizationService.COLOR_WEAK_KEY + '-l'] = 'var(' + CustomizationService.COLOR_SYSTEM_PRIMARY_KEY + '-l)';\r\n    }\r\n\r\n    getRegularColorsVariables(themeVars: any): void {\r\n        themeVars[CustomizationService.COLOR_REGULAR_KEY + '-h'] = 'var(' + CustomizationService.COLOR_SYSTEM_PRIMARY_KEY + '-h)';\r\n        themeVars[CustomizationService.COLOR_REGULAR_KEY + '-s'] = 'var(' + CustomizationService.COLOR_SYSTEM_PRIMARY_KEY + '-s)';\r\n        themeVars[CustomizationService.COLOR_REGULAR_KEY + '-l'] = 'var(' + CustomizationService.COLOR_SYSTEM_PRIMARY_KEY + '-l)';\r\n    }\r\n\r\n    getStrongColorsVariables(themeVars: any): void {\r\n        themeVars[CustomizationService.COLOR_STRONG_KEY + '-h'] = 'var(' + CustomizationService.COLOR_USER_PRIMARY_KEY + '-h)';\r\n        themeVars[CustomizationService.COLOR_STRONG_KEY + '-s'] = 'var(' + CustomizationService.COLOR_USER_PRIMARY_KEY + '-s)';\r\n        themeVars[CustomizationService.COLOR_STRONG_KEY + '-l'] = 'var(' + CustomizationService.COLOR_USER_PRIMARY_KEY + '-l)';\r\n    }\r\n\r\n    getTextColorsVariables(themeVars: any): void {\r\n        themeVars[CustomizationService.COLOR_TEXT_LINK_KEY + '-h'] = '207';\r\n        themeVars[CustomizationService.COLOR_TEXT_LINK_KEY + '-s'] = '76%';\r\n        themeVars[CustomizationService.COLOR_TEXT_LINK_KEY + '-l'] = '37%';\r\n    }\r\n\r\n    getDefaultThemeColorsVariables(themeVars: any): void {\r\n        // System primary invert colors.\r\n        this.getSystemPrimaryInvertColorsVariables(themeVars);\r\n        // System primary colors.\r\n        this.getSystemPrimaryColorsVariables(themeVars);\r\n        // System success colors.\r\n        this.getSystemSuccessColorsVariables(themeVars);\r\n        // System caution colors.\r\n        this.getSystemCautionColorsVariables(themeVars);\r\n        // User primary colors.\r\n        this.getUserPrimaryColorsVariables(themeVars);\r\n        // User secondary colors.\r\n        this.getUserSecondaryColorsVariables(themeVars);\r\n\r\n        // Weak colors.\r\n        this.getWeakColorsVariables(themeVars);\r\n        // Regular colors.\r\n        this.getRegularColorsVariables(themeVars);\r\n        // Strong colors.\r\n        this.getStrongColorsVariables(themeVars);\r\n\r\n        // Text colors.\r\n        this.getTextColorsVariables(themeVars);\r\n    }\r\n\r\n    getDefaultThemeShadowsVariables(themeVars: any): void {\r\n        const noneOffset = '0';\r\n        themeVars[CustomizationService.SHADOW_NONE_OFFSET_KEY] = noneOffset;\r\n\r\n        const xsOffset = '0 0.125rem 0.25rem 0';\r\n        themeVars[CustomizationService.SHADOW_XS_OFFSET_KEY] = xsOffset;\r\n\r\n        const smOffset = '0 0.25rem 0.5rem 0';\r\n        themeVars[CustomizationService.SHADOW_SM_OFFSET_KEY] = smOffset;\r\n\r\n        const mdOffset = '0 0.5rem 1rem 0';\r\n        themeVars[CustomizationService.SHADOW_MD_OFFSET_KEY] = mdOffset;\r\n\r\n        const lgOffset = '0 1rem 2rem 0';\r\n        themeVars[CustomizationService.SHADOW_LG_OFFSET_KEY] = lgOffset;\r\n\r\n        const xlOffset = '0 2rem 4rem 0';\r\n        themeVars[CustomizationService.SHADOW_XL_OFFSET_KEY] = xlOffset;\r\n    }\r\n\r\n    getDefaultThemeFormCustomizationVariables(themeVars: any): void {\r\n        const formFieldSpacing = 1;\r\n        themeVars[CustomizationService.FORM_FIELD_HEIGHT_KEY] = '2.5' + CustomizationService.REM_STRING;\r\n        themeVars[CustomizationService.FORM_FIELD_TITLE_HEIGHT_KEY] = '1.5' + CustomizationService.REM_STRING;\r\n        themeVars[CustomizationService.FORM_SPACEING_KEY] = formFieldSpacing + CustomizationService.REM_STRING;\r\n        themeVars[CustomizationService.FORM_FIELD_SPACEING_KEY] = formFieldSpacing + CustomizationService.REM_STRING;\r\n    }\r\n\r\n    getDefaultThemeCardCustomizationVariables(themeVars: any): void {\r\n        themeVars[CustomizationService.CARD_FIELD_HEIGHT_KEY] = '1.5' + CustomizationService.REM_STRING;\r\n        themeVars[CustomizationService.CARD_SPACEING_KEY] = 'var(' + CustomizationService.SPACING_SIZE_XS_KEY + ')';\r\n\r\n        themeVars[CustomizationService.CARD_BORDER_RADIUS_KEY] = 'var(' + CustomizationService.BORDER_RADIUS_MD_KEY + ')';\r\n        themeVars[CustomizationService.CARD_SHADOW_OFFSET_KEY] = 'var(' + CustomizationService.SHADOW_MD_OFFSET_KEY + ')';\r\n    }\r\n\r\n    getDefaultThemeTableCustomizationVariables(themeVars: any): void {\r\n        themeVars[CustomizationService.TABLE_FIELD_HEIGHT_KEY] = '2' + CustomizationService.REM_STRING;\r\n        themeVars[CustomizationService.TABLE_SPACEING_KEY] = '0.5' + CustomizationService.REM_STRING;\r\n        themeVars[CustomizationService.TABLE_BORDER_RADIUS_KEY] = 'var(' + CustomizationService.BORDER_RADIUS_MD_KEY + ')';\r\n    }\r\n\r\n    getDefaultThemeQSCustomizationVariables(themeVars: any): void {\r\n        const qsState = STYLE_TYPE.Regular;\r\n        themeVars[CustomizationService.STYLE_QS_KEY] = qsState;\r\n\r\n        themeVars[CustomizationService.COLOR_QS_KEY + '-h'] = 'var(' + CustomizationService.COLOR_SYSTEM_PRIMARY_KEY + '-h)';\r\n        themeVars[CustomizationService.COLOR_QS_KEY + '-s'] = 'var(' + CustomizationService.COLOR_SYSTEM_PRIMARY_KEY + '-s)';\r\n        themeVars[CustomizationService.COLOR_QS_KEY + '-l'] = 'var(' + CustomizationService.COLOR_SYSTEM_PRIMARY_KEY + '-l)';\r\n    }\r\n\r\n    getDefaultThemeTopHeaderCustomizationVariables(themeVars: any): void {\r\n        const topHeaderState = STYLE_TYPE.Strong;\r\n        themeVars[CustomizationService.STYLE_TOP_HEADER_KEY] = topHeaderState;\r\n\r\n        themeVars[CustomizationService.COLOR_TOP_HEADER_KEY + '-h'] = '';\r\n        themeVars[CustomizationService.COLOR_TOP_HEADER_KEY + '-s'] = '';\r\n        themeVars[CustomizationService.COLOR_TOP_HEADER_KEY + '-l'] = '';\r\n    }\r\n\r\n    getDefaultThemeVariables(): any {\r\n        const themeVars = {};\r\n\r\n        // Declare default layout.\r\n        this.getDefaultThemeLayoutVariables(themeVars);\r\n\r\n        // Declare default border radius.\r\n        this.getDefaultThemeBorderRadiusVariables(themeVars);\r\n\r\n        // Declare default spacing.\r\n        this.getDefaultThemeSpacingVariables(themeVars);\r\n\r\n        // Declare default fonts size & line height.\r\n        this.getDefaultThemeFontsVariables(themeVars);\r\n\r\n        // Declare default buttons.\r\n        this.getDefaultThemeButtonsVariables(themeVars);\r\n\r\n        // Declare default colors.\r\n        this.getDefaultThemeColorsVariables(themeVars);\r\n\r\n        // Declare default shadows.\r\n        this.getDefaultThemeShadowsVariables(themeVars);\r\n\r\n        // Declare default form customization.\r\n        this.getDefaultThemeFormCustomizationVariables(themeVars);\r\n\r\n        // Declare default card customization.\r\n        this.getDefaultThemeCardCustomizationVariables(themeVars);\r\n\r\n        // Declare default table customization.\r\n        this.getDefaultThemeTableCustomizationVariables(themeVars);\r\n\r\n        // Declare default qs customization.\r\n        this.getDefaultThemeQSCustomizationVariables(themeVars);\r\n\r\n        // Declare default top header customization.\r\n        this.getDefaultThemeTopHeaderCustomizationVariables(themeVars);\r\n\r\n        return themeVars;\r\n    }\r\n\r\n    getThemeVariables(): any {\r\n        const ret = this.getDefaultThemeVariables();\r\n        const themeVars = this.sessionService.getObject(CustomizationService.USER_THEME_VARIABLES);\r\n\r\n        // Override defaults.\r\n        if (themeVars) {\r\n            // tslint:disable-next-line: forin\r\n            for (const key in themeVars) {\r\n                ret[key] = themeVars[key];\r\n            }\r\n        }\r\n\r\n        return ret;\r\n    }\r\n\r\n    setThemeVariables(themeVariablesToSet = null): void {\r\n        const themeVariables = this.getThemeVariables();\r\n\r\n        // Override defaults.\r\n        if (themeVariablesToSet) {\r\n            // tslint:disable-next-line: forin\r\n            for (const key in themeVariablesToSet) {\r\n                themeVariables[key] = themeVariablesToSet[key];\r\n            }\r\n        }\r\n\r\n        this.sessionService.setObject(CustomizationService.USER_THEME_VARIABLES, JSON.stringify(themeVariables));\r\n\r\n        // tslint:disable-next-line: forin\r\n        for (const key in themeVariables) {\r\n            document.documentElement.style.setProperty(key, themeVariables[key]);\r\n        }\r\n    }\r\n\r\n    getThemeVariable(key: string): string {\r\n        const themeVars = this.getThemeVariables();\r\n\r\n        if (themeVars.hasOwnProperty(key)) {\r\n            return themeVars[key];\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    getNumberThemeVariable(themeVars, key: string): number {\r\n        if (themeVars && themeVars.hasOwnProperty(key)) {\r\n            // If it's reference to another key.\r\n            if (themeVars[key].indexOf('var(') === 0) {\r\n                key = themeVars[key].substr(4).split(')')[0];\r\n            }\r\n\r\n            const tmp = Number(themeVars[key].replace(CustomizationService.REM_STRING, ''));\r\n            return tmp;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    setFooterHeight(height): void {\r\n        const self = this;\r\n        if (this.footerHeight.getValue() !== height) {\r\n            // it is publishing this value to all the subscribers that have already subscribed to this message\r\n            setTimeout(() => self.footerHeight.next(height), 0);\r\n        }\r\n        document.documentElement.style.setProperty(CustomizationService.FOOTER_HEIGHT_KEY, height + CustomizationService.REM_STRING);\r\n    }\r\n\r\n    setDefaultFooterHeight(): void {\r\n        const themeVars = this.getThemeVariables();\r\n\r\n        const res =\r\n            this.getNumberThemeVariable(themeVars, CustomizationService.FOOTER_BAR_SPACING_TOP_KEY) +\r\n            this.getNumberThemeVariable(themeVars, CustomizationService.FOOTER_BAR_SPACING_BOTTOM_KEY) +\r\n            this.getNumberThemeVariable(themeVars, CustomizationService.TOP_BAR_FIELD_HEIGHT_KEY);\r\n\r\n        this.setFooterHeight(res);\r\n    }\r\n\r\n    getTopBarHeight(): number {\r\n        const themeVars = this.getThemeVariables();\r\n\r\n        const res =\r\n            this.getNumberThemeVariable(themeVars, CustomizationService.TOP_BAR_SPACING_TOP_KEY) +\r\n            this.getNumberThemeVariable(themeVars, CustomizationService.TOP_BAR_SPACING_BOTTOM_KEY) +\r\n            this.getNumberThemeVariable(themeVars, CustomizationService.TOP_BAR_FIELD_HEIGHT_KEY);\r\n\r\n        return res;\r\n    }\r\n\r\n    setOldUserTheme(res: any): void {\r\n        // Added user theme.\r\n        const themeObj = {\r\n            Theme: res.Theme || 'default-theme',\r\n        };\r\n\r\n        this.sessionService.setObject(CustomizationService.USER_THEME, JSON.stringify(themeObj));\r\n\r\n        let spinnerColor;\r\n        let brandingFontColor;\r\n\r\n        if (this.isLightColor(res.BrandingMainColor)) {\r\n            spinnerColor = CustomizationService.DEFAULT_SPINNER_COLOR;\r\n            brandingFontColor = '#222';\r\n        } else {\r\n            spinnerColor = res.BrandingMainColor;\r\n            brandingFontColor = CustomizationService.DEFAULT_BRANDING_COLOR;\r\n        }\r\n\r\n        const color = {\r\n            BrandingSecondaryColor: res.BrandingSecondaryColor,\r\n            BrandingMainColor: res.BrandingMainColor,\r\n            BrandingFontColor: brandingFontColor,\r\n            SpinnerColor: spinnerColor,\r\n        };\r\n\r\n        this.sessionService.setObject(CustomizationService.USER_COLOR, JSON.stringify(color));\r\n\r\n        this.hasCustomHeader = res.TopHeaderFiles && res.TopHeaderFiles.length > 0 && res.TopHeaderFiles[0] !== '' ? true : false;\r\n        this.hasCustomHomepage =\r\n            res.UserRole === 'Buyer' && res.TopHeaderFiles &&\r\n            res.TopHeaderFiles.length > 1 && res.TopHeaderFiles[1] !== '';\r\n    }\r\n\r\n    isLegacyColor(): boolean {\r\n        const h = document.documentElement.style.getPropertyValue(CustomizationService.COLOR_TOP_HEADER_KEY + '-h');\r\n        const s = document.documentElement.style.getPropertyValue(CustomizationService.COLOR_TOP_HEADER_KEY + '-s');\r\n        const l = document.documentElement.style.getPropertyValue(CustomizationService.COLOR_TOP_HEADER_KEY + '-l');\r\n\r\n        return !(h && s && l);\r\n    }\r\n\r\n    getLoadingSpinnerColor(): string {\r\n        let spinnerColor = '';\r\n\r\n        if (this.isLegacyColor()) {\r\n            const color = this.sessionService.getObject(CustomizationService.USER_COLOR);\r\n\r\n            if (color && color.SpinnerColor) {\r\n                spinnerColor = color.SpinnerColor;\r\n            } else {\r\n                spinnerColor = CustomizationService.DEFAULT_SPINNER_COLOR;\r\n            }\r\n        }\r\n\r\n        return spinnerColor;\r\n    }\r\n\r\n    getBrandingMainColor(): string {\r\n        let brandingMainColor = '';\r\n\r\n        if (this.isLegacyColor()) {\r\n            const color = this.sessionService.getObject(CustomizationService.USER_COLOR);\r\n\r\n            if (color && color.BrandingMainColor) {\r\n                brandingMainColor = color.BrandingMainColor;\r\n            } else {\r\n                brandingMainColor = CustomizationService.DEFAULT_BRANDING_COLOR;\r\n            }\r\n        }\r\n\r\n        return brandingMainColor;\r\n    }\r\n\r\n    isLightColor(hexColor): boolean {\r\n        if (!hexColor) {\r\n            return;\r\n        }\r\n\r\n        let isBright = false;\r\n        let sum = 0;\r\n        const c = hexColor.replace(/^#/, '');\r\n\r\n        sum = parseInt(c[0] + c[1], 16);\r\n        sum += parseInt(c[2] + c[3], 16);\r\n        sum += parseInt(c[4] + c[5], 16);\r\n\r\n        if (sum > 382.6) {\r\n            // it's bright color\r\n            isBright = true;\r\n        }\r\n\r\n        return isBright;\r\n    }\r\n}\r\n"]}