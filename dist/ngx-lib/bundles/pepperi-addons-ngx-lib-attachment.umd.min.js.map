{"version":3,"sources":["../../../projects/ngx-lib/attachment/attachment.component.html","../../../projects/ngx-lib/attachment/attachment.component.ts","../../../projects/ngx-lib/attachment/attachment.module.ts"],"names":["i0.ɵɵelementStart","i0.ɵɵlistener","$event","i0","ɵɵrestoreView","_r8_1","ɵɵnextContext","onFileClicked","i0.ɵɵelementEnd","i0.ɵɵproperty","ctx_r1","src","label","required","disabled","xAlignment","rowSpan","controlType","form","layoutType","standAlone","acceptAttachmentType","i0.ɵɵelementContainer","i0.ɵɵtext","i0.ɵɵpropertyInterpolate","i0.ɵɵadvance","i0.ɵɵtextInterpolate","i0.ɵɵtemplate","_r11","_r13","i0.ɵɵelementContainerStart","i0.ɵɵelement","i0.ɵɵelementContainerEnd","ctx_r4","showTitle","_r18","_r20","_r25","_r27","PepperiAttachmentComponent","customizationService","renderer","element","fileService","this","key","readonly","LAYOUT_TYPE","PepperiForm","isActive","valueChanged","EventEmitter","elementClicked","fieldHeight","dataURI","prototype","ngOnDestroy","unsubscribe","ngOnInit","getDefaultFromGroup","addClass","nativeElement","CustomizationService","STAND_ALONE_FIELD_CLASS_NAME","calculateFieldHeight","ngOnChanges","changes","currentValue","length","onFileChanged","value","JSON","parse","fileStr","updateFormFieldValue","fileExt","emit","apiName","event","fileStrArr","split","win","window","open","contentType","base64","blob","convertFromb64toBlob","url","URL","createObjectURL","location","href","isValidUrl","eventWhich","which","ɵɵdirectiveInject","i1","Renderer2","ElementRef","FileService","selectors","inputs","outputs","features","ɵɵNgOnChangesFeature","decls","vars","consts","template","rf","ctx","PepperiAttachmentModule","imports","CommonModule","ReactiveFormsModule","FormsModule","MatCommonModule","MatFormFieldModule","PepperiModule","PepperiFieldTitleModule","PepperiFilesUploaderModule","declarations","exports"],"mappings":"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","sourcesContent":["<!-- New code -->\r\n<ng-template #pepperiTemplate>\r\n    <files-uploader [key]=\"key\" [src]=\"src\" [label]=\"label\" [required]=\"required\" [disabled]=\"disabled\"\r\n        [xAlignment]=\"xAlignment\" [rowSpan]=\"rowSpan\" [controlType]=\"controlType\" [form]=\"form\"\r\n        [layoutType]=\"layoutType\" [standAlone]=\"standAlone\" (fileChanged)=\"onFileChanged($event)\"\r\n        (elementClicked)=\"onFileClicked($event)\" [acceptedExtensions]=\"acceptAttachmentType\">\r\n    </files-uploader>\r\n</ng-template>\r\n\r\n<ng-template #pepperiReadonlyTemplate>\r\n    <ng-container *ngIf=\"src?.length > 0; then notEmptyBlock; else emptyBlock\"></ng-container>\r\n    <ng-template #notEmptyBlock>\r\n        <div class=\"pepperi-file-container\">\r\n            <a [id]=\"key\" class=\"color-link body-sm pepperi-card-input \" *ngIf=\"src != null\" title=\"{{ src }}\"\r\n                target=\"_blank\" href=\"{{ src }}\">{{ src }}</a>\r\n        </div>\r\n    </ng-template>\r\n    <ng-template #emptyBlock>\r\n        <span>&nbsp;</span>\r\n    </ng-template>\r\n</ng-template>\r\n\r\n<ng-container *ngIf=\"layoutType === LAYOUT_TYPE.PepperiForm\">\r\n    <div class=\"pepperi-file-container\" [ngClass]=\"{ 'one-row': rowSpan == 1, 'stand-alone': standAlone }\">\r\n        <pep-field-title [label]=\"label\" [required]=\"required\" [disabled]=\"disabled\" [xAlignment]=\"xAlignment\"\r\n            [showTitle]=\"showTitle\">\r\n        </pep-field-title>\r\n        <ng-container *ngTemplateOutlet=\"pepperiTemplate\"></ng-container>\r\n    </div>\r\n</ng-container>\r\n\r\n<ng-container *ngIf=\"layoutType === LAYOUT_TYPE.PepperiCard\">\r\n    <ng-container *ngIf=\"false && isActive && !disabled; then selectedBlock; else notSelectedBlock\"></ng-container>\r\n    <ng-template #selectedBlock>\r\n        <div class=\"pepperi-file-container\" [ngClass]=\"{ 'one-row': rowSpan == 1, 'stand-alone': standAlone}\">\r\n            <ng-container *ngTemplateOutlet=\"pepperiTemplate\"></ng-container>\r\n        </div>\r\n    </ng-template>\r\n    <ng-template #notSelectedBlock>\r\n        <ng-container *ngTemplateOutlet=\"pepperiReadonlyTemplate\"></ng-container>\r\n    </ng-template>\r\n</ng-container>\r\n\r\n\r\n<ng-container *ngIf=\"layoutType === LAYOUT_TYPE.PepperiTable\">\r\n    <ng-container *ngIf=\"false && isActive && !disabled; then selectedBlock; else notSelectedBlock\"></ng-container>\r\n    <ng-template #selectedBlock>\r\n        <div class=\"pepperi-file-container one-row\">\r\n            <ng-container *ngTemplateOutlet=\"pepperiTemplate\"></ng-container>\r\n        </div>\r\n    </ng-template>\r\n    <ng-template #notSelectedBlock>\r\n        <ng-container *ngTemplateOutlet=\"pepperiReadonlyTemplate\"></ng-container>\r\n    </ng-template>\r\n</ng-container>\r\n","import { Component, OnInit, OnChanges, Input, Output, EventEmitter, ChangeDetectionStrategy, ElementRef, Renderer2, OnDestroy } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { FileService, CustomizationService, LAYOUT_TYPE } from '@pepperi-addons/ngx-lib';\r\n\r\n@Component({\r\n    selector: 'pep-attachment',\r\n    templateUrl: './attachment.component.html',\r\n    styleUrls: ['./attachment.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class PepperiAttachmentComponent implements OnInit, OnChanges, OnDestroy {\r\n    @Input() key = '';\r\n    @Input() src = '';\r\n    @Input() label = '';\r\n    @Input() required = false;\r\n    @Input() disabled = false;\r\n    @Input() readonly = false;\r\n    @Input() xAlignment = '0';\r\n    @Input() rowSpan = 1;\r\n\r\n    controlType = 'attachment';\r\n\r\n    @Input() form: FormGroup = null;\r\n    @Input() showTitle = true;\r\n    @Input() layoutType: LAYOUT_TYPE = LAYOUT_TYPE.PepperiForm;\r\n    @Input() isActive = false;\r\n\r\n    @Output() valueChanged: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() elementClicked: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    LAYOUT_TYPE = LAYOUT_TYPE;\r\n    fieldHeight = '';\r\n    standAlone = false;\r\n    dataURI = null;\r\n\r\n    acceptAttachmentType =\r\n        'application/pdf,application/json,text/csv,text/csv-schema,application/msword,application/vnd.ms-excel,text/plain,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet,application/vnd.openxmlformats-officedocument.wordprocessingml.document,image/bmp,image/jpg, image/jpeg, image/png, image/tif, image/tiff, txt, json';\r\n\r\n    constructor(\r\n        private customizationService: CustomizationService,\r\n        private renderer: Renderer2,\r\n        public element: ElementRef,\r\n        private fileService: FileService) { }\r\n\r\n    ngOnDestroy(): void {\r\n        if (this.elementClicked) {\r\n            this.elementClicked.unsubscribe();\r\n        }\r\n\r\n        if (this.valueChanged) {\r\n            this.valueChanged.unsubscribe();\r\n        }\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        if (this.form === null) {\r\n            this.standAlone = true;\r\n            this.form = this.customizationService.getDefaultFromGroup(this.key, this.src, this.required, this.readonly, this.disabled);\r\n\r\n            this.renderer.addClass(this.element.nativeElement, CustomizationService.STAND_ALONE_FIELD_CLASS_NAME);\r\n        }\r\n\r\n        this.fieldHeight = this.customizationService.calculateFieldHeight(this.layoutType, this.rowSpan, this.standAlone);\r\n    }\r\n\r\n    ngOnChanges(changes: any): void {\r\n        if (changes.src && changes.src.currentValue.length > 0) {\r\n            // Empty dataURI if there is change in the src.\r\n            this.dataURI = null;\r\n        }\r\n    }\r\n\r\n    onFileChanged(value: any): void {\r\n        this.dataURI = value.length > 0 ? JSON.parse(value) : null;\r\n        this.src = this.dataURI ? this.dataURI.fileStr : '';\r\n        this.customizationService.updateFormFieldValue(this.form, this.key, this.dataURI ? this.dataURI.fileExt : '');\r\n        this.valueChanged.emit({ apiName: this.key, value, controlType: this.controlType });\r\n    }\r\n\r\n    onFileClicked(event): void {\r\n        if (this.dataURI != null) {\r\n            const fileStrArr = this.dataURI.fileStr.split(';');\r\n            if (fileStrArr.length === 2) {\r\n                const win = window.open('', '_blank');\r\n                const contentType = fileStrArr[0].split(':')[1];\r\n                const base64 = fileStrArr[1].split(',')[1];\r\n                const blob = this.fileService.convertFromb64toBlob(base64, contentType);\r\n                const url = URL.createObjectURL(blob);\r\n                win.location.href = url;\r\n            }\r\n        } else {\r\n            if (this.fileService.isValidUrl(this.src)) {\r\n                const win = window.open('', '_blank');\r\n                win.location.href = this.src;\r\n            }\r\n        }\r\n\r\n        this.elementClicked.emit({ apiName: this.key, eventWhich: event.which });\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\n\r\nimport { MatCommonModule } from '@angular/material/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\n\r\nimport { PepperiModule } from '@pepperi-addons/ngx-lib';\r\nimport { PepperiFieldTitleModule } from '@pepperi-addons/ngx-lib/field-title';\r\nimport { PepperiFilesUploaderModule } from '@pepperi-addons/ngx-lib/files-uploader';\r\n\r\nimport { PepperiAttachmentComponent } from './attachment.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        ReactiveFormsModule,\r\n        FormsModule,\r\n        // Material modules\r\n        MatCommonModule,\r\n        MatFormFieldModule,\r\n        // Pepperi modules\r\n        PepperiModule,\r\n        PepperiFieldTitleModule,\r\n        PepperiFilesUploaderModule\r\n    ],\r\n    exports: [ PepperiAttachmentComponent ],\r\n    declarations: [ PepperiAttachmentComponent ],\r\n})\r\nexport class PepperiAttachmentModule {}\r\n"]}