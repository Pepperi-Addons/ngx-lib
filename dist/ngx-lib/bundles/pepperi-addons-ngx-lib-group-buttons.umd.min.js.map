{"version":3,"sources":["../../../projects/ngx-lib/group-buttons/group-buttons.component.html","../../../projects/ngx-lib/group-buttons/group-buttons.component.ts","../../../projects/ngx-lib/group-buttons/group-buttons.module.ts"],"names":["i0.ɵɵelementStart","i0.ɵɵlistener","button_r4","Callback","$event","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵclassMapInterpolate1","i0.ɵɵproperty","i0.ɵɵadvance","i0.ɵɵtextInterpolate","i0.ɵɵelementContainerStart","i0.ɵɵtemplate","i0.ɵɵelementContainerEnd","button_r9","ctx_r17","buttons","i0.ɵɵelement","ctx_r1","buttonsDisabled","i0.ɵɵpropertyInterpolate","button_r20","GROUP_BUTTONS_VIEW_TYPE","i0.ɵɵclassMapInterpolate2","ctx_r19","GroupButtonsComponent","layoutService","_this","this","viewType","Regular","onResize$","pipe","delay","subscribe","size","screenSize","prototype","ngOnInit","ngOnDestroy","i0","ɵɵdirectiveInject","i1","LayoutService","selectors","inputs","buttonsClass","decls","vars","consts","template","rf","ctx","pepperiIconRegistry","registerIcons","pepperiIconArrowUp","pepperiIconArrowDown","PepperiGroupButtonsModule","ɵɵinject","i1$1","PepperiIconRegistry","imports","CommonModule","MatCommonModule","MatFormFieldModule","MatButtonModule","MatMenuModule","MatIconModule","PepperiModule","PepperiIconModule","declarations","exports"],"mappings":"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","sourcesContent":["<div class=\"group-buttons-container\" pepRtlDirection>\r\n    <ng-container *ngIf=\"viewType == GROUP_BUTTONS_VIEW_TYPE.Regular\">\r\n        <button *ngFor=\"let button of buttons\"\r\n            class=\"pepperi-button spacing-element pull-left flip first-button mat-button {{ buttonsClass }}\"\r\n            [disabled]=\"buttonsDisabled\" mat-button (click)=\"button?.Callback($event)\">\r\n            <span>{{ button?.Value }}</span>\r\n        </button>\r\n    </ng-container>\r\n\r\n    <div *ngIf=\"viewType == GROUP_BUTTONS_VIEW_TYPE.Dropdown\" class=\"dropdown-buttons spacing-element\"\r\n        [ngClass]=\"{dropup: screenSize >= 2}\">\r\n        <button class=\"pepperi-button pull-left flip first-button mat-button {{ buttonsClass }}\"\r\n            (click)=\"buttons[0]?.Callback($event)\" [disabled]=\"buttonsDisabled\" mat-button>\r\n            <span class=\"pepperi-btn-text\">{{ buttons[0]?.Value }}</span>\r\n        </button>\r\n        <button class=\"pepperi-button icon-button pull-right flip last-button mat-button {{ buttonsClass }}\"\r\n            [matMenuTriggerFor]=\"actionsMenu\" [disabled]=\"buttonsDisabled\" pepMenuBlur mat-button>\r\n            <mat-icon>\r\n                <pep-icon name=\"{{ screenSize < 2 ? 'arrow_down' : 'arrow_up' }}\">\r\n                </pep-icon>\r\n            </mat-icon>\r\n        </button>\r\n\r\n        <mat-menu #actionsMenu=\"matMenu\" xPosition=\"before\">\r\n            <ng-container *ngFor=\"let button of buttons; let i = index; first as isFirst\">\r\n                <button *ngIf=\"!isFirst\" mat-menu-item (click)=\"button?.Callback($event)\">\r\n                    <span>{{ button?.Value }}</span>\r\n                </button>\r\n            </ng-container>\r\n        </mat-menu>\r\n    </div>\r\n    <div *ngIf=\"viewType == GROUP_BUTTONS_VIEW_TYPE.Split\" class=\"split-buttons\">\r\n        <button *ngFor=\"let button of buttons; let index; let isFirst = first; let isLast = last\"\r\n            class=\"pepperi-button  split-button mat-button {{ buttonsClass }} {{ button?.Class }} pull-left flip\"\r\n            [ngClass]=\"{'first-button': isFirst, 'middle-button': !isFirst && !isLast, 'last-button': isLast, 'icon-button': button?.Icon}\"\r\n            [disabled]=\"buttonsDisabled\" mat-button (click)=\"button?.Callback($event)\">\r\n            <mat-icon *ngIf=\"button?.Icon\">\r\n                <pep-icon name=\"{{button?.Icon}}\" (click)=\"button?.Callback($event)\">\r\n                </pep-icon>\r\n            </mat-icon>\r\n            <span *ngIf=\"button?.Value\">{{ button?.Value }}</span>\r\n        </button>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, OnDestroy, Input, Output, EventEmitter } from '@angular/core';\r\nimport { LayoutService, SCREEN_SIZE } from '@pepperi-addons/ngx-lib';\r\nimport { delay } from 'rxjs/operators';\r\n\r\nexport interface PepperiGroupButton {\r\n    Value;\r\n    Class;\r\n    Icon;\r\n    Callback;\r\n}\r\n\r\nexport enum GROUP_BUTTONS_VIEW_TYPE {\r\n    Regular,\r\n    Dropdown,\r\n    Split,\r\n}\r\n\r\n@Component({\r\n    selector: 'pep-group-buttons',\r\n    templateUrl: './group-buttons.component.html',\r\n    styleUrls: ['./group-buttons.component.scss'],\r\n})\r\nexport class GroupButtonsComponent implements OnInit, OnDestroy {\r\n    GROUP_BUTTONS_VIEW_TYPE = GROUP_BUTTONS_VIEW_TYPE;\r\n    screenSize: SCREEN_SIZE;\r\n\r\n    @Input() viewType: GROUP_BUTTONS_VIEW_TYPE = GROUP_BUTTONS_VIEW_TYPE.Regular;\r\n    @Input() buttons: Array<PepperiGroupButton>;\r\n    @Input() buttonsClass: string;\r\n    @Input() buttonsDisabled: string;\r\n\r\n    // @Output() buttonClick: EventEmitter<PepperiGroupButton> = new EventEmitter<PepperiGroupButton>();\r\n\r\n    constructor(public layoutService: LayoutService) {\r\n        this.layoutService.onResize$\r\n            .pipe(delay(0))\r\n            .subscribe(size => {\r\n                this.screenSize = size;\r\n            });\r\n    }\r\n\r\n    ngOnInit(): void { }\r\n\r\n    ngOnDestroy() {\r\n        // if (this.buttonClick) this.buttonClick.unsubscribe();\r\n    }\r\n\r\n    // onButtonClicked(button: PepperiGroupButton) {\r\n    //     this.buttonClick.emit(button);\r\n    // }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { MatCommonModule } from '@angular/material/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\nimport { PepperiModule } from '@pepperi-addons/ngx-lib';\r\nimport { PepperiIconModule, PepperiIconRegistry, pepperiIconArrowUp, pepperiIconArrowDown } from '@pepperi-addons/ngx-lib/icon';\r\n\r\nimport { GroupButtonsComponent } from './group-buttons.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        // Material modules\r\n        MatCommonModule,\r\n        MatFormFieldModule,\r\n        MatButtonModule,\r\n        MatMenuModule,\r\n        MatIconModule,\r\n        // Pepperi modules\r\n        PepperiModule,\r\n        PepperiIconModule\r\n    ],\r\n    exports: [ GroupButtonsComponent ],\r\n    declarations: [ GroupButtonsComponent ],\r\n})\r\nexport class PepperiGroupButtonsModule {\r\n    constructor(private pepperiIconRegistry: PepperiIconRegistry) {\r\n        this.pepperiIconRegistry.registerIcons([\r\n            pepperiIconArrowUp,\r\n            pepperiIconArrowDown\r\n        ]);\r\n    }\r\n}\r\n"]}