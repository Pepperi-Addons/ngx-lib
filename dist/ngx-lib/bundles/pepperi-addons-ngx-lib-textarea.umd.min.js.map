{"version":3,"sources":["../../../projects/ngx-lib/textarea/textarea.component.html","../../../projects/ngx-lib/textarea/textarea.component.ts","../../../projects/ngx-lib/textarea/textarea.module.ts"],"names":["i0.ɵɵelement","i0.ɵɵproperty","ctx_r7","required","disabled","maxFieldCharacters","xAlignment","showTitle","_r8","value","length","i0.ɵɵstyleProp","i0.ɵɵpropertyInterpolate","i0","ɵɵpipeBind1","ctx_r9","ɵɵsanitizeHtml","i0.ɵɵelementStart","i0.ɵɵtemplate","i0.ɵɵlistener","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵadvance","ctx_r1","key","ɵɵpureFunction1","_c1","label","controlType","_c4","layoutType","LAYOUT_TYPE","PepperiCard","rowSpan","ɵɵpipeBind2","_c5","i0.ɵɵelementContainer","i0.ɵɵelementContainerStart","i0.ɵɵelementContainerEnd","ɵɵpureFunction0","_c6","_c7","i0.ɵɵtextInterpolate1","i0.ɵɵclassMap","_c10","ctx_r18","i0.ɵɵtextInterpolate","_r15","_r17","ctx_r35","ctx_r36","_c11","ctx_r32","ɵɵpureFunction2","_c12","textColor","_r31","_r33","_r25","_r27","PepperiTextareaComponent","dialogService","customizationService","renderer","element","this","readonly","form","isActive","PepperiForm","valueChanged","EventEmitter","fieldHeight","standAlone","isInEditMode","prototype","ngOnInit","getDefaultFromGroup","addClass","nativeElement","CustomizationService","STAND_ALONE_FIELD_CLASS_NAME","calculateFieldHeight","ngOnChanges","changes","self","setTimeout","lastFocusField","focus","ngOnDestroy","unsubscribe","onBlur","event","_this","target","changeValue","relatedTarget","lastFocusedField","updateFormFieldValue","emit","apiName","cardTemplateClicked","openDialog","data","DialogData","title","content","contentType","DialogDataType","TextArea","contentData","showFooter","config","getDialogConfig","maxWidth","maxHeight","openDefaultDialog","afterClosed","subscribe","ɵɵdirectiveInject","i1$1","DialogService","i2","Renderer2","ElementRef","selectors","viewQuery","rf","ctx","pepperiIconRegistry","registerIcons","pepperiIconSystemEdit","PepperiTextareaModule","ɵɵinject","i1","PepperiIconRegistry","imports","CommonModule","ReactiveFormsModule","FormsModule","MatCommonModule","MatButtonModule","MatFormFieldModule","MatInputModule","MatIconModule","PepperiModule","PepperiIconModule","PepperiFieldTitleModule","PepperiTextboxIconModule","PepperiDialogModule","declarations","exports"],"mappings":"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","sourcesContent":["<ng-container [formGroup]=\"form\">\r\n    <!-- New code -->\r\n    <ng-template #pepperiTemplate let-isFormView=\"isFormView\">\r\n        <div class=\"pepperi-textarea-container\" [ngClass]=\"{ 'right-alignment': xAlignment == '2', 'one-row': rowSpan === 1, 'stand-alone': standAlone,\r\n            'pepperi-textarea-card-container': layoutType === LAYOUT_TYPE.PepperiCard }\">\r\n            <pep-field-title *ngIf=\"isFormView\" [label]=\"label\" [required]=\"required\" [disabled]=\"disabled\"\r\n                [maxFieldCharacters]=\"maxFieldCharacters\" [xAlignment]=\"xAlignment\" [showTitle]=\"showTitle\"\r\n                [inputLength]=\"input.value?.length\">\r\n            </pep-field-title>\r\n            <mat-form-field appearance=\"outline\" dir=\"{{ xAlignment == '2' ? 'rtl' : 'ltr' }}\"\r\n                [ngClass]=\"{ 'pepperi-table-textarea': layoutType === LAYOUT_TYPE.PepperiTable }\">\r\n                <textarea #input [hidden]=\"readonly\" [id]=\"key\" class=\"body-sm\" matInput (blur)=\"onBlur($event)\"\r\n                    title=\"{{ value }}\" [value]=\"value\"\r\n                    maxlength=\"{{ maxFieldCharacters > 0 ? maxFieldCharacters : 99999 }}\"\r\n                    [ngStyle]=\"{ color: 'textColor', 'text-align': xAlignment == '2' ? 'right' : 'left' }\"\r\n                    [formControlName]=\"key\" [style.height]=\"fieldHeight\" [disabled]=\"disabled\">\r\n                </textarea>\r\n                <div *ngIf=\"readonly\" class=\"body-sm disable-text-div\" title=\"{{ value }}\"\r\n                    [ngStyle]=\"{ color: 'textColor', 'text-align': xAlignment == '2' ? 'right' : 'left' }\"\r\n                    [innerHtml]=\"value | safeHtml\" [style.height]=\"fieldHeight\">\r\n                </div>\r\n                <!-- <pep-textbox-icon *ngIf=\"xAlignment == '2'\" matPrefix [value]=\"value\" [label]=\"label\" [type]=\"controlType\" [disabled]=\"disabled\"\r\n                    [ngClass]=\"{ 'card-one-row-icon': layoutType === LAYOUT_TYPE.PepperiCard && rowSpan === 1 }\" (iconClicked)=\"openDialog()\">\r\n                </pep-textbox-icon> -->\r\n                <pep-textbox-icon matSuffix [value]=\"value\" [label]=\"label\" [type]=\"controlType\" [disabled]=\"disabled\"\r\n                    [ngClass]=\"{ 'card-one-row-icon': layoutType === LAYOUT_TYPE.PepperiCard && rowSpan === 1 }\"\r\n                    (iconClicked)=\"openDialog()\">\r\n                </pep-textbox-icon>\r\n                <mat-error>\r\n                    <span class=\"body-xs\"\r\n                        [title]=\"required && value.length == 0 ? ('MESSAGES.ERROR_IS_REQUIRED' | translate: { field: label }) : ('MESSAGES.ERROR_IS_NOT_VALID' | translate: { field: label })\"\r\n                        [innerText]=\"required && value.length == 0 ? ('MESSAGES.ERROR_IS_REQUIRED' | translate: { field: label }) : ('MESSAGES.ERROR_IS_NOT_VALID' | translate: { field: label })\"></span>\r\n                </mat-error>\r\n            </mat-form-field>\r\n        </div>\r\n    </ng-template>\r\n\r\n    <ng-container *ngIf=\"layoutType === LAYOUT_TYPE.PepperiForm\">\r\n        <ng-container *ngTemplateOutlet=\"pepperiTemplate; context: { isFormView: true }\"></ng-container>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"layoutType === LAYOUT_TYPE.PepperiCard\">\r\n        <ng-container *ngIf=\"isInEditMode; then editBlock; else readOnlyBlock\"></ng-container>\r\n        <ng-template #editBlock>\r\n            <ng-container *ngTemplateOutlet=\"pepperiTemplate; context: { isFormView: false }\"></ng-container>\r\n        </ng-template>\r\n        <ng-template #readOnlyBlock>\r\n            <div class=\"pepperi-textarea-card-container card-flex-container\"\r\n                [ngClass]=\"{'one-row': rowSpan === 1, 'pepperi-button weak': isActive && !disabled }\"\r\n                [ngStyle]=\"{ '-webkit-line-clamp': rowSpan }\" [class]=\"'text-align-' + xAlignment\"\r\n                (click)=\"!disabled ? cardTemplateClicked($event) : ''\" [style.height]=\"fieldHeight\">\r\n                <span *ngIf=\" showTitle && label !=''\" class=\" body-xs title no-shrink\"\r\n                    title=\"{{ label }}\">{{ label }}&nbsp;</span>\r\n                <span [id]=\"key\" title=\"{{ value }}\" class=\"body-sm value wrap\">{{ value }}</span>\r\n                <button *ngIf=\"isActive && !disabled\" class=\"pepperi-button weak card-edit-button self-start\"\r\n                    [ngClass]=\"{'self-end' : value && value !== ''}\" mat-button>\r\n                    <mat-icon>\r\n                        <pep-icon name=\"system_edit\">\r\n                        </pep-icon>\r\n                    </mat-icon>\r\n                </button>\r\n            </div>\r\n        </ng-template>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"layoutType === LAYOUT_TYPE.PepperiTable\">\r\n        <ng-container *ngIf=\"isActive && !disabled; then selectedBlock; else notSelectedBlock\"></ng-container>\r\n        <ng-template #selectedBlock>\r\n            <ng-container *ngTemplateOutlet=\"pepperiTemplate; context: { isFormView: false }\"></ng-container>\r\n        </ng-template>\r\n        <ng-template #notSelectedBlock>\r\n            <ng-container *ngIf=\"value?.length > 0; then notEmptyBlock; else emptyBlock\"></ng-container>\r\n            <ng-template #notEmptyBlock>\r\n                <mat-form-field appearance=\"outline\" dir=\"{{ xAlignment == '2' ? 'rtl' : 'ltr' }}\"\r\n                    class=\"pepperi-report-textarea\" [ngClass]=\"{ readonly: disabled }\">\r\n                    <input matInput [id]=\"key\" class=\"body-sm pepperi-report-input\" [ngClass]=\"{ readonly: disabled }\"\r\n                        [ngStyle]=\"{ color: textColor, 'text-align': xAlignment == '3' ? 'center' : xAlignment == '2' ? 'right' : 'left' }\"\r\n                        title=\"{{ value }}\" [formControlName]=\"key\" type=\"text\" [value]=\"value\" [disabled]=\"true\" />\r\n                    <pep-textbox-icon *ngIf=\"disabled && xAlignment == '2'\" matPrefix [value]=\"value\" [label]=\"label\"\r\n                        [type]=\"controlType\" [disabled]=\"disabled\" (iconClicked)=\"openDialog()\">\r\n                    </pep-textbox-icon>\r\n                    <pep-textbox-icon *ngIf=\"disabled && (xAlignment == '1' || xAlignment == '0')\" matSuffix\r\n                        [value]=\"value\" [label]=\"label\" [type]=\"controlType\" [disabled]=\"disabled\"\r\n                        (iconClicked)=\"openDialog()\">\r\n                    </pep-textbox-icon>\r\n                </mat-form-field>\r\n            </ng-template>\r\n            <ng-template #emptyBlock>\r\n                <span>&nbsp;</span>\r\n            </ng-template>\r\n        </ng-template>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"layoutType === LAYOUT_TYPE.Editmodal\">\r\n        <ng-container *ngTemplateOutlet=\"pepperiTemplate; context: { isFormView: true }\"></ng-container>\r\n    </ng-container>\r\n</ng-container>","import {\r\n    Component, OnInit, OnChanges, Input, Output, EventEmitter,\r\n    ChangeDetectionStrategy, ElementRef, ViewChild, OnDestroy, Renderer2\r\n} from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { LAYOUT_TYPE, CustomizationService } from '@pepperi-addons/ngx-lib';\r\nimport { DialogService, DialogData, DialogDataType } from '@pepperi-addons/ngx-lib/dialog';\r\n\r\n@Component({\r\n    selector: 'pep-textarea',\r\n    templateUrl: './textarea.component.html',\r\n    styleUrls: ['./textarea.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PepperiTextareaComponent implements OnChanges, OnInit, OnDestroy {\r\n    @Input() key = '';\r\n    @Input() value = '';\r\n    @Input() label = '';\r\n    @Input() required = false;\r\n    @Input() disabled = false;\r\n    @Input() readonly = false;\r\n    @Input() maxFieldCharacters: number;\r\n    @Input() textColor = '';\r\n    @Input() xAlignment = '0';\r\n    @Input() rowSpan = 1;\r\n    @Input() lastFocusField: any;\r\n\r\n    controlType = 'textarea';\r\n\r\n    @Input() form: FormGroup = null;\r\n    @Input() isActive = false;\r\n    @Input() showTitle = true;\r\n    @Input() layoutType: LAYOUT_TYPE = LAYOUT_TYPE.PepperiForm;\r\n\r\n    @Output() valueChanged: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    @ViewChild('input') input: ElementRef;\r\n\r\n    LAYOUT_TYPE = LAYOUT_TYPE;\r\n    fieldHeight = '';\r\n    standAlone = false;\r\n    isInEditMode = false;\r\n\r\n    constructor(\r\n        private dialogService: DialogService,\r\n        private customizationService: CustomizationService,\r\n        private renderer: Renderer2,\r\n        private element: ElementRef\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        if (this.form === null) {\r\n            this.standAlone = true;\r\n            this.form = this.customizationService.getDefaultFromGroup(\r\n                this.key, this.value, this.required, this.readonly, this.disabled, this.maxFieldCharacters);\r\n\r\n            this.renderer.addClass(this.element.nativeElement, CustomizationService.STAND_ALONE_FIELD_CLASS_NAME);\r\n        }\r\n\r\n        this.fieldHeight = this.customizationService.calculateFieldHeight(this.layoutType, this.rowSpan, this.standAlone);\r\n    }\r\n\r\n    ngOnChanges(changes: any): void {\r\n        const self = this;\r\n        setTimeout(() => {\r\n            if (self.lastFocusField) {\r\n                self.lastFocusField.focus();\r\n                self.lastFocusField = null;\r\n            }\r\n        }, 100);\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        if (this.valueChanged) {\r\n            this.valueChanged.unsubscribe();\r\n        }\r\n    }\r\n\r\n    onBlur(event: any): void {\r\n        const value = event.target ? event.target.value : event;\r\n        this.changeValue(value, event.relatedTarget);\r\n\r\n        setTimeout(() => {\r\n            if (this.isInEditMode) {\r\n                this.isInEditMode = false;\r\n            }\r\n        }, 0);\r\n    }\r\n\r\n    changeValue(value: any, lastFocusedField: any = null): void {\r\n        if (value !== this.value) {\r\n            this.value = value;\r\n            this.customizationService.updateFormFieldValue(this.form, this.key, value);\r\n            this.valueChanged.emit({ apiName: this.key, value, lastFocusedField });\r\n        }\r\n    }\r\n\r\n    cardTemplateClicked(event: any): void {\r\n        this.openDialog();\r\n    }\r\n\r\n    openDialog(): void {\r\n        // TODO:\r\n        const data = new DialogData({\r\n            title: this.label,\r\n            content: this.value,\r\n            contentType: DialogDataType.TextArea,\r\n            contentData: { key: this.key, disabled: this.disabled },\r\n            showFooter: true\r\n        });\r\n\r\n        const config = this.dialogService.getDialogConfig({\r\n            maxWidth: '90vw',\r\n            maxHeight: '90vh'\r\n        });\r\n\r\n        const dialogRef = this.dialogService.openDefaultDialog(data, config);\r\n\r\n        dialogRef.afterClosed().subscribe(value => {\r\n            if (value !== undefined && value !== null) {\r\n                this.changeValue(value);\r\n            }\r\n        });\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\n\r\nimport { MatCommonModule } from '@angular/material/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\nimport { PepperiModule } from '@pepperi-addons/ngx-lib';\r\nimport { PepperiIconModule, PepperiIconRegistry, pepperiIconSystemEdit } from '@pepperi-addons/ngx-lib/icon';\r\nimport { PepperiTextboxIconModule } from '@pepperi-addons/ngx-lib/textbox-icon';\r\nimport { PepperiFieldTitleModule } from '@pepperi-addons/ngx-lib/field-title';\r\nimport { PepperiDialogModule } from '@pepperi-addons/ngx-lib/dialog';\r\n\r\nimport { PepperiTextareaComponent } from './textarea.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        ReactiveFormsModule,\r\n        FormsModule,\r\n        // Material modules,\r\n        MatCommonModule,\r\n        MatButtonModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        MatIconModule,\r\n        // Pepperi modules\r\n        PepperiModule,\r\n        PepperiIconModule,\r\n        PepperiFieldTitleModule,\r\n        PepperiTextboxIconModule,\r\n        PepperiDialogModule\r\n    ],\r\n    exports: [ PepperiTextareaComponent ],\r\n    declarations: [ PepperiTextareaComponent ],\r\n})\r\nexport class PepperiTextareaModule {\r\n    constructor(private pepperiIconRegistry: PepperiIconRegistry) {\r\n        this.pepperiIconRegistry.registerIcons([\r\n            pepperiIconSystemEdit\r\n        ]);\r\n    }\r\n}\r\n"]}