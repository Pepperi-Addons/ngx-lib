{"version":3,"sources":["../../../projects/ngx-lib/rich-html-textarea/rich-html-textarea.component.html","../../../projects/ngx-lib/rich-html-textarea/rich-html-textarea.component.ts","../../../projects/ngx-lib/rich-html-textarea/rich-html-textarea.module.ts"],"names":["i0.ɵɵelement","i0.ɵɵproperty","ctx_r11","required","disabled","maxFieldCharacters","xAlignment","showTitle","i0.ɵɵelementStart","i0.ɵɵtemplate","i0.ɵɵlistener","i0.ɵɵelementEnd","i0.ɵɵadvance","i0.ɵɵpropertyInterpolate","ctx_r1","key","i0.ɵɵclassMapInterpolate1","i0.ɵɵstyleProp","i0","ɵɵpipeBind1","value","ɵɵsanitizeHtml","label","controlType","ɵɵpureFunction1","_c4","layoutType","LAYOUT_TYPE","PepperiCard","rowSpan","length","ɵɵpipeBind2","_c5","i0.ɵɵelementContainer","i0.ɵɵelementContainerStart","i0.ɵɵelementContainerEnd","ɵɵpureFunction0","_c6","i0.ɵɵtext","i0.ɵɵtextInterpolate1","i0.ɵɵclassMap","_c9","ctx_r3","_c10","ctx_r27","_r26","_r28","_r20","_r22","ctx_r7","ctx_r9","PepperiRichHtmlTextareaComponent","sanitizer","dialogService","customizationService","renderer","element","this","readonly","form","isActive","PepperiForm","valueChanged","EventEmitter","quillContent","fieldHeight","standAlone","prototype","ngOnInit","getDefaultFromGroup","addClass","nativeElement","CustomizationService","STAND_ALONE_FIELD_CLASS_NAME","calculateFieldHeight","ngOnDestroy","unsubscribe","changeValue","lastFocusedField","updateFormFieldValue","emit","apiName","cardTemplateClicked","event","openDialog","_this","bypassSecurityTrustHtml","config","getDialogConfig","minWidth","maxWidth","maxHeight","richTextEditorDialogTemplate","afterClosed","subscribe","ɵɵdirectiveInject","i1","DomSanitizer","i2$1","DialogService","i3","Renderer2","ElementRef","selectors","viewQuery","rf","ctx","TemplateRef","pepperiIconRegistry","registerIcons","pepperiIconSystemEdit","pepperiIconSystemClose","PepperiRichHtmlTextareaModule","ɵɵinject","i2","PepperiIconRegistry","imports","CommonModule","BrowserModule","ReactiveFormsModule","FormsModule","MatCommonModule","MatButtonModule","MatFormFieldModule","MatInputModule","MatMenuModule","MatIconModule","MatDialogModule","QuillModule","forRoot","PepperiModule","PepperiIconModule","PepperiFieldTitleModule","PepperiTextboxIconModule","PepperiDialogModule","declarations","i15","exports"],"mappings":"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","sourcesContent":["<ng-container [formGroup]=\"form\">\r\n    <!-- New code -->\r\n    <ng-template #pepperiTemplate let-isFormView=\"isFormView\">\r\n        <div class=\"pepperi-textarea-container\" [ngClass]=\"{ 'right-alignment': xAlignment == '2', 'one-row': !isFormView && rowSpan === 1, 'stand-alone': standAlone,\r\n            'pepperi-textarea-card-container': layoutType === LAYOUT_TYPE.PepperiCard  }\">\r\n            <pep-field-title *ngIf=\"isFormView\" [label]=\"label\" [required]=\"required\" [disabled]=\"disabled\"\r\n                [maxFieldCharacters]=\"maxFieldCharacters\" [xAlignment]=\"xAlignment\" [showTitle]=\"showTitle\">\r\n            </pep-field-title>\r\n            <mat-form-field appearance=\"outline\" dir=\"{{ xAlignment == '2' ? 'rtl' : 'ltr' }}\"\r\n                [ngClass]=\"{ 'pepperi-table-textarea': layoutType === LAYOUT_TYPE.PepperiTable }\">\r\n                <textarea [hidden]=\"true\" matInput [formControlName]=\"key\"></textarea>\r\n                <div class=\"body-sm rich-text-cont {{readonly ? 'disable-scroll' : ''}} ql-editor \"\r\n                    [ngStyle]=\"{ 'text-align': xAlignment == '2' ? 'right' : 'left' }\" [innerHtml]=\"value | safeHtml\"\r\n                    [style.height]=\"fieldHeight\">\r\n                </div>\r\n                <!-- <pep-textbox-icon *ngIf=\"xAlignment == '2'\" matPrefix [value]=\"value\" [label]=\"label\"\r\n                    [type]=\"controlType\" [disabled]=\"disabled\"\r\n                    [ngClass]=\"{ 'card-one-row-icon': layoutType === LAYOUT_TYPE.PepperiCard && rowSpan === 1 }\"\r\n                    (iconClicked)=\"openDialog()\">\r\n                </pep-textbox-icon> -->\r\n                <pep-textbox-icon matSuffix [value]=\"value\" [label]=\"label\" [type]=\"controlType\" [disabled]=\"disabled\"\r\n                    [ngClass]=\"{ 'card-one-row-icon': layoutType === LAYOUT_TYPE.PepperiCard && rowSpan === 1 }\"\r\n                    (iconClicked)=\"openDialog()\">\r\n                </pep-textbox-icon>\r\n                <mat-error>\r\n                    <span class=\"body-xs\"\r\n                        [title]=\"required && value.length == 0 ? ('MESSAGES.ERROR_IS_REQUIRED' | translate: { field: label }) : ('MESSAGES.ERROR_IS_NOT_VALID' | translate: { field: label })\"\r\n                        [innerText]=\"required && value.length == 0 ? ('MESSAGES.ERROR_IS_REQUIRED' | translate: { field: label }) : ('MESSAGES.ERROR_IS_NOT_VALID' | translate: { field: label })\"></span>\r\n                </mat-error>\r\n            </mat-form-field>\r\n        </div>\r\n    </ng-template>\r\n\r\n    <ng-container *ngIf=\"layoutType === LAYOUT_TYPE.PepperiForm\">\r\n        <ng-container *ngTemplateOutlet=\"pepperiTemplate; context: { isFormView: true }\"></ng-container>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"layoutType === LAYOUT_TYPE.PepperiCard\">\r\n        <div class=\"pepperi-textarea-card-container card-flex-container\"\r\n            [ngClass]=\"{'one-row': rowSpan === 1, 'pepperi-button weak': isActive && !disabled }\"\r\n            [ngStyle]=\"{ '-webkit-line-clamp': rowSpan }\" [class]=\"'text-align-' + xAlignment\"\r\n            (click)=\"!disabled ? cardTemplateClicked($event) : ''\" [style.height]=\"fieldHeight\">\r\n            <span *ngIf=\"showTitle && label != ''\" class=\"body-xs title no-shrink\"\r\n                title=\"{{ label }}\">{{ label }}:&nbsp;</span>\r\n            <span [id]=\"key\" class=\"body-sm value wrap\" [innerHtml]=\"value | safeHtml\"></span>\r\n            <button *ngIf=\"isActive && !disabled\" class=\"pepperi-button weak card-edit-button self-start\"\r\n                [ngClass]=\"{'self-end' : value && value !== ''}\" mat-button>\r\n                <mat-icon>\r\n                    <pep-icon name=\"system_edit\">\r\n                    </pep-icon>\r\n                </mat-icon>\r\n            </button>\r\n        </div>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"layoutType === LAYOUT_TYPE.PepperiTable\">\r\n        <ng-container *ngIf=\"isActive && !disabled; then selectedBlock; else notSelectedBlock\"></ng-container>\r\n        <ng-template #selectedBlock>\r\n            <ng-container *ngTemplateOutlet=\"pepperiTemplate; context: { isFormView: false }\"></ng-container>\r\n        </ng-template>\r\n        <ng-template #notSelectedBlock>\r\n            <ng-container *ngIf=\"value?.length > 0; then notEmptyBlock; else emptyBlock\"></ng-container>\r\n            <ng-template #notEmptyBlock>\r\n                <div class=\"pepperi-textarea-card-container card-flex-container one-row\">\r\n                    <span [id]=\"key\" class=\"wrap\" [innerHtml]=\"value | safeHtml\"></span>\r\n                </div>\r\n            </ng-template>\r\n            <ng-template #emptyBlock>\r\n                <span>&nbsp;</span>\r\n            </ng-template>\r\n        </ng-template>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"layoutType === LAYOUT_TYPE.Editmodal\">\r\n        <ng-container *ngTemplateOutlet=\"pepperiTemplate; context: { isFormView: true }\"></ng-container>\r\n    </ng-container>\r\n</ng-container>\r\n\r\n\r\n<ng-template #richTextEditorDialogTemplate>\r\n    <div class=\"rich-text-editor-container\">\r\n        <button mat-button [mat-dialog-close]=\"null\" class=\"pepperi-button icon-button md weak pull-right flip\">\r\n            <mat-icon>\r\n                <pep-icon name=\"system_close\">\r\n                </pep-icon>\r\n            </mat-icon>\r\n        </button>\r\n        <ng-container *ngTemplateOutlet=\"quilTemplate\"></ng-container>\r\n        <div mat-dialog-actions class=\"pepperi-border-top\">\r\n            <div class=\"spacing-element-negative\">\r\n                <button mat-button [mat-dialog-close]=\"quillContent || ''\" [disabled]=\"disabled\"\r\n                    class=\"spacing-element pepperi-button md strong pull-right flip\">\r\n                    {{'ACTIONS.SAVE' | translate}}\r\n                </button>\r\n                <button mat-button [mat-dialog-close]=\"null\"\r\n                    class=\"spacing-element pepperi-button md weak pull-right flip\">\r\n                    {{'ACTIONS.CANCEL' | translate}}\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #quilTemplate>\r\n    <quill-editor id=\"quill-editor\" placeholder=\"{{'RICH_TEXTAREA.HINT' | translate}}\" [(ngModel)]=\"quillContent\"\r\n        [sanitize]=\"true\" [readOnly]=\"disabled\" [maxLength]=\"maxFieldCharacters\" [required]=\"required\" theme=\"\">\r\n        <div *ngIf=\"!disabled\" quill-editor-toolbar class=\"spacing-element-negative pepperi-border-bottom\">\r\n            <!-- <span class=\"ql-formats\">\r\n                <select class=\"spacing-element pepperi-button icon-button md weak ql-font\">\r\n                    <option selected></option>\r\n                    <option value=\"serif\"></option>\r\n                    <option value=\"monospace\"></option>\r\n                </select>\r\n                <select class=\"spacing-element pepperi-button icon-button md weak ql-size\">\r\n                    <option value=\"small\"></option>\r\n                    <option selected></option>\r\n                    <option value=\"large\"></option>\r\n                    <option value=\"huge\"></option>\r\n                </select>\r\n            </span> -->\r\n            <!-- <span class=\"ql-formats\">\r\n                <select class=\"spacing-element pepperi-button icon-button md weak ql-header\">\r\n                    <option value=\"1\"></option>\r\n                    <option value=\"2\"></option>\r\n                    <option value=\"3\"></option>\r\n                    <option value=\"4\"></option>\r\n                    <option value=\"5\"></option>\r\n                    <option value=\"6\"></option>\r\n                    <option value=\"false\" selected></option>\r\n                </select>\r\n            </span> -->\r\n            <span class=\"ql-formats\">\r\n                <button mat-button class=\"spacing-element pepperi-button icon-button md weak ql-bold\"></button>\r\n                <button mat-button class=\"spacing-element pepperi-button icon-button md weak ql-italic\"></button>\r\n                <button mat-button class=\"spacing-element pepperi-button icon-button md weak ql-underline\"></button>\r\n                <!-- <button mat-button class=\"spacing-element pepperi-button icon-button md weak ql-strike\"></button> -->\r\n            </span>\r\n            <span class=\"ql-formats\">\r\n                <button mat-button class=\"spacing-element pepperi-button icon-button md weak ql-link\"></button>\r\n                <button mat-button class=\"spacing-element pepperi-button icon-button md weak ql-image\"></button>\r\n            </span>\r\n            <span class=\"ql-formats\">\r\n                <button mat-button class=\"spacing-element pepperi-button icon-button md weak ql-list\"\r\n                    value=\"ordered\"></button>\r\n                <button mat-button class=\"spacing-element pepperi-button icon-button md weak ql-list\"\r\n                    value=\"bullet\"></button>\r\n            </span>\r\n            <span class=\"ql-formats\">\r\n                <select class=\"spacing-element pepperi-button icon-button md weak ql-color\"></select>\r\n                <!-- <select class=\"spacing-element pepperi-button icon-button md weak ql-background\"></select> -->\r\n            </span>\r\n            <span class=\"ql-formats\">\r\n                <select class=\"spacing-element pepperi-button icon-button md weak ql-align\">\r\n                    <option selected></option>\r\n                    <option value=\"center\"></option>\r\n                    <option value=\"right\"></option>\r\n                    <option value=\"justify\"></option>\r\n                </select>\r\n            </span>\r\n        </div>\r\n    </quill-editor>\r\n</ng-template>","import {\r\n    Component, OnInit, Input, Output, EventEmitter,\r\n    ChangeDetectionStrategy, OnDestroy, ElementRef, Renderer2, TemplateRef, ViewChild\r\n} from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { LAYOUT_TYPE, CustomizationService } from '@pepperi-addons/ngx-lib';\r\nimport { DialogService, DialogData, DialogDataType } from '@pepperi-addons/ngx-lib/dialog';\r\nimport { SafeHtml, DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Component({\r\n    selector: 'pep-rich-html-textarea',\r\n    templateUrl: './rich-html-textarea.component.html',\r\n    styleUrls: ['./rich-html-textarea.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PepperiRichHtmlTextareaComponent implements OnInit, OnDestroy {\r\n    @Input() key = '';\r\n    @Input() value = '';\r\n    @Input() label = '';\r\n    @Input() required = false;\r\n    @Input() disabled = false;\r\n    @Input() readonly = false;\r\n    @Input() maxFieldCharacters = 0;\r\n    @Input() xAlignment = '0';\r\n    @Input() rowSpan = 1;\r\n\r\n    controlType = 'richhtmltextarea';\r\n\r\n    @Input() form: FormGroup = null;\r\n    @Input() isActive = false;\r\n    @Input() showTitle = true;\r\n    @Input() layoutType: LAYOUT_TYPE = LAYOUT_TYPE.PepperiForm;\r\n\r\n    @Output() valueChanged: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    @ViewChild('richTextEditorDialogTemplate', { read: TemplateRef }) richTextEditorDialogTemplate: TemplateRef<any>;\r\n    quillContent: SafeHtml = '';\r\n\r\n    LAYOUT_TYPE = LAYOUT_TYPE;\r\n    fieldHeight = '';\r\n    standAlone = false;\r\n\r\n    constructor(\r\n        private sanitizer: DomSanitizer,\r\n        private dialogService: DialogService,\r\n        private customizationService: CustomizationService,\r\n        private renderer: Renderer2,\r\n        private element: ElementRef\r\n    ) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        if (this.form === null) {\r\n            this.standAlone = true;\r\n            this.form = this.customizationService.getDefaultFromGroup(\r\n                this.key, this.value, this.required, this.readonly, this.disabled, this.maxFieldCharacters);\r\n\r\n            this.renderer.addClass(this.element.nativeElement, CustomizationService.STAND_ALONE_FIELD_CLASS_NAME);\r\n        }\r\n\r\n        this.fieldHeight = this.customizationService.calculateFieldHeight(this.layoutType, this.rowSpan, this.standAlone);\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        if (this.valueChanged) {\r\n            this.valueChanged.unsubscribe();\r\n        }\r\n    }\r\n\r\n    changeValue(value: any, lastFocusedField: any = null): void {\r\n        if (value !== this.value) {\r\n            this.value = value;\r\n            this.customizationService.updateFormFieldValue(this.form, this.key, value);\r\n            this.valueChanged.emit({ apiName: this.key, value, lastFocusedField });\r\n        }\r\n    }\r\n\r\n    cardTemplateClicked(event: any): void {\r\n        this.openDialog();\r\n    }\r\n\r\n    openDialog(): void {\r\n        this.quillContent = this.sanitizer.bypassSecurityTrustHtml(this.value);\r\n\r\n        const config = this.dialogService.getDialogConfig({\r\n            minWidth: '50vw',\r\n            maxWidth: '90vw',\r\n            maxHeight: '90vh',\r\n        });\r\n\r\n        const dialogRef = this.dialogService.openDialog(\r\n            this.richTextEditorDialogTemplate,\r\n            {},\r\n            config);\r\n\r\n        dialogRef.afterClosed().subscribe(value => {\r\n            if (value !== undefined && value !== null) {\r\n                this.changeValue(value);\r\n            }\r\n        });\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\n\r\nimport { MatCommonModule } from '@angular/material/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\n\r\nimport { PepperiModule } from '@pepperi-addons/ngx-lib';\r\nimport { PepperiIconModule, PepperiIconRegistry, pepperiIconSystemEdit, pepperiIconSystemClose } from '@pepperi-addons/ngx-lib/icon';\r\nimport { PepperiTextboxIconModule } from '@pepperi-addons/ngx-lib/textbox-icon';\r\nimport { PepperiFieldTitleModule } from '@pepperi-addons/ngx-lib/field-title';\r\nimport { PepperiDialogModule } from '@pepperi-addons/ngx-lib/dialog';\r\n\r\nimport { QuillModule } from 'ngx-quill';\r\n\r\nimport { PepperiRichHtmlTextareaComponent } from './rich-html-textarea.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        BrowserModule,\r\n        ReactiveFormsModule,\r\n        FormsModule,\r\n        // Material modules,\r\n        MatCommonModule,\r\n        MatButtonModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        MatMenuModule,\r\n        MatIconModule,\r\n        MatDialogModule,\r\n        // External modules\r\n        QuillModule.forRoot(),\r\n        // Pepperi modules\r\n        PepperiModule,\r\n        PepperiIconModule,\r\n        PepperiFieldTitleModule,\r\n        PepperiTextboxIconModule,\r\n        PepperiDialogModule\r\n    ],\r\n    exports: [ PepperiRichHtmlTextareaComponent ],\r\n    declarations: [ PepperiRichHtmlTextareaComponent ],\r\n})\r\nexport class PepperiRichHtmlTextareaModule {\r\n    constructor(private pepperiIconRegistry: PepperiIconRegistry) {\r\n        this.pepperiIconRegistry.registerIcons([\r\n            pepperiIconSystemEdit,\r\n            pepperiIconSystemClose\r\n        ]);\r\n    }\r\n}\r\n"]}