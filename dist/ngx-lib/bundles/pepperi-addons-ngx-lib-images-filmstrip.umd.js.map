{"version":3,"file":"pepperi-addons-ngx-lib-images-filmstrip.umd.js","sources":["../../../projects/ngx-lib/images-filmstrip/images-filmstrip.component.html","../../../projects/ngx-lib/images-filmstrip/images-filmstrip.component.ts","../../../projects/ngx-lib/images-filmstrip/images-filmstrip.module.ts","../../../projects/ngx-lib/images-filmstrip/public-api.ts","../../../projects/ngx-lib/images-filmstrip/pepperi-addons-ngx-lib-images-filmstrip.ts"],"sourcesContent":["<ng-container *ngIf=\"inDialog; then galleryDialogTemplate; else regularTemplate\"></ng-container>\r\n<ng-template #regularTemplate>\r\n    <ng-container [formGroup]=\"form\">\r\n        <div class=\"images-filmstrip-container\">\r\n            <pep-field-title [label]=\"label\" [xAlignment]=\"xAlignment\" [showTitle]=\"showTitle\">\r\n            </pep-field-title>\r\n            <div #galleryCont class=\"img-wrapper\" [ngClass]=\"isVertical ? 'vertical-gallery' : 'horizontal-gallery'\"\r\n                [style.height]=\"fieldHeight\">\r\n                <gallery id=\"{{key}}-{{objectId}}-gallery\" (itemClick)=\"enlargeImage($event);\"\r\n                    (indexChange)=\"indexChange($event)\" (error)=\"onError($event)\">\r\n                </gallery>\r\n            </div>\r\n        </div>\r\n    </ng-container>\r\n</ng-template>\r\n\r\n<ng-template #galleryDialogTemplate>\r\n    <h2 mat-dialog-title class=\"pepperi-border-bottom\">\r\n        <span class=\"pull-left flip\">{{ label }}</span>\r\n        <button mat-button [mat-dialog-close]=\"null\" class=\"pepperi-button icon-button md weak pull-right flip\">\r\n            <mat-icon>\r\n                <pep-icon name=\"system_close\">\r\n                </pep-icon>\r\n            </mat-icon>\r\n        </button>\r\n    </h2>\r\n    <div mat-dialog-content #galleryDialogCont>\r\n        <gallery id=\"{{key}}-{{objectId}}-dlgGallery\" [itemTemplate]=\"itemTemplate\" (indexChange)=\"indexChange($event)\"\r\n            [style.height.px]=\"'auto'\" (error)=\"onError($event)\">\r\n        </gallery>\r\n    </div>\r\n</ng-template>\r\n\r\n<!-- Add custom template to image items -->\r\n<ng-template #itemTemplate let-index=\"index\" let-type=\"type\" let-data=\"data\" let-currIndex=\"currIndex\">\r\n    <!-- <span *ngIf=\"type === 'image' && index === currIndex\" [@slideAnimation] class=\"item-text\">\r\n        {{data?.title}}\r\n    </span> -->\r\n    <ngx-imageviewer id=\"ngxViewerImage\" #ngxViewerImage [src]=\"data.src\"></ngx-imageviewer>\r\n    <!-- <ngx-image-viewer #ngxViewerImage [config]=\"{ btnShow:{zoomIn: false, zoomOut: false }}\" [src]=\"[data.src]\"\r\n        (wheel)=\"scrollFunction($event)\">\r\n    </ngx-image-viewer> -->\r\n</ng-template>","import {\r\n    Component, ViewChild, OnInit, OnDestroy, AfterViewInit, ElementRef, Input,\r\n    TemplateRef, Renderer2, ChangeDetectorRef, Inject, Optional, ViewContainerRef\r\n} from '@angular/core';\r\nimport { trigger, state, style, transition, animate } from '@angular/animations';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Gallery, GalleryConfig, LoadingStrategy, SlidingDirection, ThumbnailsPosition, GalleryItem, ImageItem, GalleryRef } from '@ngx-gallery/core';\r\nimport { CustomizationService, LAYOUT_TYPE, LayoutService, FileService } from '@pepperi-addons/ngx-lib';\r\nimport { DialogService } from '@pepperi-addons/ngx-lib/dialog';\r\nimport { pepperiIconArrowRightAlt } from '@pepperi-addons/ngx-lib/icon';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\nimport 'hammerjs';\r\n\r\nexport interface ImagesFilmstripDialogData {\r\n    currIndex: number;\r\n    key: string;\r\n    value: string;\r\n    label: string;\r\n    objectId: string;\r\n    showThumbnails: boolean;\r\n}\r\n\r\n// export const slideInAnimation = trigger('slideAnimation', [\r\n//     state('in', style({ transform: 'translateY(0)', opacity: 1 })),\r\n//     transition(':enter', [\r\n//         style({ transform: 'translateY(-100%)', opacity: 0 }),\r\n//         animate(400)\r\n//     ]),\r\n//     transition(':leave', [\r\n//         animate(400, style({ transform: 'translateY(-100%)', opacity: 0 }))\r\n//     ])\r\n// ]);\r\n\r\nimport { IMAGEVIEWER_CONFIG, ImageViewerConfig, createButtonConfig } from '@hallysonh/ngx-imageviewer';\r\n\r\n\r\nexport function createViewerConfig(translate: TranslateService): ImageViewerConfig {\r\n    return {\r\n        // width: 800, // component default width\r\n        // height: 600, // component default height\r\n        bgStyle: '#FFF', // component background style\r\n        // scaleStep: 0.1, // zoom scale step (using the zoom in/out buttons)\r\n        // rotateStepper: false, // touch rotate should rotate only 90 to 90 degrees\r\n        loadingMessage: translate.instant('MESSAGES.INFO_LOADING_FILE'), // 'Loading...',\r\n        // buttonStyle: {\r\n        //     iconFontFamily: 'Material Icons', // font used to render the button icons\r\n        //     alpha: 0.5, // buttons' transparence value\r\n        //     hoverAlpha: 0.7, // buttons' transparence value when mouse is over\r\n        //     bgStyle: '#000000', //  buttons' background style\r\n        //     iconStyle: '#ffffff', // buttons' icon colors\r\n        //     borderStyle: '#000000', // buttons' border style\r\n        //     borderWidth: 0, // buttons' border width (0 == disabled)\r\n        // },\r\n        // tooltips: {\r\n        //     enabled: true, // enable or disable tooltips for buttons\r\n        //     bgStyle: '#000000', // tooltip background style\r\n        //     bgAlpha: 0.5, // tooltip background transparence\r\n        //     textStyle: '#ffffff', // tooltip's text style\r\n        //     textAlpha: 0.9, // tooltip's text transparence\r\n        //     padding: 15, // tooltip padding\r\n        //     radius: 20, // tooltip border radius\r\n        // },\r\n        // shorter button configuration style\r\n        nextPageButton: createButtonConfig('navigate_next', 'Next page', 0, false),\r\n        beforePageButton: createButtonConfig('navigate_before', 'Previous page', 1, false),\r\n        zoomOutButton: createButtonConfig('zoom_out', 'Zoom out', 0, false),\r\n        zoomInButton: createButtonConfig('zoom_in', 'Zoom in', 1, false),\r\n        rotateLeftButton: createButtonConfig('rotate_left', 'Rotate left', 2, false),\r\n        rotateRightButton: createButtonConfig('rotate_right', 'Rotate right', 3, false),\r\n        resetButton: createButtonConfig('autorenew', 'Reset', 4, false),\r\n    };\r\n}\r\n\r\n// This is the default\r\n// export const IMAGEVIEWER_CONFIG_DEFAULT: ImageViewerConfig = {\r\n//     width: 800, // component default width\r\n//     height: 600, // component default height\r\n//     bgStyle: '#ECEFF1', // component background style\r\n//     scaleStep: 0.1, // zoom scale step (using the zoom in/out buttons)\r\n//     rotateStepper: false, // touch rotate should rotate only 90 to 90 degrees\r\n//     loadingMessage: 'Loading...',\r\n//     buttonStyle: {\r\n//         iconFontFamily: 'Material Icons', // font used to render the button icons\r\n//         alpha: 0.5, // buttons' transparence value\r\n//         hoverAlpha: 0.7, // buttons' transparence value when mouse is over\r\n//         bgStyle: '#000000', //  buttons' background style\r\n//         iconStyle: '#ffffff', // buttons' icon colors\r\n//         borderStyle: '#000000', // buttons' border style\r\n//         borderWidth: 0, // buttons' border width (0 == disabled)\r\n//     },\r\n//     tooltips: {\r\n//         enabled: true, // enable or disable tooltips for buttons\r\n//         bgStyle: '#000000', // tooltip background style\r\n//         bgAlpha: 0.5, // tooltip background transparence\r\n//         textStyle: '#ffffff', // tooltip's text style\r\n//         textAlpha: 0.9, // tooltip's text transparence\r\n//         padding: 15, // tooltip padding\r\n//         radius: 20, // tooltip border radius\r\n//     },\r\n//     zoomOutButton: {\r\n//         // zoomOut button config\r\n//         icon: 'zoom_out', // icon text\r\n//         tooltip: 'Zoom out', // button tooltip\r\n//         sortId: 0, // number used to determine the order of the buttons\r\n//         show: true, // used to show/hide the button\r\n//     },\r\n\r\n//     // shorter button configuration style\r\n//     nextPageButton: createButtonConfig('navigate_next', 'Next page', 0),\r\n//     beforePageButton: createButtonConfig('navigate_before', 'Previous page', 1),\r\n//     zoomInButton: createButtonConfig('zoom_in', 'Zoom in', 1),\r\n//     rotateLeftButton: createButtonConfig('rotate_left', 'Rotate left', 2),\r\n//     rotateRightButton: createButtonConfig('rotate_right', 'Rotate right', 3),\r\n//     resetButton: createButtonConfig('autorenew', 'Reset', 4),\r\n// };\r\n\r\n@Component({\r\n    selector: 'pep-images-filmstrip',\r\n    templateUrl: './images-filmstrip.component.html',\r\n    styleUrls: ['./images-filmstrip.component.scss'],\r\n    // animations: [slideInAnimation],\r\n    providers: [\r\n        {\r\n            provide: IMAGEVIEWER_CONFIG,\r\n            // useValue: IMAGEVIEWER_CONFIG_DEFAULT,\r\n            useFactory: createViewerConfig,\r\n            deps: [TranslateService]\r\n        }\r\n    ]\r\n})\r\nexport class PepperiImagesFilmstripComponent implements OnInit, AfterViewInit, OnDestroy {\r\n    // @ViewChild('ngxViewerImage') ngxViewerImage: any; // TODO: Check if we need to use this??\r\n    @Input() value = '';\r\n    @Input() key = '';\r\n    @Input() label = '';\r\n    @Input() xAlignment = '0';\r\n    @Input() rowSpan = 1;\r\n\r\n    controlType = 'images';\r\n\r\n    @Input() form: FormGroup = null;\r\n    @Input() objectId = '';\r\n    @Input() showTitle = false;\r\n    @Input() layoutType: LAYOUT_TYPE.PepperiForm;\r\n    @Input() currIndex = 0;\r\n    @Input() showThumbnails = false;\r\n\r\n    @ViewChild('galleryCont') galleryCont: ElementRef;\r\n    @ViewChild('galleryDialogTemplate', { read: TemplateRef }) galleryDialogTemplate: TemplateRef<any>;\r\n    @ViewChild('galleryDialogCont') galleryDialogCont: ElementRef;\r\n\r\n    config: GalleryConfig;\r\n    items: GalleryItem[] = null;\r\n    inDialog = false;\r\n\r\n    required = false;\r\n    readonly = false;\r\n    disabled = false;\r\n    fieldHeight = '';\r\n    standAlone = false;\r\n\r\n    galleryWidth = 0;\r\n    galleryHeight;\r\n    isVertical = false;\r\n    galleryRef: GalleryRef;\r\n    dialogGalleryRef: GalleryRef;\r\n\r\n    constructor(\r\n        private customizationService: CustomizationService,\r\n        private dialogService: DialogService,\r\n        private layoutService: LayoutService,\r\n        private fileService: FileService,\r\n        private gallery: Gallery,\r\n        private renderer: Renderer2,\r\n        private element: ElementRef,\r\n        private cd: ChangeDetectorRef,\r\n        @Optional() private dialogRef: MatDialogRef<PepperiImagesFilmstripComponent>,\r\n        @Optional() @Inject(MAT_DIALOG_DATA) private data: ImagesFilmstripDialogData\r\n    ) {\r\n        // If data exist copy all data properties into this.\r\n        if (dialogRef && data) {\r\n            this.inDialog = true;\r\n\r\n            Object.keys(data).forEach(key => {\r\n                if (key in this) {\r\n                    this[key] = data[key];\r\n                }\r\n            });\r\n        }\r\n\r\n        this.config = {\r\n            // nav: false, // Show navigation buttons\r\n            navIcon: pepperiIconArrowRightAlt.data,\r\n            // loop: true,\r\n            // zoomOut: 0,\r\n            // dots: false,\r\n            // dotsPosition: 'bottom',\r\n            // counterPosition: 'top',\r\n            // thumb: true,\r\n            counter: false, // Show counter\r\n            gestures: true, // Use touch events (requires hammer.js)\r\n            // autoPlay: false,\r\n            // thumbWidth: 120,\r\n            // thumbHeight: 90,\r\n            // imageSize: 'contain',\r\n            // panSensitivity: 25,\r\n            // disableThumb: false,\r\n            // playerInterval: 3000,\r\n            // thumbMode: ThumbnailsMode.Free,\r\n            // thumbPosition: ThumbnailsPosition.Bottom,\r\n            loadingStrategy: LoadingStrategy.Default,\r\n            // slidingDirection: SlidingDirection.Horizontal,\r\n        };\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        if (!this.inDialog) {\r\n            if (this.form === null) {\r\n                this.standAlone = true;\r\n                this.form = this.customizationService.getDefaultFromGroup(this.key, this.value, this.required,\r\n                    this.readonly, this.disabled);\r\n\r\n                this.renderer.addClass(this.element.nativeElement, CustomizationService.STAND_ALONE_FIELD_CLASS_NAME);\r\n            }\r\n\r\n            this.fieldHeight = this.customizationService.calculateFieldHeight(this.layoutType, this.rowSpan, this.standAlone);\r\n        }\r\n\r\n        if (this.items === null) {\r\n            const imgArr = this.value ? this.value.split(';') : [];\r\n            // add No image image when there is no images\r\n            if (imgArr.length === 0) {\r\n                const noImageSrc = this.fileService.getNoImagePath();\r\n                imgArr.push(noImageSrc);\r\n            }\r\n\r\n            this.items = imgArr.map(img => new ImageItem({ src: img, thumb: img }));\r\n        }\r\n\r\n        this.config.dots = this.config.nav = this.items.length > 1;\r\n        this.config.thumb = (this.key === 'ItemFilmstripImages' || this.showThumbnails) && this.items.length > 1 ? true : false;\r\n        this.currIndex =\r\n            this.key === 'ItemFilmstripImages' &&\r\n                this.currIndex === 0 &&\r\n                this.items.length > 1 ?\r\n                Math.floor(this.items.length / 2) - 1 : this.currIndex;\r\n\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        if (this.inDialog) {\r\n            this.afterDialogOpened();\r\n        } else {\r\n            this.galleryRef = this.gallery.ref(this.key + '-' + this.objectId + '-gallery');\r\n            this.initGalleryStyle(this.galleryCont, this.galleryRef);\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        if (this.galleryRef) { this.galleryRef.destroy(); }\r\n        if (this.dialogGalleryRef) { this.dialogGalleryRef.destroy(); }\r\n        // if (this.myPinch) { this.myPinch.destroy(); }\r\n    }\r\n\r\n    initGalleryStyle(galleryContainer, galleryRef): void {\r\n        // Set thumbnails position and sliding direction\r\n        this.setThumbnailDimension(galleryContainer);\r\n\r\n        galleryRef.setConfig(this.config);\r\n        galleryRef.load(this.items);\r\n\r\n        const currentIndex = this.currIndex;\r\n        if (currentIndex > 0) {\r\n            galleryRef.set(currentIndex);\r\n        }\r\n    }\r\n\r\n    onError(e): void {\r\n        const noImageSrc = this.fileService.getNoImagePath();\r\n        const noimg = new ImageItem({ src: noImageSrc, thumb: noImageSrc });\r\n        this.items.splice(e.itemIndex, 1, noimg);\r\n    }\r\n\r\n    enlargeImage(event: any): void {\r\n        const dialogRef = this.dialogService.openDialog(this.galleryDialogTemplate);\r\n\r\n        dialogRef.afterOpened().subscribe(() => {\r\n            this.afterDialogOpened();\r\n        });\r\n\r\n        // Update currentIndex in galleryRef\r\n        dialogRef.afterClosed().subscribe(value => {\r\n            this.galleryRef.set(this.currIndex);\r\n        });\r\n    }\r\n\r\n    afterDialogOpened(): void {\r\n        this.dialogGalleryRef = this.gallery.ref(this.key + '-' + this.objectId + '-dlgGallery');\r\n        this.initGalleryStyle(this.galleryDialogCont, this.dialogGalleryRef);\r\n    }\r\n\r\n    setThumbnailDimension(galleryContainer): void {\r\n        this.galleryWidth = galleryContainer.nativeElement.clientWidth;\r\n        this.galleryHeight = galleryContainer.nativeElement.clientHeight;\r\n\r\n        this.isVertical = this.galleryWidth < this.galleryHeight;\r\n\r\n        if (this.isVertical) {\r\n            let width = (this.galleryWidth - ((this.items.length - 1) * 16)) / this.items.length;\r\n            width = Math.min(Math.max(width, 24), 96);\r\n\r\n            this.config.thumbHeight = width;\r\n            this.config.thumbWidth = (width + 16);\r\n        } else {\r\n            let height = (this.galleryHeight - ((this.items.length - 1) * 16)) / this.items.length;\r\n            height = Math.min(Math.max(height, 24), 96);\r\n\r\n            this.config.thumbHeight = (height + 16);\r\n            this.config.thumbWidth = height;\r\n        }\r\n\r\n        this.config.thumbPosition = this.isVertical ?\r\n            ThumbnailsPosition.Bottom : this.layoutService.isRtl() ?\r\n                ThumbnailsPosition.Right : ThumbnailsPosition.Left;\r\n        this.config.slidingDirection = this.key !== 'ItemFilmstripImages' ?\r\n            SlidingDirection.Horizontal : this.isVertical ?\r\n                SlidingDirection.Horizontal : SlidingDirection.Vertical;\r\n    }\r\n\r\n    indexChange(item: any): void {\r\n        this.currIndex = item.currIndex;\r\n        // if (this.ngxViewerImage && this.ngxViewerImage.scale) {\r\n        //     this.ngxViewerImage.scale = 1;\r\n        //     this.updateStyle();\r\n        // }\r\n    }\r\n\r\n    // scrollFunction(e: any): boolean {\r\n    //     e.deltaY > 0 ? this.zoomOut() : this.zoomIn();\r\n    //     return false;\r\n    // }\r\n\r\n    // zoomIn(): void {\r\n    //     if (this.ngxViewerImage.scale < 2) {\r\n    //         this.ngxViewerImage.scale *= (1 + this.ngxViewerImage.config.zoomFactor);\r\n    //     } else {\r\n    //         this.ngxViewerImage.scale = 2;\r\n    //     }\r\n    //     this.updateStyle();\r\n    // }\r\n\r\n    // zoomOut(): void {\r\n    //     if (this.ngxViewerImage.scale > this.ngxViewerImage.config.zoomFactor) {\r\n    //         this.ngxViewerImage.scale /= (1 + this.ngxViewerImage.config.zoomFactor);\r\n    //     }\r\n    //     this.updateStyle();\r\n    // }\r\n\r\n    // private updateStyle(): void {\r\n    //     this.ngxViewerImage.style.transform = `translate(${this.ngxViewerImage.translateX}px,\r\n    //         ${this.ngxViewerImage.translateY}px) rotate(${this.ngxViewerImage.rotation}deg) scale(${this.ngxViewerImage.scale})`;\r\n\r\n    //     this.cd.detectChanges();\r\n    // }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\n\r\nimport { MatCommonModule } from '@angular/material/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\nimport { PepperiModule } from '@pepperi-addons/ngx-lib';\r\nimport { PepperiFieldTitleModule } from '@pepperi-addons/ngx-lib/field-title';\r\nimport {\r\n    PepperiIconModule,\r\n    PepperiIconRegistry,\r\n    pepperiIconSystemEdit,\r\n    pepperiIconSystemClose,\r\n    pepperiIconArrowRightAlt,\r\n    pepperiIconArrowLeftAlt\r\n} from '@pepperi-addons/ngx-lib/icon';\r\nimport { PepperiDialogModule } from '@pepperi-addons/ngx-lib/dialog';\r\n\r\nimport { GalleryModule } from '@ngx-gallery/core';\r\nimport { ImageViewerModule } from '@hallysonh/ngx-imageviewer';\r\n// import { ImageViewerModule } from 'ngx-image-viewer';\r\n\r\nimport { PepperiImagesFilmstripComponent } from './images-filmstrip.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        BrowserAnimationsModule,\r\n        ReactiveFormsModule,\r\n        FormsModule,\r\n        // Material modules,\r\n        MatCommonModule,\r\n        MatFormFieldModule,\r\n        MatDialogModule,\r\n        MatIconModule,\r\n        // External modules\r\n        GalleryModule,\r\n        ImageViewerModule,\r\n        // ImageViewerModule.forRoot({\r\n        //     btnClass: 'default', // The CSS class(es) that will apply to the buttons\r\n        //     zoomFactor: 0.1, // The amount that the scale will be increased by\r\n        //     containerBackgroundColor: 'transparent', // The color to use for the background. This can provided in hex, or rgb(a).\r\n        //     wheelZoom: true, // If true, the mouse wheel can be used to zoom in\r\n        //     allowFullscreen: false, // If true, the fullscreen button will be shown, allowing the user to entr fullscreen mode\r\n        //     btnIcons: {\r\n        //         // The icon classes that will apply to the buttons. By default, font-awesome is used.\r\n        //         zoomIn: 'fa fa-plus',\r\n        //         zoomOut: 'fa fa-minus',\r\n        //         rotateClockwise: 'fa fa-repeat',\r\n        //         rotateCounterClockwise: 'fa fa-undo',\r\n        //         next: 'fa fa-arrow-right',\r\n        //         prev: 'fa fa-arrow-left',\r\n        //         fullscreen: 'fa fa-arrows-alt'\r\n        //     }\r\n        // }),\r\n        // Pepperi modules\r\n        PepperiModule,\r\n        PepperiIconModule,\r\n        PepperiFieldTitleModule,\r\n        PepperiDialogModule\r\n    ],\r\n    exports: [ PepperiImagesFilmstripComponent ],\r\n    declarations: [ PepperiImagesFilmstripComponent ],\r\n})\r\nexport class PepperiImagesFilmstripModule {\r\n    constructor(private pepperiIconRegistry: PepperiIconRegistry) {\r\n        this.pepperiIconRegistry.registerIcons([\r\n            pepperiIconSystemEdit,\r\n            pepperiIconSystemClose,\r\n            pepperiIconArrowRightAlt,\r\n            pepperiIconArrowLeftAlt\r\n        ]);\r\n    }\r\n}\r\n","/*\r\n * Public API Surface of ngx-lib/images-filmstrip\r\n */\r\nexport * from './images-filmstrip.module';\r\nexport * from './images-filmstrip.component';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i0.ɵɵelementContainer","i0.ɵɵelementContainerStart","i0.ɵɵelementStart","i0.ɵɵelement","i0.ɵɵlistener","i0.ɵɵelementEnd","i0.ɵɵelementContainerEnd","i0.ɵɵproperty","i0.ɵɵadvance","i0.ɵɵstyleProp","i0.ɵɵpropertyInterpolate2","i0.ɵɵtext","i0.ɵɵtextInterpolate","createButtonConfig","pepperiIconArrowRightAlt","LoadingStrategy","CustomizationService","ImageItem","ThumbnailsPosition","SlidingDirection","MAT_DIALOG_DATA","TemplateRef","IMAGEVIEWER_CONFIG","TranslateService","i0.ɵɵtemplate","Component","Optional","Inject","Input","ViewChild","pepperiIconSystemEdit","pepperiIconSystemClose","pepperiIconArrowLeftAlt","CommonModule","BrowserAnimationsModule","ReactiveFormsModule","FormsModule","MatCommonModule","MatFormFieldModule","MatDialogModule","MatIconModule","GalleryModule","ImageViewerModule","PepperiModule","PepperiIconModule","PepperiFieldTitleModule","PepperiDialogModule","NgModule"],"mappings":"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"}