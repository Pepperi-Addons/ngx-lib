@import "../src/core/style/abstracts/variables";
@import "../src/core/style/abstracts/mixins";
@import "../src/core/style/abstracts/functions";
 
.pep-side-bar-container {
    height: 100%;
    $animation-time: 0.35s;
    $animation-time-third: calc(#{$animation-time} / 3);

    .toggle-side-bar-container {
        height: inherit;
        display: grid;
        grid-auto-flow: column;
        // height: calc(100vh - #{$header-height});
        // max-width: calc(#{$side-bar-width} + #{$double-content-padding} + 1px); // 1px is for the toggle-button-border width
        
        transition: transform ease-out $animation-time, width ease-out $animation-time;
        transform: translateX(calc(var(--pep-one-multi-by-dir) * #{$side-bar-width}));
        width: calc((#{$spacing-lg} * 2) + 1px);
        
        &.is-open-state {
            transition: transform ease-out $animation-time, width ease-out $animation-time;
            transform: unset;
            width: $side-bar-width;
            // width: calc(#{$side-bar-width} + #{$content-padding});
            
            .toggle-button {
                transition: margin-inline ease-out $animation-time, transform ease-out $animation-time;
                transform: rotate(180deg);
                margin-inline: -3rem 0.25rem;
            }
            
            .toggle-button-border {
                transition: opacity calc(#{$animation-time-third} * 2) ease-out, margin-inline ease-out $animation-time;
                opacity: 0;
                margin-inline: -3rem 0.25rem;
            }
        }
        
        .toggle-button {
            $half-button-width: 0.75rem;
            
            z-index: $z-index-lowest + 1;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-top: calc(#{$top-bar-height} - #{$half-button-width});
            transition: margin-inline ease-out $animation-time, transform ease-out $animation-time;
            transform: rotate(0deg);
            margin-inline: calc(-1 * #{$half-button-width}) 0.25rem;
        }
        
        .toggle-button-border {
            transition: opacity calc(#{$animation-time-third} * 2) ease-out $animation-time-third, margin-inline ease-out $animation-time;
            opacity: 1;
            margin-inline: unset;
            width: 1px;
            padding-inline-start: $content-padding;
            margin-top: $top-bar-spacing-top;
        }
    }
    
    .mat-sidenav-container {
        position: absolute;
        bottom: 0;
        left: 0;
        right: 0;
        z-index: $z-index-high;
        height: calc(100vh - #{$header-height});
        visibility: hidden;
        
        &.mat-drawer-opened {
            visibility: unset;
        }
        
        .mat-sidenav {
            max-width: calc(#{$floating-side-bar-width} + #{$double-content-padding});
            padding-inline: $content-padding;
            
            @media (max-width: $screen-max-size-xs) {
                padding-inline: 0;
            }
            
            .side-layout {
                max-width: $floating-side-bar-width;
                width: $floating-side-bar-width;
            }
        }
    }
    
    .side-layout {
        $side-bar-width-less-padding: calc(#{$side-bar-width} - #{$double-content-padding});
        
        // display: grid;
        // grid-auto-rows: auto 1fr auto;
        // grid-auto-flow: row;
        
        // When the display is grid the max-width is not affected.
        display: block;
        
        max-width: $side-bar-width;
        width: $side-bar-width;
        padding: 0 $content-padding;
        height: 100%;
        overflow: auto;
        
        .header-content {
            height: $top-bar-height;
            padding-top: $top-bar-spacing-top;
            z-index: $z-index-lowest + 1;
            position: sticky;
            top: 0; 

            .content {
                height: $top-bar-height-with-no-top;
                display: flex;
                overflow: unset; // For showing the focus (if hidden the focus is cutted).
            }
        }
        
        .footer-content {
            height: $top-bar-height;
        }
        
        .main-content {
            // overflow: hidden;
            display: block;
            height: inherit;
            max-width: $side-bar-width;
            
            .content {
                // overflow: auto;
                height: inherit;
            }
        }
    }
}